2020-12-19 00:07:11 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-19 00:07:11 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 8828 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-19 00:07:11 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-19 00:07:12 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-19 00:07:12 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-19 00:07:12 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-19 00:07:12 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-19 00:07:13 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$193397b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-19 00:07:13 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-19 00:07:14 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2570 ms
2020-12-19 00:07:18 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-19 00:07:18 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-19 00:07:18 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-19 00:07:18 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-19 00:07:18 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-19 00:07:18 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-19 00:07:18 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 9cc58afa-0ae5-4134-a5cc-6d59b29cd16a

2020-12-19 00:07:18 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b47b7f5, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f8c3646, org.springframework.security.web.header.HeaderWriterFilter@4fd80300, org.springframework.security.web.authentication.logout.LogoutFilter@9d99851, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52ca0ad4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44fb6ebd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@506aa618, org.springframework.security.web.session.SessionManagementFilter@286866cb, org.springframework.security.web.access.ExceptionTranslationFilter@7d88fa9c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@45e7bb79]
2020-12-19 00:07:18 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-19 00:07:18 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-19 00:07:18 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-19 00:07:19 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-19 00:07:19 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-19 00:07:19 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.363 seconds (JVM running for 9.964)
2020-12-19 00:07:31 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-19 00:07:31 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 10 ms
2020-12-19 00:07:31 上午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-19 00:07:31 上午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-19 00:07:31 上午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-19 00:07:32 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PassportServiceImpl.login在Sat Dec 19 00:07:31 CST 2020时使用参数[Ljava.lang.Object;@6dcd6d40[{UsersBo(username=mt, password=123456, confirmPassword=null)}]调用,并得到了结果UsersVo(id=200505122838134554624, username=mt, face=http://122.152.205.72:88/group1/M00/00/05/CpoxxFw_8_qAIlFXAAAcIhVPdSg994.png, sex=0)，共耗时185毫秒------
2020-12-19 00:07:32 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-19 00:07:32 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Sat Dec 19 00:07:32 CST 2020时使用参数[Ljava.lang.Object;@4c22bfd0[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@1a6ea246, top.chris.shop.pojo.Carousel@751dc416, top.chris.shop.pojo.Carousel@5a06f745, top.chris.shop.pojo.Carousel@3831fea]，共耗时10毫秒------
2020-12-19 00:07:32 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Sat Dec 19 00:07:32 CST 2020时使用参数[Ljava.lang.Object;@34c07d97[{}]调用,并得到了结果[top.chris.shop.pojo.Category@6c167f6d, top.chris.shop.pojo.Category@2c762520, top.chris.shop.pojo.Category@6f3eda79, top.chris.shop.pojo.Category@58252ecc, top.chris.shop.pojo.Category@797cfb2, top.chris.shop.pojo.Category@1a55a545, top.chris.shop.pojo.Category@3a15964, top.chris.shop.pojo.Category@72034492, top.chris.shop.pojo.Category@4bd0ef3f, top.chris.shop.pojo.Category@7c18048d]，共耗时13毫秒------
2020-12-19 00:07:32 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Sat Dec 19 00:07:32 CST 2020时使用参数[Ljava.lang.Object;@79a6b0cb[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-19 00:07:34 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.CartServiceImpl.queryCartByUserId在Sat Dec 19 00:07:33 CST 2020时使用参数[Ljava.lang.Object;@450d00de[{200505122838134554624}]调用,并得到了结果[ShopCartVo(itemId=cake-1001, specId=1, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=原味, priceNormal=20000, priceDiscount=18000, buyCounts=4), ShopCartVo(itemId=cake-1001, specId=2, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=草莓味, priceNormal=20000, priceDiscount=20000, buyCounts=2), ShopCartVo(itemId=cake-1001, specId=3, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=香草味, priceNormal=20000, priceDiscount=17600, buyCounts=3), ShopCartVo(itemId=food-1006, specId=food-1006-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/food-1006/img1.png, itemName=【天天吃货】正宗农家自种南瓜 香甜可口 早餐必备, specName=单个装, priceNormal=6900, priceDiscount=6210, buyCounts=10), ShopCartVo(itemId=food-1006, specId=food-1006-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/food-1006/img1.png, itemName=【天天吃货】正宗农家自种南瓜 香甜可口 早餐必备, specName=两个装, priceNormal=6900, priceDiscount=5520, buyCounts=10), ShopCartVo(itemId=food-1006, specId=food-1006-spec-3, itemImgUrl=http://122.152.205.72:88/foodie/food-1006/img1.png, itemName=【天天吃货】正宗农家自种南瓜 香甜可口 早餐必备, specName=三个装, priceNormal=6900, priceDiscount=6900, buyCounts=10), ShopCartVo(itemId=seafood-1003, specId=seafood-1003-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/seafood-1003/img1.png, itemName=【天天吃货】帝王蟹 餐桌霸气大菜 聚会有面子, specName=十三香, priceNormal=7400, priceDiscount=6660, buyCounts=1)]，共耗时13毫秒------
2020-12-19 00:07:49 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemIdByItemSpecId在Sat Dec 19 00:07:49 CST 2020时使用参数[Ljava.lang.Object;@30d6a01[{seafood-1003-spec-1}]调用,并得到了结果seafood-1003，共耗时7毫秒------
2020-12-19 00:07:49 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.CartServiceImpl.delCartItemById在Sat Dec 19 00:07:49 CST 2020时使用参数[Ljava.lang.Object;@607d565f[{200505122838134554624,seafood-1003:seafood-1003-spec-1}]调用,并得到了结果null，共耗时5毫秒------
2020-12-19 00:08:55 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-19 00:08:55 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 5612 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-19 00:08:55 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-19 00:08:56 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-19 00:08:56 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-19 00:08:56 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-19 00:08:56 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-19 00:08:57 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce659bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-19 00:08:57 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-19 00:08:58 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2634 ms
2020-12-19 00:09:00 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-19 00:09:00 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-19 00:09:01 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-19 00:09:01 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-19 00:09:01 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-19 00:09:01 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-19 00:09:01 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 08408dd4-0840-4747-9819-badb8ae5d338

2020-12-19 00:09:01 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e050be1, org.springframework.security.web.context.SecurityContextPersistenceFilter@56ec6960, org.springframework.security.web.header.HeaderWriterFilter@10dfa7ef, org.springframework.security.web.authentication.logout.LogoutFilter@5f0677f3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47f2c722, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17b6ad97, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b47b7f5, org.springframework.security.web.session.SessionManagementFilter@786a3477, org.springframework.security.web.access.ExceptionTranslationFilter@7bec8cb0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ef041bb]
2020-12-19 00:09:01 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-19 00:09:01 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-19 00:09:01 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-19 00:09:01 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-19 00:09:01 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-19 00:09:01 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.999 seconds (JVM running for 8.519)
2020-12-19 00:09:17 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-19 00:09:17 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-19 00:09:17 上午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-19 00:09:17 上午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-19 00:09:17 上午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-19 00:09:18 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PassportServiceImpl.login在Sat Dec 19 00:09:17 CST 2020时使用参数[Ljava.lang.Object;@f36290e[{UsersBo(username=mt, password=123456, confirmPassword=null)}]调用,并得到了结果UsersVo(id=200505122838134554624, username=mt, face=http://122.152.205.72:88/group1/M00/00/05/CpoxxFw_8_qAIlFXAAAcIhVPdSg994.png, sex=0)，共耗时187毫秒------
2020-12-19 00:09:18 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-19 00:09:18 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Sat Dec 19 00:09:18 CST 2020时使用参数[Ljava.lang.Object;@35d67cef[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@1d214267, top.chris.shop.pojo.Carousel@3c6de556, top.chris.shop.pojo.Carousel@76d885a5, top.chris.shop.pojo.Carousel@706fae95]，共耗时11毫秒------
2020-12-19 00:09:18 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Sat Dec 19 00:09:18 CST 2020时使用参数[Ljava.lang.Object;@cf3ebc2[{}]调用,并得到了结果[top.chris.shop.pojo.Category@23015d37, top.chris.shop.pojo.Category@58938c49, top.chris.shop.pojo.Category@1058cef8, top.chris.shop.pojo.Category@3e68aca, top.chris.shop.pojo.Category@2aa79764, top.chris.shop.pojo.Category@6e92a7bd, top.chris.shop.pojo.Category@38eb9b99, top.chris.shop.pojo.Category@fece694, top.chris.shop.pojo.Category@19e64cba, top.chris.shop.pojo.Category@6232af74]，共耗时14毫秒------
2020-12-19 00:09:18 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Sat Dec 19 00:09:18 CST 2020时使用参数[Ljava.lang.Object;@310cd4d2[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时13毫秒------
2020-12-19 00:09:20 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.CartServiceImpl.queryCartByUserId在Sat Dec 19 00:09:20 CST 2020时使用参数[Ljava.lang.Object;@33be947c[{200505122838134554624}]调用,并得到了结果[ShopCartVo(itemId=cake-1001, specId=1, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=原味, priceNormal=20000, priceDiscount=18000, buyCounts=4), ShopCartVo(itemId=cake-1001, specId=2, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=草莓味, priceNormal=20000, priceDiscount=20000, buyCounts=2), ShopCartVo(itemId=cake-1001, specId=3, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=香草味, priceNormal=20000, priceDiscount=17600, buyCounts=3), ShopCartVo(itemId=food-1006, specId=food-1006-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/food-1006/img1.png, itemName=【天天吃货】正宗农家自种南瓜 香甜可口 早餐必备, specName=单个装, priceNormal=6900, priceDiscount=6210, buyCounts=10), ShopCartVo(itemId=food-1006, specId=food-1006-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/food-1006/img1.png, itemName=【天天吃货】正宗农家自种南瓜 香甜可口 早餐必备, specName=两个装, priceNormal=6900, priceDiscount=5520, buyCounts=10), ShopCartVo(itemId=food-1006, specId=food-1006-spec-3, itemImgUrl=http://122.152.205.72:88/foodie/food-1006/img1.png, itemName=【天天吃货】正宗农家自种南瓜 香甜可口 早餐必备, specName=三个装, priceNormal=6900, priceDiscount=6900, buyCounts=10)]，共耗时13毫秒------
2020-12-19 00:09:41 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemIdByItemSpecId在Sat Dec 19 00:09:41 CST 2020时使用参数[Ljava.lang.Object;@1242d773[{food-1006-spec-3}]调用,并得到了结果food-1006，共耗时7毫秒------
2020-12-19 00:09:41 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.CartServiceImpl.delCartItemById在Sat Dec 19 00:09:41 CST 2020时使用参数[Ljava.lang.Object;@4e3e39ba[{200505122838134554624,food-1006:food-1006-spec-3}]调用,并得到了结果null，共耗时6毫秒------
2020-12-19 00:09:54 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.CartServiceImpl.delAllCartItems在Sat Dec 19 00:09:54 CST 2020时使用参数[Ljava.lang.Object;@3564b8f2[{200505122838134554624}]调用,并得到了结果null，共耗时4毫秒------
2020-12-19 00:09:54 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
