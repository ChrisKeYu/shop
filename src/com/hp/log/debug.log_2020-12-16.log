2020-12-16 09:01:34 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 09:01:35 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 4044 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 09:01:35 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 09:01:38 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 09:01:38 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 09:01:39 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 52ms. Found 0 repository interfaces.
2020-12-16 09:01:40 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 09:01:44 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$828f4223] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 09:01:47 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 09:01:48 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 12671 ms
2020-12-16 09:02:00 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 09:02:00 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 09:02:01 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 09:02:01 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 09:02:01 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 09:02:01 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 09:02:02 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 983a3c61-009f-4293-a062-ec0e04973507

2020-12-16 09:02:02 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c5a91b4, org.springframework.security.web.context.SecurityContextPersistenceFilter@59a09be, org.springframework.security.web.header.HeaderWriterFilter@19bfbe28, org.springframework.security.web.authentication.logout.LogoutFilter@73aaec54, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d512652, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5dfc2a4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e37fb82, org.springframework.security.web.session.SessionManagementFilter@2b9aeedb, org.springframework.security.web.access.ExceptionTranslationFilter@44aa91e2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ce3409b]
2020-12-16 09:02:02 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 09:02:02 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 09:02:02 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 09:02:02 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 09:02:03 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 09:02:03 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 09:02:03 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 29.23 seconds (JVM running for 33.11)
2020-12-16 09:02:14 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 09:02:14 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 23 ms
2020-12-16 09:02:15 上午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 09:02:15 上午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 09:02:15 上午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 09:02:15 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:02:15 CST 2020时使用参数[Ljava.lang.Object;@68a3cf39[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@442a2b64, top.chris.shop.pojo.Carousel@1a0ce025, top.chris.shop.pojo.Carousel@54a64288, top.chris.shop.pojo.Carousel@228a9522]，共耗时869毫秒------
2020-12-16 09:02:15 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:02:15 CST 2020时使用参数[Ljava.lang.Object;@54ab0f0[{}]调用,并得到了结果[top.chris.shop.pojo.Category@7130b8b0, top.chris.shop.pojo.Category@80a541e, top.chris.shop.pojo.Category@271aa0cf, top.chris.shop.pojo.Category@778749ec, top.chris.shop.pojo.Category@3069a94, top.chris.shop.pojo.Category@5976844e, top.chris.shop.pojo.Category@2b184b77, top.chris.shop.pojo.Category@661dafd1, top.chris.shop.pojo.Category@51785bbc, top.chris.shop.pojo.Category@3cc1f129]，共耗时866毫秒------
2020-12-16 09:02:16 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:02:16 CST 2020时使用参数[Ljava.lang.Object;@5cc2c4b2[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时15毫秒------
2020-12-16 09:02:17 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:02:17 CST 2020时使用参数[Ljava.lang.Object;@6bcdb018[{2}]调用,并得到了结果RenderSixItemsVo(rootCatName=饼干/膨化, slogan=嘎嘣脆，一听到声音就开吃, bgColor=#f59cec, catImage=http://122.152.205.72:88/foodie/category/cookies.png, simpleItemList=[SimpleItem(itemName=【天天吃货】夹心吐司面包 全麦面包 早点早饭, itemId=bingan-1006, itemUrl=http://122.152.205.72:88/foodie/bingan-1006/img1.png), SimpleItem(itemName=【天天吃货】彩虹马卡龙 下午茶 美眉最爱, itemId=bingan-1001, itemUrl=http://122.152.205.72:88/foodie/bingan-1001/img1.png), SimpleItem(itemName=【天天吃货】可爱动物饼干 儿童早餐 孩子最爱, itemId=bingan-1003, itemUrl=http://122.152.205.72:88/foodie/bingan-1003/img1.png), SimpleItem(itemName=【天天吃货】夹心吐司面包 早餐面包 早点早饭, itemId=bingan-1005, itemUrl=http://122.152.205.72:88/foodie/bingan-1005/img1.png), SimpleItem(itemName=【天天吃货】男人最爱 秋葵饼干 嘎嘣脆, itemId=bingan-1002, itemUrl=http://122.152.205.72:88/foodie/bingan-1002/img1.png), SimpleItem(itemName=【天天吃货】可爱美丽甜甜圈 最美下午茶, itemId=bingan-1004, itemUrl=http://122.152.205.72:88/foodie/bingan-1004/img1.png), SimpleItem(itemName=进口虾条奇趣好吃不嫌多, itemId=cookies-68, itemUrl=http://122.152.205.72:88/foodie/cookies-68/img1.png), SimpleItem(itemName=儿时记忆儿时最爱 好吃回味薯条, itemId=cookies-60, itemUrl=http://122.152.205.72:88/foodie/cookies-60/img1.png), SimpleItem(itemName=超级好吃巧克力威化饼干 女女最爱, itemId=cookies-55, itemUrl=http://122.152.205.72:88/foodie/cookies-55/img1.png), SimpleItem(itemName=超级好吃巧克力威化饼干 女女最爱, itemId=cookies-63, itemUrl=http://122.152.205.72:88/foodie/cookies-63/img1.png), SimpleItem(itemName=好吃下午茶曲奇饼干, itemId=cookies-57, itemUrl=http://122.152.205.72:88/foodie/cookies-57/img1.png), SimpleItem(itemName=夹心饼干美味下午茶, itemId=cookies-52, itemUrl=http://122.152.205.72:88/foodie/cookies-52/img1.png), SimpleItem(itemName=【天天吃货】休闲虾条 进口虾条 超美味下午茶, itemId=cookies-65, itemUrl=http://122.152.205.72:88/foodie/cookies-65/img1.png), SimpleItem(itemName=【天天吃货】儿童饼干 早餐必备, itemId=cookies-59, itemUrl=http://122.152.205.72:88/foodie/cookies-59/img1.png), SimpleItem(itemName=甜甜美食饼干 儿童最爱, itemId=cookies-54, itemUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png), SimpleItem(itemName=美食推荐 山药鼠标美味养生, itemId=cookies-62, itemUrl=http://122.152.205.72:88/foodie/cookies-62/img1.png), SimpleItem(itemName=甜甜美食饼干 儿童最爱, itemId=cookies-56, itemUrl=http://122.152.205.72:88/foodie/cookies-56/img1.png), SimpleItem(itemName=嘎嘣脆酥酥麻麻饼干 休闲食品下午茶最爱, itemId=cookies-51, itemUrl=http://122.152.205.72:88/foodie/cookies-51/img1.png), SimpleItem(itemName=【天天吃货】正宗网红超好吃蛋黄薯片, itemId=cookies-64, itemUrl=http://122.152.205.72:88/foodie/cookies-64/img1.png), SimpleItem(itemName=【天天吃货】无糖者最爱无糖饼干 酥酥脆脆, itemId=cookies-58, itemUrl=http://122.152.205.72:88/foodie/cookies-58/img1.png), SimpleItem(itemName=【天天吃货】儿童饼干 成人饼干 趣趣闲闲, itemId=cookies-53, itemUrl=http://122.152.205.72:88/foodie/cookies-53/img1.png)])，共耗时20毫秒------
2020-12-16 09:02:17 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:02:17 CST 2020时使用参数[Ljava.lang.Object;@2c27244f[{3}]调用,并得到了结果RenderSixItemsVo(rootCatName=熟食/肉类, slogan=食肉者最爱绝佳美食, bgColor=#b474fe, catImage=http://122.152.205.72:88/foodie/category/meat.png, simpleItemList=[SimpleItem(itemName=【天天吃货】腊肠 猪肉牛肉鸡肉 肉类最佳下饭菜, itemId=meat-1005, itemUrl=http://122.152.205.72:88/foodie/meat-1005/img1.png), SimpleItem(itemName=【天天吃货】肉铺 鸡肉猪肉牛肉 甜辣香, itemId=meat-1002, itemUrl=http://122.152.205.72:88/foodie/meat-1002/img1.png), SimpleItem(itemName=【天天吃货】肉松 猪肉牛肉鸡肉 早饭配菜儿童最爱, itemId=meat-1004, itemUrl=http://122.152.205.72:88/foodie/meat-1004/img1.png), SimpleItem(itemName=【天天吃货】烤肠 猪肉牛肉鸡肉 肉类最佳零食, itemId=meat-1006, itemUrl=http://122.152.205.72:88/foodie/meat-1006/img1.png), SimpleItem(itemName=【天天吃货】酥肉 鸡肉猪肉牛肉 脆酥香, itemId=meat-1001, itemUrl=http://122.152.205.72:88/foodie/meat-1001/img1.png), SimpleItem(itemName=【天天吃货】肉粒 猪肉粒牛肉粒鸡肉粒 粒粒香, itemId=meat-1003, itemUrl=http://122.152.205.72:88/foodie/meat-1003/img1.png), SimpleItem(itemName=香港进口牛肉脯 香甜可口, itemId=food-74, itemUrl=http://122.152.205.72:88/foodie/food-74/img1.png), SimpleItem(itemName=香港进口酒味腊肠 香甜可口下酒菜, itemId=food-89, itemUrl=http://122.152.205.72:88/foodie/food-89/img1.png), SimpleItem(itemName=东北广式香肠 香甜可口下酒菜, itemId=food-84, itemUrl=http://122.152.205.72:88/foodie/food-84/img1.png), SimpleItem(itemName=香港进口牛肉干 香甜可口, itemId=food-78, itemUrl=http://122.152.205.72:88/foodie/food-78/img1.png), SimpleItem(itemName=香港进口腊味香肠 香甜可口, itemId=food-86, itemUrl=http://122.152.205.72:88/foodie/food-86/img1.png), SimpleItem(itemName=台湾进口猪肉松 香甜可口, itemId=food-81, itemUrl=http://122.152.205.72:88/foodie/food-81/img1.png), SimpleItem(itemName=台湾进口散装肉脯 香甜可口, itemId=food-76, itemUrl=http://122.152.205.72:88/foodie/food-76/img1.png), SimpleItem(itemName=香港进口鱼肠 香甜可口, itemId=food-88, itemUrl=http://122.152.205.72:88/foodie/food-88/img1.png), SimpleItem(itemName=香港进口腊味香肠 香甜可口, itemId=food-83, itemUrl=http://122.152.205.72:88/foodie/food-83/img1.png), SimpleItem(itemName=台湾进口散装肉干 香甜可口, itemId=food-77, itemUrl=http://122.152.205.72:88/foodie/food-77/img1.png), SimpleItem(itemName=美国进口火腿肠 香甜可口下酒菜, itemId=food-85, itemUrl=http://122.152.205.72:88/foodie/food-85/img1.png), SimpleItem(itemName=香港进口牛肉松 香甜可口, itemId=food-80, itemUrl=http://122.152.205.72:88/foodie/food-80/img1.png), SimpleItem(itemName=澳门进口鸡肉脯 香甜可口下酒菜, itemId=food-75, itemUrl=http://122.152.205.72:88/foodie/food-75/img1.png), SimpleItem(itemName=澳门进口鸡肉肠 香甜可口下酒菜, itemId=food-87, itemUrl=http://122.152.205.72:88/foodie/food-87/img1.png), SimpleItem(itemName=台湾进口儿童肉松 香甜可口, itemId=food-82, itemUrl=http://122.152.205.72:88/foodie/food-82/img1.png), SimpleItem(itemName=香港散装肉脯进口 香甜可口, itemId=food-761, itemUrl=http://122.152.205.72:88/foodie/food-761/img1.png)])，共耗时17毫秒------
2020-12-16 09:02:17 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:02:17 CST 2020时使用参数[Ljava.lang.Object;@13b05f31[{4}]调用,并得到了结果RenderSixItemsVo(rootCatName=素食/卤味, slogan=香辣甜辣麻辣，辣了才有味, bgColor=#82ceff, catImage=http://122.152.205.72:88/foodie/category/duck.png, simpleItemList=[SimpleItem(itemName=【天天吃货】武汉鸭胗 卤味齐全 香辣麻辣, itemId=snacks-1002, itemUrl=http://122.152.205.72:88/foodie/snacks-1002/img1.png), SimpleItem(itemName=【天天吃货】豆腐干 卤味齐全 香辣麻辣, itemId=snacks-1004, itemUrl=http://122.152.205.72:88/foodie/snacks-1004/img1.png), SimpleItem(itemName=【天天吃货】儿时记忆 辣条 香辣麻辣, itemId=snacks-1006, itemUrl=http://122.152.205.72:88/foodie/snacks-1006/img1.png), SimpleItem(itemName=【天天吃货】武汉鸭脖 卤味齐全 香辣麻辣, itemId=snacks-1001, itemUrl=http://122.152.205.72:88/foodie/snacks-1001/img1.png), SimpleItem(itemName=【天天吃货】武汉鸭翅 卤味齐全 香辣麻辣, itemId=snacks-1003, itemUrl=http://122.152.205.72:88/foodie/snacks-1003/img1.png), SimpleItem(itemName=【天天吃货】农家乐农家菜 香喷喷野生笋干, itemId=snacks-1005, itemUrl=http://122.152.205.72:88/foodie/snacks-1005/img1.png), SimpleItem(itemName=农家有机笋干 香甜可口, itemId=snacks-95, itemUrl=http://122.152.205.72:88/foodie/snacks-95/img1.png), SimpleItem(itemName=新鲜卤鸭翅 香甜可口, itemId=snacks-103, itemUrl=http://122.152.205.72:88/foodie/snacks-103/img1.png), SimpleItem(itemName=甜辣苏州有名豆腐干 好吃呦~, itemId=snacks-92, itemUrl=http://122.152.205.72:88/foodie/snacks-92/img1.png), SimpleItem(itemName=好吃香辣泡椒脆笋, itemId=snacks-94, itemUrl=http://122.152.205.72:88/foodie/snacks-94/img1.png), SimpleItem(itemName=新鲜鸭胗 香甜可口, itemId=snacks-102, itemUrl=http://122.152.205.72:88/foodie/snacks-102/img1.png), SimpleItem(itemName=好吃香辣农家笋 有机食物香喷喷, itemId=snacks-97, itemUrl=http://122.152.205.72:88/foodie/snacks-97/img1.png), SimpleItem(itemName=新鲜卤辣香菇 香甜可口, itemId=snacks-90, itemUrl=http://122.152.205.72:88/foodie/snacks-90/img1.png), SimpleItem(itemName=新鲜卤辣鸭脖 香甜可口, itemId=snacks-100, itemUrl=http://122.152.205.72:88/foodie/snacks-100/img1.png), SimpleItem(itemName=儿时回味 儿时记忆辣条, itemId=snacks-93, itemUrl=http://122.152.205.72:88/foodie/snacks-93/img1.png), SimpleItem(itemName=新鲜卤味鸭锁骨 香甜可口, itemId=snacks-101, itemUrl=http://122.152.205.72:88/foodie/snacks-101/img1.png)])，共耗时127毫秒------
2020-12-16 09:02:21 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 09:02:21 CST 2020时使用参数[Ljava.lang.Object;@4e8b1d51[{2}]调用,并得到了结果[CategoryVo(id=13, name=饼干, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@54dbd945, top.chris.shop.pojo.Category@39dc3e8a, top.chris.shop.pojo.Category@1d464451, top.chris.shop.pojo.Category@b31b33d, top.chris.shop.pojo.Category@1aa52ef, top.chris.shop.pojo.Category@595a043e, top.chris.shop.pojo.Category@7611a788, top.chris.shop.pojo.Category@703f5a2c, top.chris.shop.pojo.Category@23d153ee]), CategoryVo(id=14, name=薯片, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@2a23d85e, top.chris.shop.pojo.Category@51f50775, top.chris.shop.pojo.Category@5b11d95d, top.chris.shop.pojo.Category@72f6bff2, top.chris.shop.pojo.Category@46a368da]), CategoryVo(id=15, name=虾条, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@3f9401d4, top.chris.shop.pojo.Category@6a9afc4a, top.chris.shop.pojo.Category@2dd4d7c4, top.chris.shop.pojo.Category@706c8f1c, top.chris.shop.pojo.Category@6fe9ba64])]，共耗时15毫秒------
2020-12-16 09:02:21 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 09:02:21 CST 2020时使用参数[Ljava.lang.Object;@5f8c4303[{1}]调用,并得到了结果[CategoryVo(id=11, name=蛋糕, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@27d03df7, top.chris.shop.pojo.Category@e07159a, top.chris.shop.pojo.Category@2764646e, top.chris.shop.pojo.Category@1acdbfda, top.chris.shop.pojo.Category@3cd416f1, top.chris.shop.pojo.Category@a496f34, top.chris.shop.pojo.Category@e8a2d07]), CategoryVo(id=12, name=点心, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@794e7063, top.chris.shop.pojo.Category@65319225, top.chris.shop.pojo.Category@24c07178, top.chris.shop.pojo.Category@7b7d82f2, top.chris.shop.pojo.Category@713a2896, top.chris.shop.pojo.Category@18f32c2e, top.chris.shop.pojo.Category@3f9fc5f9])]，共耗时7毫秒------
2020-12-16 09:02:25 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:02:24 CST 2020时使用参数[Ljava.lang.Object;@51d70fdc[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6c6b9d90，共耗时118毫秒------
2020-12-16 09:02:44 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 09:02:44 CST 2020时使用参数[Ljava.lang.Object;@47102d19[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时19毫秒------
2020-12-16 09:02:44 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 09:02:44 CST 2020时使用参数[Ljava.lang.Object;@6d636c4c[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时13毫秒------
2020-12-16 09:02:44 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 09:02:44 CST 2020时使用参数[Ljava.lang.Object;@219030b9[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@424d7974，共耗时17毫秒------
2020-12-16 09:02:53 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 09:02:53 CST 2020时使用参数[Ljava.lang.Object;@226e5c56[{{cookies-54-spec-1,cookies-54-spec-2,cookies-54-spec-3}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350), ShopCartVo(specId=cookies-54-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=原味, priceNormal=21500, priceDiscount=17200), ShopCartVo(specId=cookies-54-spec-3, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=草莓味, priceNormal=21500, priceDiscount=21500)]，共耗时61毫秒------
2020-12-16 09:02:59 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 09:02:59 CST 2020时使用参数[Ljava.lang.Object;@11625f25[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时15毫秒------
2020-12-16 09:07:39 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 09:07:39 CST 2020时使用参数[Ljava.lang.Object;@12e9fe6a[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时5毫秒------
2020-12-16 09:07:40 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:07:40 CST 2020时使用参数[Ljava.lang.Object;@5da3ac06[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@57496436，共耗时3毫秒------
2020-12-16 09:07:41 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:07:41 CST 2020时使用参数[Ljava.lang.Object;@6fcff641[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@424a1ac8, top.chris.shop.pojo.Carousel@731c77d1, top.chris.shop.pojo.Carousel@6ac69ccc, top.chris.shop.pojo.Carousel@7aab022b]，共耗时5毫秒------
2020-12-16 09:07:41 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:07:41 CST 2020时使用参数[Ljava.lang.Object;@68bb3638[{}]调用,并得到了结果[top.chris.shop.pojo.Category@33f4e6bc, top.chris.shop.pojo.Category@78312c11, top.chris.shop.pojo.Category@77e88613, top.chris.shop.pojo.Category@46d36420, top.chris.shop.pojo.Category@5286bb40, top.chris.shop.pojo.Category@23a644a5, top.chris.shop.pojo.Category@10cd86dc, top.chris.shop.pojo.Category@4d620281, top.chris.shop.pojo.Category@2a59fcd6, top.chris.shop.pojo.Category@3bcb0654]，共耗时8毫秒------
2020-12-16 09:07:45 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:07:45 CST 2020时使用参数[Ljava.lang.Object;@5222d5a7[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时12毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@e938ce4[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@2ca7efd7，共耗时4毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@52a71bdf[{[cookies-54-spec-1, cookies-54-spec-2, cookies-54-spec-3]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@6b8e8914, top.chris.shop.pojo.ItemsSpec@62150b2a, top.chris.shop.pojo.ItemsSpec@5dc56e17]，共耗时31毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@62890424[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@144a7bb4，共耗时6毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@448d2d37[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@6e8fa9a6，共耗时2毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@1541b1b5[{top.chris.shop.pojo.ItemsSpec@6b8e8914}]调用,并得到了结果1，共耗时23毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@50d9dfc0[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@2e17123a，共耗时5毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@3713ed56[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@292a13ab，共耗时4毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@46dcbb56[{top.chris.shop.pojo.ItemsSpec@62150b2a}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@2762c593[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@adfb1db，共耗时4毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@45cec0db[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@7431cbac，共耗时3毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@4c84f35e[{top.chris.shop.pojo.ItemsSpec@5dc56e17}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 09:27:27 CST 2020时使用参数[Ljava.lang.Object;@40614535[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1,cookies-54-spec-2,cookies-54-spec-3, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012166PZX10SKD4，共耗时211毫秒------
2020-12-16 09:27:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 09:27:38 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 09:27:38 CST 2020时使用参数[Ljava.lang.Object;@706ba2a0[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时8毫秒------
2020-12-16 09:27:38 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 09:27:38 CST 2020时使用参数[Ljava.lang.Object;@56ac8ab3[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@48132c21，共耗时9毫秒------
2020-12-16 09:27:38 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 09:27:38 CST 2020时使用参数[Ljava.lang.Object;@6426e79f[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=259, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时14毫秒------
2020-12-16 09:27:41 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 09:27:41 CST 2020时使用参数[Ljava.lang.Object;@2862a17[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时4毫秒------
2020-12-16 09:27:43 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 09:27:43 CST 2020时使用参数[Ljava.lang.Object;@d425f27[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时4毫秒------
2020-12-16 09:27:45 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 09:27:45 CST 2020时使用参数[Ljava.lang.Object;@3e2f72be[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@5659c018，共耗时2毫秒------
2020-12-16 09:27:45 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 09:27:45 CST 2020时使用参数[Ljava.lang.Object;@14585054[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@51a77ae3]，共耗时3毫秒------
2020-12-16 09:27:45 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:27:45 CST 2020时使用参数[Ljava.lang.Object;@605aed2d[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@188a88a8，共耗时4毫秒------
2020-12-16 09:27:45 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:27:45 CST 2020时使用参数[Ljava.lang.Object;@2fb8c39d[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@183c60c2，共耗时1毫秒------
2020-12-16 09:27:45 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:27:45 CST 2020时使用参数[Ljava.lang.Object;@eb01a8a[{top.chris.shop.pojo.ItemsSpec@51a77ae3}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 09:27:45 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 09:27:45 CST 2020时使用参数[Ljava.lang.Object;@517c3023[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=1)}]调用,并得到了结果2012166R2P0C52A8，共耗时77毫秒------
2020-12-16 09:27:45 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 09:31:05 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:31:05 CST 2020时使用参数[Ljava.lang.Object;@1e1fd16d[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@46fd4a00, top.chris.shop.pojo.Carousel@45717871, top.chris.shop.pojo.Carousel@770d021d, top.chris.shop.pojo.Carousel@17792128]，共耗时5毫秒------
2020-12-16 09:31:05 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:31:05 CST 2020时使用参数[Ljava.lang.Object;@22217615[{}]调用,并得到了结果[top.chris.shop.pojo.Category@200dd510, top.chris.shop.pojo.Category@44b959f7, top.chris.shop.pojo.Category@444856c0, top.chris.shop.pojo.Category@6d700182, top.chris.shop.pojo.Category@239bfc69, top.chris.shop.pojo.Category@2d636f0c, top.chris.shop.pojo.Category@2b1bd236, top.chris.shop.pojo.Category@468abac6, top.chris.shop.pojo.Category@3a0e6eca, top.chris.shop.pojo.Category@ca37d88]，共耗时3毫秒------
2020-12-16 09:31:05 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:31:05 CST 2020时使用参数[Ljava.lang.Object;@7c76bb2c[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-16 09:31:06 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:31:06 CST 2020时使用参数[Ljava.lang.Object;@360543c1[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@437f133b，共耗时7毫秒------
2020-12-16 09:31:14 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 09:31:14 CST 2020时使用参数[Ljava.lang.Object;@74bdc667[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时2毫秒------
2020-12-16 09:31:14 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 09:31:14 CST 2020时使用参数[Ljava.lang.Object;@6ab65507[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@da900a9，共耗时19毫秒------
2020-12-16 09:31:14 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 09:31:14 CST 2020时使用参数[Ljava.lang.Object;@13366f93[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=258, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时26毫秒------
2020-12-16 09:31:18 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 09:31:18 CST 2020时使用参数[Ljava.lang.Object;@1488ad9d[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时6毫秒------
2020-12-16 09:31:20 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 09:31:20 CST 2020时使用参数[Ljava.lang.Object;@613ed511[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时3毫秒------
2020-12-16 09:31:22 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 09:31:22 CST 2020时使用参数[Ljava.lang.Object;@1f7c4326[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@61069096，共耗时3毫秒------
2020-12-16 09:31:22 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 09:31:22 CST 2020时使用参数[Ljava.lang.Object;@7007a559[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@d1fbd0c]，共耗时3毫秒------
2020-12-16 09:31:22 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:31:22 CST 2020时使用参数[Ljava.lang.Object;@7552770d[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@38322993，共耗时2毫秒------
2020-12-16 09:31:22 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:31:22 CST 2020时使用参数[Ljava.lang.Object;@5015f38d[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@36990c9d，共耗时2毫秒------
2020-12-16 09:31:22 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:31:22 CST 2020时使用参数[Ljava.lang.Object;@cf6804[{top.chris.shop.pojo.ItemsSpec@d1fbd0c}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 09:31:22 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 09:31:22 CST 2020时使用参数[Ljava.lang.Object;@45cc3933[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=1)}]调用,并得到了结果2012166S8BF0B828，共耗时18毫秒------
2020-12-16 09:31:22 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 09:31:53 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:31:53 CST 2020时使用参数[Ljava.lang.Object;@6a82d1f1[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@63183385，共耗时7毫秒------
2020-12-16 09:31:53 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:31:53 CST 2020时使用参数[Ljava.lang.Object;@2409db35[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@56233c35, top.chris.shop.pojo.Carousel@62361054, top.chris.shop.pojo.Carousel@1e107891, top.chris.shop.pojo.Carousel@742ac815]，共耗时6毫秒------
2020-12-16 09:31:53 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:31:53 CST 2020时使用参数[Ljava.lang.Object;@63381f5a[{}]调用,并得到了结果[top.chris.shop.pojo.Category@42d1c7cc, top.chris.shop.pojo.Category@cf063e0, top.chris.shop.pojo.Category@18dd5161, top.chris.shop.pojo.Category@3b3c4fef, top.chris.shop.pojo.Category@771f10e3, top.chris.shop.pojo.Category@78ff9283, top.chris.shop.pojo.Category@adb92a4, top.chris.shop.pojo.Category@53c1e727, top.chris.shop.pojo.Category@5cd67db4, top.chris.shop.pojo.Category@58398727]，共耗时2毫秒------
2020-12-16 09:31:53 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:31:53 CST 2020时使用参数[Ljava.lang.Object;@10043bf9[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时5毫秒------
2020-12-16 09:31:57 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 09:31:57 CST 2020时使用参数[Ljava.lang.Object;@54383563[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时8毫秒------
2020-12-16 09:31:57 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 09:31:57 CST 2020时使用参数[Ljava.lang.Object;@2d232bcd[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=257, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时15毫秒------
2020-12-16 09:31:57 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 09:31:57 CST 2020时使用参数[Ljava.lang.Object;@43307aba[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@3a1fed47，共耗时8毫秒------
2020-12-16 09:32:00 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 09:32:00 CST 2020时使用参数[Ljava.lang.Object;@326e1c73[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时4毫秒------
2020-12-16 09:32:03 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 09:32:03 CST 2020时使用参数[Ljava.lang.Object;@4aa83be7[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时4毫秒------
2020-12-16 09:32:06 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 09:32:06 CST 2020时使用参数[Ljava.lang.Object;@626f3b4d[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@21518eca，共耗时2毫秒------
2020-12-16 09:32:06 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 09:32:06 CST 2020时使用参数[Ljava.lang.Object;@16ea04b1[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@dc4e072]，共耗时1毫秒------
2020-12-16 09:32:06 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:32:06 CST 2020时使用参数[Ljava.lang.Object;@3936d909[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@6aa82b7b，共耗时2毫秒------
2020-12-16 09:32:06 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:32:06 CST 2020时使用参数[Ljava.lang.Object;@2d799956[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@2208f361，共耗时1毫秒------
2020-12-16 09:32:06 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:32:06 CST 2020时使用参数[Ljava.lang.Object;@2844ceec[{top.chris.shop.pojo.ItemsSpec@dc4e072}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 09:32:06 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 09:32:06 CST 2020时使用参数[Ljava.lang.Object;@2a280467[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=1)}]调用,并得到了结果2012166SG5FWY8M8，共耗时18毫秒------
2020-12-16 09:32:06 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 09:33:21 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:33:21 CST 2020时使用参数[Ljava.lang.Object;@3c5fc9d4[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@52d306d1，共耗时6毫秒------
2020-12-16 09:33:21 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:33:21 CST 2020时使用参数[Ljava.lang.Object;@790ba421[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@4336dd39, top.chris.shop.pojo.Carousel@62221600, top.chris.shop.pojo.Carousel@4106bc1c, top.chris.shop.pojo.Carousel@658822b1]，共耗时2毫秒------
2020-12-16 09:33:21 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:33:21 CST 2020时使用参数[Ljava.lang.Object;@20f804e8[{}]调用,并得到了结果[top.chris.shop.pojo.Category@58eca3c0, top.chris.shop.pojo.Category@5fca4002, top.chris.shop.pojo.Category@33a5cb57, top.chris.shop.pojo.Category@531a568f, top.chris.shop.pojo.Category@6e550d8f, top.chris.shop.pojo.Category@63928a17, top.chris.shop.pojo.Category@7e701a41, top.chris.shop.pojo.Category@7f5f852e, top.chris.shop.pojo.Category@3920c63f, top.chris.shop.pojo.Category@4e95313e]，共耗时3毫秒------
2020-12-16 09:33:21 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:33:21 CST 2020时使用参数[Ljava.lang.Object;@27c0ee2c[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-16 09:33:23 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 09:33:23 CST 2020时使用参数[Ljava.lang.Object;@973baa7[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时3毫秒------
2020-12-16 09:33:23 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 09:33:23 CST 2020时使用参数[Ljava.lang.Object;@4e610649[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=256, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时13毫秒------
2020-12-16 09:33:23 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 09:33:23 CST 2020时使用参数[Ljava.lang.Object;@4213d1aa[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@8155e8d，共耗时11毫秒------
2020-12-16 09:33:26 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 09:33:26 CST 2020时使用参数[Ljava.lang.Object;@54aeba58[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时3毫秒------
2020-12-16 09:33:28 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 09:33:28 CST 2020时使用参数[Ljava.lang.Object;@28de5a66[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时6毫秒------
2020-12-16 09:33:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 09:33:31 CST 2020时使用参数[Ljava.lang.Object;@7c160591[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@4f475a13，共耗时2毫秒------
2020-12-16 09:33:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 09:33:31 CST 2020时使用参数[Ljava.lang.Object;@4a9e3161[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@6e89f2e]，共耗时2毫秒------
2020-12-16 09:33:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:33:31 CST 2020时使用参数[Ljava.lang.Object;@29221594[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@120c2ce8，共耗时3毫秒------
2020-12-16 09:33:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:33:31 CST 2020时使用参数[Ljava.lang.Object;@75a15b9b[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@4c966e0e，共耗时2毫秒------
2020-12-16 09:33:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:33:31 CST 2020时使用参数[Ljava.lang.Object;@6e7ec726[{top.chris.shop.pojo.ItemsSpec@6e89f2e}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 09:33:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 09:33:31 CST 2020时使用参数[Ljava.lang.Object;@352e3704[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012166T0AKY6CX4，共耗时16毫秒------
2020-12-16 09:33:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 09:34:18 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:34:18 CST 2020时使用参数[Ljava.lang.Object;@61ae299a[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@537142b9, top.chris.shop.pojo.Carousel@289350d3, top.chris.shop.pojo.Carousel@7c61502f, top.chris.shop.pojo.Carousel@6c1344c0]，共耗时6毫秒------
2020-12-16 09:34:18 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:34:18 CST 2020时使用参数[Ljava.lang.Object;@416bac68[{}]调用,并得到了结果[top.chris.shop.pojo.Category@655a23eb, top.chris.shop.pojo.Category@73d14f94, top.chris.shop.pojo.Category@194a7706, top.chris.shop.pojo.Category@5de80ab, top.chris.shop.pojo.Category@31afbe80, top.chris.shop.pojo.Category@48fbface, top.chris.shop.pojo.Category@2c35690, top.chris.shop.pojo.Category@73e955bb, top.chris.shop.pojo.Category@3ffeaef8, top.chris.shop.pojo.Category@28c41e43]，共耗时4毫秒------
2020-12-16 09:34:18 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:34:18 CST 2020时使用参数[Ljava.lang.Object;@59dc1d97[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时8毫秒------
2020-12-16 09:34:18 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:34:18 CST 2020时使用参数[Ljava.lang.Object;@79b2170a[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@1826a764，共耗时7毫秒------
2020-12-16 09:34:25 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 09:34:25 CST 2020时使用参数[Ljava.lang.Object;@6679ea67[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6e715faa，共耗时2毫秒------
2020-12-16 09:34:25 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 09:34:25 CST 2020时使用参数[Ljava.lang.Object;@1c7875f3[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时1毫秒------
2020-12-16 09:34:25 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 09:34:25 CST 2020时使用参数[Ljava.lang.Object;@487e1bdc[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=255, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时13毫秒------
2020-12-16 09:34:28 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 09:34:28 CST 2020时使用参数[Ljava.lang.Object;@1d15ab60[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时7毫秒------
2020-12-16 09:34:30 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 09:34:30 CST 2020时使用参数[Ljava.lang.Object;@59ad1987[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时2毫秒------
2020-12-16 09:34:32 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 09:34:32 CST 2020时使用参数[Ljava.lang.Object;@139f1d06[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@43e8db82，共耗时2毫秒------
2020-12-16 09:34:32 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 09:34:32 CST 2020时使用参数[Ljava.lang.Object;@2b2ea830[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@4032f77e]，共耗时2毫秒------
2020-12-16 09:34:32 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:34:32 CST 2020时使用参数[Ljava.lang.Object;@5d50fcd1[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@361b063，共耗时3毫秒------
2020-12-16 09:34:32 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:34:32 CST 2020时使用参数[Ljava.lang.Object;@9602e48[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@530cedc1，共耗时2毫秒------
2020-12-16 09:34:32 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:34:32 CST 2020时使用参数[Ljava.lang.Object;@4ccd1e2e[{top.chris.shop.pojo.ItemsSpec@4032f77e}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 09:34:32 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 09:34:32 CST 2020时使用参数[Ljava.lang.Object;@61c637c4[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012166T9Z1WYCH0，共耗时21毫秒------
2020-12-16 09:34:32 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 09:35:11 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:35:11 CST 2020时使用参数[Ljava.lang.Object;@64c9f3e4[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@7efdefd5，共耗时6毫秒------
2020-12-16 09:35:12 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:35:12 CST 2020时使用参数[Ljava.lang.Object;@f5bfcdb[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@42e9506, top.chris.shop.pojo.Carousel@1ccdcd3a, top.chris.shop.pojo.Carousel@7a9fc52, top.chris.shop.pojo.Carousel@57446558]，共耗时2毫秒------
2020-12-16 09:35:12 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:35:12 CST 2020时使用参数[Ljava.lang.Object;@7a6ac803[{}]调用,并得到了结果[top.chris.shop.pojo.Category@1d9a4acc, top.chris.shop.pojo.Category@5a660880, top.chris.shop.pojo.Category@26462f7d, top.chris.shop.pojo.Category@ac0c166, top.chris.shop.pojo.Category@45c326d8, top.chris.shop.pojo.Category@2f0b14e8, top.chris.shop.pojo.Category@38a1ebb3, top.chris.shop.pojo.Category@3466c630, top.chris.shop.pojo.Category@684fc382, top.chris.shop.pojo.Category@1f943637]，共耗时3毫秒------
2020-12-16 09:35:12 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:35:12 CST 2020时使用参数[Ljava.lang.Object;@61f2db96[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时6毫秒------
2020-12-16 09:36:25 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:36:25 CST 2020时使用参数[Ljava.lang.Object;@4d708e94[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@65e83bd9，共耗时5毫秒------
2020-12-16 09:36:26 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:36:26 CST 2020时使用参数[Ljava.lang.Object;@280807e2[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@6dd97d60, top.chris.shop.pojo.Carousel@4b91d944, top.chris.shop.pojo.Carousel@6c6ca881, top.chris.shop.pojo.Carousel@4b385f9]，共耗时2毫秒------
2020-12-16 09:36:26 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:36:26 CST 2020时使用参数[Ljava.lang.Object;@668b9a59[{}]调用,并得到了结果[top.chris.shop.pojo.Category@5e04e763, top.chris.shop.pojo.Category@5b4d8a61, top.chris.shop.pojo.Category@4c416053, top.chris.shop.pojo.Category@762272d0, top.chris.shop.pojo.Category@f64ac88, top.chris.shop.pojo.Category@38cd2187, top.chris.shop.pojo.Category@7f499d35, top.chris.shop.pojo.Category@1a18c4fe, top.chris.shop.pojo.Category@30b22bd9, top.chris.shop.pojo.Category@6122e551]，共耗时3毫秒------
2020-12-16 09:36:26 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:36:26 CST 2020时使用参数[Ljava.lang.Object;@7797de7e[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时5毫秒------
2020-12-16 09:37:28 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:37:28 CST 2020时使用参数[Ljava.lang.Object;@6deb43d4[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@2c9139bc，共耗时5毫秒------
2020-12-16 09:37:29 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:37:29 CST 2020时使用参数[Ljava.lang.Object;@64ac2e49[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@58a9598e, top.chris.shop.pojo.Carousel@6deabe4a, top.chris.shop.pojo.Carousel@7ff52044, top.chris.shop.pojo.Carousel@7aae8795]，共耗时4毫秒------
2020-12-16 09:37:29 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:37:29 CST 2020时使用参数[Ljava.lang.Object;@51c95ec2[{}]调用,并得到了结果[top.chris.shop.pojo.Category@62657b43, top.chris.shop.pojo.Category@6c98f972, top.chris.shop.pojo.Category@181c5ff4, top.chris.shop.pojo.Category@3382d7b, top.chris.shop.pojo.Category@4a4ef13c, top.chris.shop.pojo.Category@61b6d26e, top.chris.shop.pojo.Category@1bafc253, top.chris.shop.pojo.Category@593e77a8, top.chris.shop.pojo.Category@6444aaa2, top.chris.shop.pojo.Category@33b631e6]，共耗时3毫秒------
2020-12-16 09:37:29 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:37:29 CST 2020时使用参数[Ljava.lang.Object;@54ad41cf[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时4毫秒------
2020-12-16 09:38:24 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:38:24 CST 2020时使用参数[Ljava.lang.Object;@5bd6d8a0[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@38ac2c1，共耗时2毫秒------
2020-12-16 09:38:24 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:38:24 CST 2020时使用参数[Ljava.lang.Object;@778a953c[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@5c1a5f50, top.chris.shop.pojo.Carousel@35286f52, top.chris.shop.pojo.Carousel@32017a4f, top.chris.shop.pojo.Carousel@11012a46]，共耗时4毫秒------
2020-12-16 09:38:24 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:38:24 CST 2020时使用参数[Ljava.lang.Object;@534aae6b[{}]调用,并得到了结果[top.chris.shop.pojo.Category@7ae6061f, top.chris.shop.pojo.Category@11c2464, top.chris.shop.pojo.Category@16918a06, top.chris.shop.pojo.Category@10ae4749, top.chris.shop.pojo.Category@5a326dbd, top.chris.shop.pojo.Category@3a6d5d9b, top.chris.shop.pojo.Category@2036216a, top.chris.shop.pojo.Category@42c0ae2a, top.chris.shop.pojo.Category@b566c4a, top.chris.shop.pojo.Category@5b87693e]，共耗时6毫秒------
2020-12-16 09:38:24 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:38:24 CST 2020时使用参数[Ljava.lang.Object;@20e7de2c[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时3毫秒------
2020-12-16 09:38:40 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 09:38:40 CST 2020时使用参数[Ljava.lang.Object;@705e910c[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@51d8f5a8，共耗时2毫秒------
2020-12-16 09:38:40 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 09:38:40 CST 2020时使用参数[Ljava.lang.Object;@3ed71f01[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=254, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时15毫秒------
2020-12-16 09:38:40 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 09:38:40 CST 2020时使用参数[Ljava.lang.Object;@460570a0[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时9毫秒------
2020-12-16 09:38:42 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 09:38:42 CST 2020时使用参数[Ljava.lang.Object;@19933d6a[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时3毫秒------
2020-12-16 09:38:45 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 09:38:45 CST 2020时使用参数[Ljava.lang.Object;@403bc3a0[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时3毫秒------
2020-12-16 09:38:47 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 09:38:47 CST 2020时使用参数[Ljava.lang.Object;@680c4624[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@4023cf9a，共耗时2毫秒------
2020-12-16 09:38:47 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 09:38:47 CST 2020时使用参数[Ljava.lang.Object;@6720b9c8[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@6d17fe6e]，共耗时2毫秒------
2020-12-16 09:38:47 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 09:38:47 CST 2020时使用参数[Ljava.lang.Object;@5fa752eb[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@14decac，共耗时4毫秒------
2020-12-16 09:38:47 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 09:38:47 CST 2020时使用参数[Ljava.lang.Object;@72b4562a[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@17e1729d，共耗时2毫秒------
2020-12-16 09:38:47 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 09:38:47 CST 2020时使用参数[Ljava.lang.Object;@161796c8[{top.chris.shop.pojo.ItemsSpec@6d17fe6e}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 09:38:47 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 09:38:47 CST 2020时使用参数[Ljava.lang.Object;@1f45fca9[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012166WRGZ79H28，共耗时20毫秒------
2020-12-16 09:38:47 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 09:39:13 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:39:13 CST 2020时使用参数[Ljava.lang.Object;@7279559c[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@5116a0fa，共耗时3毫秒------
2020-12-16 09:39:13 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:39:13 CST 2020时使用参数[Ljava.lang.Object;@e92c0a1[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@3da4efea, top.chris.shop.pojo.Carousel@6e7850d6, top.chris.shop.pojo.Carousel@29918c7e, top.chris.shop.pojo.Carousel@319ed625]，共耗时3毫秒------
2020-12-16 09:39:13 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:39:13 CST 2020时使用参数[Ljava.lang.Object;@1ee781e0[{}]调用,并得到了结果[top.chris.shop.pojo.Category@90e1388, top.chris.shop.pojo.Category@1c3c6ca3, top.chris.shop.pojo.Category@1e301a0e, top.chris.shop.pojo.Category@3c7a70a9, top.chris.shop.pojo.Category@4591a6fd, top.chris.shop.pojo.Category@3ab79398, top.chris.shop.pojo.Category@24c90eaa, top.chris.shop.pojo.Category@4b59cda2, top.chris.shop.pojo.Category@3b72c7a, top.chris.shop.pojo.Category@59a54c7]，共耗时3毫秒------
2020-12-16 09:39:14 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:39:14 CST 2020时使用参数[Ljava.lang.Object;@1dca961a[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时5毫秒------
2020-12-16 09:39:42 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:39:42 CST 2020时使用参数[Ljava.lang.Object;@266a5d1b[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@7b018c65，共耗时1毫秒------
2020-12-16 09:39:42 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:39:42 CST 2020时使用参数[Ljava.lang.Object;@2a952e6d[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@5bf1f8e7, top.chris.shop.pojo.Carousel@5ad77b94, top.chris.shop.pojo.Carousel@20e3b1cc, top.chris.shop.pojo.Carousel@238605fb]，共耗时1毫秒------
2020-12-16 09:39:42 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:39:42 CST 2020时使用参数[Ljava.lang.Object;@256377ba[{}]调用,并得到了结果[top.chris.shop.pojo.Category@3a334586, top.chris.shop.pojo.Category@46f41dcc, top.chris.shop.pojo.Category@1deff74c, top.chris.shop.pojo.Category@230f8dec, top.chris.shop.pojo.Category@330e37e, top.chris.shop.pojo.Category@654c84a9, top.chris.shop.pojo.Category@77b4adb, top.chris.shop.pojo.Category@5844c735, top.chris.shop.pojo.Category@5cebf450, top.chris.shop.pojo.Category@5d834aa8]，共耗时2毫秒------
2020-12-16 09:39:42 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:39:42 CST 2020时使用参数[Ljava.lang.Object;@20c82ea2[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时2毫秒------
2020-12-16 09:40:04 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:40:04 CST 2020时使用参数[Ljava.lang.Object;@672ef794[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@41251052, top.chris.shop.pojo.Carousel@332ed1f9, top.chris.shop.pojo.Carousel@2a434539, top.chris.shop.pojo.Carousel@3a4185b2]，共耗时5毫秒------
2020-12-16 09:40:04 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:40:04 CST 2020时使用参数[Ljava.lang.Object;@2a200292[{}]调用,并得到了结果[top.chris.shop.pojo.Category@58c31ab7, top.chris.shop.pojo.Category@26ed5882, top.chris.shop.pojo.Category@4f2ed3fc, top.chris.shop.pojo.Category@65b07c19, top.chris.shop.pojo.Category@25e6d4ba, top.chris.shop.pojo.Category@6983a1cc, top.chris.shop.pojo.Category@500b3e33, top.chris.shop.pojo.Category@363dc09f, top.chris.shop.pojo.Category@25ed91e6, top.chris.shop.pojo.Category@5194d956]，共耗时7毫秒------
2020-12-16 09:40:04 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:40:04 CST 2020时使用参数[Ljava.lang.Object;@be7fd2c[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@76b15880，共耗时2毫秒------
2020-12-16 09:40:04 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:40:04 CST 2020时使用参数[Ljava.lang.Object;@485a12b6[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时6毫秒------
2020-12-16 09:40:29 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:40:29 CST 2020时使用参数[Ljava.lang.Object;@16e6afa2[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@67f2a881，共耗时2毫秒------
2020-12-16 09:40:30 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:40:30 CST 2020时使用参数[Ljava.lang.Object;@1e946b66[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@464edc08, top.chris.shop.pojo.Carousel@4785cba9, top.chris.shop.pojo.Carousel@3cd358ac, top.chris.shop.pojo.Carousel@1a1db0b]，共耗时2毫秒------
2020-12-16 09:40:30 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:40:30 CST 2020时使用参数[Ljava.lang.Object;@77ba4d3d[{}]调用,并得到了结果[top.chris.shop.pojo.Category@151c5aed, top.chris.shop.pojo.Category@1b4bac7b, top.chris.shop.pojo.Category@264559b8, top.chris.shop.pojo.Category@3333be8, top.chris.shop.pojo.Category@740fc251, top.chris.shop.pojo.Category@326180df, top.chris.shop.pojo.Category@3e6587b2, top.chris.shop.pojo.Category@241317ed, top.chris.shop.pojo.Category@2e845474, top.chris.shop.pojo.Category@105d4e03]，共耗时4毫秒------
2020-12-16 09:40:30 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:40:30 CST 2020时使用参数[Ljava.lang.Object;@f4c35fa[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时5毫秒------
2020-12-16 09:41:46 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:41:46 CST 2020时使用参数[Ljava.lang.Object;@2010cce0[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@3331fbde，共耗时2毫秒------
2020-12-16 09:41:46 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:41:46 CST 2020时使用参数[Ljava.lang.Object;@40092bb8[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@439b8435, top.chris.shop.pojo.Carousel@324fd578, top.chris.shop.pojo.Carousel@22559561, top.chris.shop.pojo.Carousel@2b082e78]，共耗时2毫秒------
2020-12-16 09:41:46 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:41:46 CST 2020时使用参数[Ljava.lang.Object;@955da03[{}]调用,并得到了结果[top.chris.shop.pojo.Category@2e2351aa, top.chris.shop.pojo.Category@ccf2170, top.chris.shop.pojo.Category@11d5fed6, top.chris.shop.pojo.Category@3677bb2d, top.chris.shop.pojo.Category@2ed1248, top.chris.shop.pojo.Category@775c77c4, top.chris.shop.pojo.Category@49c114b7, top.chris.shop.pojo.Category@42e47071, top.chris.shop.pojo.Category@28f15537, top.chris.shop.pojo.Category@3c87e5ba]，共耗时1毫秒------
2020-12-16 09:41:46 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:41:46 CST 2020时使用参数[Ljava.lang.Object;@54c912f5[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时2毫秒------
2020-12-16 09:42:40 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:42:40 CST 2020时使用参数[Ljava.lang.Object;@7325d79f[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@51cdbcc7，共耗时3毫秒------
2020-12-16 09:42:40 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:42:40 CST 2020时使用参数[Ljava.lang.Object;@594cc988[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@48f57cd4, top.chris.shop.pojo.Carousel@425ffcb6, top.chris.shop.pojo.Carousel@72d8585e, top.chris.shop.pojo.Carousel@4de7cf04]，共耗时3毫秒------
2020-12-16 09:42:40 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:42:40 CST 2020时使用参数[Ljava.lang.Object;@486257cd[{}]调用,并得到了结果[top.chris.shop.pojo.Category@71559d50, top.chris.shop.pojo.Category@729de6b9, top.chris.shop.pojo.Category@2187a75c, top.chris.shop.pojo.Category@7b81409e, top.chris.shop.pojo.Category@2663fda3, top.chris.shop.pojo.Category@3bd66ff8, top.chris.shop.pojo.Category@27778299, top.chris.shop.pojo.Category@5603a359, top.chris.shop.pojo.Category@6f34c2df, top.chris.shop.pojo.Category@6795d96e]，共耗时2毫秒------
2020-12-16 09:42:40 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:42:40 CST 2020时使用参数[Ljava.lang.Object;@6825e650[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时3毫秒------
2020-12-16 09:43:30 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:43:30 CST 2020时使用参数[Ljava.lang.Object;@39801bef[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@21e70606，共耗时2毫秒------
2020-12-16 09:43:30 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:43:30 CST 2020时使用参数[Ljava.lang.Object;@8dc03e3[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@43245ec7, top.chris.shop.pojo.Carousel@359f58ba, top.chris.shop.pojo.Carousel@fe0b931, top.chris.shop.pojo.Carousel@674b6035]，共耗时2毫秒------
2020-12-16 09:43:30 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:43:30 CST 2020时使用参数[Ljava.lang.Object;@cdf7a8c[{}]调用,并得到了结果[top.chris.shop.pojo.Category@1953a7bd, top.chris.shop.pojo.Category@190e0186, top.chris.shop.pojo.Category@76a5c4b7, top.chris.shop.pojo.Category@159dbf5, top.chris.shop.pojo.Category@5b3ea2c, top.chris.shop.pojo.Category@6c58d92d, top.chris.shop.pojo.Category@3480386d, top.chris.shop.pojo.Category@7b49db7b, top.chris.shop.pojo.Category@6131acb4, top.chris.shop.pojo.Category@4b8a800e]，共耗时2毫秒------
2020-12-16 09:43:30 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:43:30 CST 2020时使用参数[Ljava.lang.Object;@52ca1152[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时3毫秒------
2020-12-16 09:44:01 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:44:01 CST 2020时使用参数[Ljava.lang.Object;@6434be58[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@79e5f01, top.chris.shop.pojo.Carousel@59965e86, top.chris.shop.pojo.Carousel@6f72611d, top.chris.shop.pojo.Carousel@2ef5d4d5]，共耗时2毫秒------
2020-12-16 09:44:01 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:44:01 CST 2020时使用参数[Ljava.lang.Object;@7b4b9201[{}]调用,并得到了结果[top.chris.shop.pojo.Category@16ce8ffb, top.chris.shop.pojo.Category@491fd883, top.chris.shop.pojo.Category@64726890, top.chris.shop.pojo.Category@430e2585, top.chris.shop.pojo.Category@215ddb48, top.chris.shop.pojo.Category@16b1c420, top.chris.shop.pojo.Category@6170188e, top.chris.shop.pojo.Category@53e02b28, top.chris.shop.pojo.Category@1ca83d87, top.chris.shop.pojo.Category@4a07af6]，共耗时4毫秒------
2020-12-16 09:44:01 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:44:01 CST 2020时使用参数[Ljava.lang.Object;@1edba1f1[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时2毫秒------
2020-12-16 09:44:02 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:44:02 CST 2020时使用参数[Ljava.lang.Object;@31ad4cf3[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@cdaf595，共耗时2毫秒------
2020-12-16 09:44:08 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:44:08 CST 2020时使用参数[Ljava.lang.Object;@b981889[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@1c9ae9e，共耗时2毫秒------
2020-12-16 09:44:08 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:44:08 CST 2020时使用参数[Ljava.lang.Object;@2092f11d[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@6859cef1, top.chris.shop.pojo.Carousel@2b192883, top.chris.shop.pojo.Carousel@457be3b5, top.chris.shop.pojo.Carousel@72d6e81e]，共耗时2毫秒------
2020-12-16 09:44:08 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:44:08 CST 2020时使用参数[Ljava.lang.Object;@59751be6[{}]调用,并得到了结果[top.chris.shop.pojo.Category@152f016e, top.chris.shop.pojo.Category@351f45fc, top.chris.shop.pojo.Category@1b48220c, top.chris.shop.pojo.Category@6a93b0a8, top.chris.shop.pojo.Category@75af8e5, top.chris.shop.pojo.Category@48256d57, top.chris.shop.pojo.Category@12a77e1d, top.chris.shop.pojo.Category@65c68a11, top.chris.shop.pojo.Category@358bdb9c, top.chris.shop.pojo.Category@56a747af]，共耗时3毫秒------
2020-12-16 09:44:08 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:44:08 CST 2020时使用参数[Ljava.lang.Object;@6ee082f1[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时2毫秒------
2020-12-16 09:44:14 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:44:14 CST 2020时使用参数[Ljava.lang.Object;@651b8995[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@66968f36，共耗时2毫秒------
2020-12-16 09:44:14 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:44:14 CST 2020时使用参数[Ljava.lang.Object;@7ede261[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@f8db1de, top.chris.shop.pojo.Carousel@15797ef1, top.chris.shop.pojo.Carousel@28df30f3, top.chris.shop.pojo.Carousel@40c92163]，共耗时3毫秒------
2020-12-16 09:44:14 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:44:14 CST 2020时使用参数[Ljava.lang.Object;@2c1af418[{}]调用,并得到了结果[top.chris.shop.pojo.Category@7b72e5c7, top.chris.shop.pojo.Category@389596a1, top.chris.shop.pojo.Category@5b7ae428, top.chris.shop.pojo.Category@203b616b, top.chris.shop.pojo.Category@4c0bf476, top.chris.shop.pojo.Category@583f53c8, top.chris.shop.pojo.Category@54e8b743, top.chris.shop.pojo.Category@2fa3b48c, top.chris.shop.pojo.Category@3c985d4a, top.chris.shop.pojo.Category@1e1bf802]，共耗时2毫秒------
2020-12-16 09:44:14 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:44:14 CST 2020时使用参数[Ljava.lang.Object;@6f245f36[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时8毫秒------
2020-12-16 09:45:31 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:45:31 CST 2020时使用参数[Ljava.lang.Object;@500b794f[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@e1120bb，共耗时2毫秒------
2020-12-16 09:45:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:45:31 CST 2020时使用参数[Ljava.lang.Object;@7a87b53a[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@6c9e0c43, top.chris.shop.pojo.Carousel@174ea003, top.chris.shop.pojo.Carousel@2446fc2f, top.chris.shop.pojo.Carousel@63afb3f8]，共耗时3毫秒------
2020-12-16 09:45:31 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:45:31 CST 2020时使用参数[Ljava.lang.Object;@49aebb4f[{}]调用,并得到了结果[top.chris.shop.pojo.Category@75f1d9f9, top.chris.shop.pojo.Category@a80d2cb, top.chris.shop.pojo.Category@5a440a07, top.chris.shop.pojo.Category@668cb6c3, top.chris.shop.pojo.Category@1dc985fa, top.chris.shop.pojo.Category@11d30a02, top.chris.shop.pojo.Category@6bbd3e0d, top.chris.shop.pojo.Category@6804b717, top.chris.shop.pojo.Category@393309b8, top.chris.shop.pojo.Category@30b98786]，共耗时3毫秒------
2020-12-16 09:45:31 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:45:31 CST 2020时使用参数[Ljava.lang.Object;@70d1ec62[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时2毫秒------
2020-12-16 09:45:54 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:45:54 CST 2020时使用参数[Ljava.lang.Object;@2dbd867[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@73236f7e, top.chris.shop.pojo.Carousel@9c3df6f, top.chris.shop.pojo.Carousel@13f78ec4, top.chris.shop.pojo.Carousel@4fb3643d]，共耗时3毫秒------
2020-12-16 09:45:54 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:45:54 CST 2020时使用参数[Ljava.lang.Object;@6bd34ff1[{}]调用,并得到了结果[top.chris.shop.pojo.Category@76d75feb, top.chris.shop.pojo.Category@40de0fe6, top.chris.shop.pojo.Category@4e22fe30, top.chris.shop.pojo.Category@3f7f9cc2, top.chris.shop.pojo.Category@739ba4c1, top.chris.shop.pojo.Category@438a346b, top.chris.shop.pojo.Category@1a008154, top.chris.shop.pojo.Category@59da875a, top.chris.shop.pojo.Category@77c98d0c, top.chris.shop.pojo.Category@6572c6f2]，共耗时2毫秒------
2020-12-16 09:45:54 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:45:54 CST 2020时使用参数[Ljava.lang.Object;@61672c2e[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时2毫秒------
2020-12-16 09:45:55 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:45:55 CST 2020时使用参数[Ljava.lang.Object;@41106877[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@3187269，共耗时3毫秒------
2020-12-16 09:46:16 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:46:16 CST 2020时使用参数[Ljava.lang.Object;@5b459932[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@2fbfa2e3，共耗时3毫秒------
2020-12-16 09:46:17 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:46:17 CST 2020时使用参数[Ljava.lang.Object;@28d154f7[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@878c3c, top.chris.shop.pojo.Carousel@30393596, top.chris.shop.pojo.Carousel@2f721677, top.chris.shop.pojo.Carousel@da69982]，共耗时2毫秒------
2020-12-16 09:46:17 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:46:17 CST 2020时使用参数[Ljava.lang.Object;@270b1411[{}]调用,并得到了结果[top.chris.shop.pojo.Category@79caa312, top.chris.shop.pojo.Category@57f2dff, top.chris.shop.pojo.Category@4238a600, top.chris.shop.pojo.Category@3d6c99ca, top.chris.shop.pojo.Category@11126f46, top.chris.shop.pojo.Category@6d7ea84e, top.chris.shop.pojo.Category@6af10b47, top.chris.shop.pojo.Category@338a7d1a, top.chris.shop.pojo.Category@31604c72, top.chris.shop.pojo.Category@29c4bec8]，共耗时2毫秒------
2020-12-16 09:46:17 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:46:17 CST 2020时使用参数[Ljava.lang.Object;@62bae0e0[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时2毫秒------
2020-12-16 09:47:44 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:47:44 CST 2020时使用参数[Ljava.lang.Object;@6ecbb8af[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@7e15bb8e，共耗时2毫秒------
2020-12-16 09:47:44 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:47:44 CST 2020时使用参数[Ljava.lang.Object;@7fc4ae85[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@7b5c48ec, top.chris.shop.pojo.Carousel@1c0521dc, top.chris.shop.pojo.Carousel@b3ceeb7, top.chris.shop.pojo.Carousel@5156c9d3]，共耗时2毫秒------
2020-12-16 09:47:44 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:47:44 CST 2020时使用参数[Ljava.lang.Object;@3980fba2[{}]调用,并得到了结果[top.chris.shop.pojo.Category@4c596e50, top.chris.shop.pojo.Category@3bc1a1bc, top.chris.shop.pojo.Category@38d0893f, top.chris.shop.pojo.Category@6b3286c, top.chris.shop.pojo.Category@11ffd04, top.chris.shop.pojo.Category@376570da, top.chris.shop.pojo.Category@bc08e78, top.chris.shop.pojo.Category@142f2724, top.chris.shop.pojo.Category@6a261f78, top.chris.shop.pojo.Category@76595146]，共耗时2毫秒------
2020-12-16 09:47:44 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:47:44 CST 2020时使用参数[Ljava.lang.Object;@57793e9a[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时4毫秒------
2020-12-16 09:48:28 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:48:28 CST 2020时使用参数[Ljava.lang.Object;@68283f9d[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@5ff11ddc，共耗时3毫秒------
2020-12-16 09:48:28 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:48:28 CST 2020时使用参数[Ljava.lang.Object;@20d93f82[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@2f179a94, top.chris.shop.pojo.Carousel@4491072f, top.chris.shop.pojo.Carousel@5409833d, top.chris.shop.pojo.Carousel@3dc58311]，共耗时3毫秒------
2020-12-16 09:48:28 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:48:28 CST 2020时使用参数[Ljava.lang.Object;@1be60cc5[{}]调用,并得到了结果[top.chris.shop.pojo.Category@1dcc52b6, top.chris.shop.pojo.Category@491d54b5, top.chris.shop.pojo.Category@5fd7cf63, top.chris.shop.pojo.Category@74fc7078, top.chris.shop.pojo.Category@b5ac5b3, top.chris.shop.pojo.Category@28c19091, top.chris.shop.pojo.Category@490cfe3d, top.chris.shop.pojo.Category@5ee428d4, top.chris.shop.pojo.Category@3ce09e6, top.chris.shop.pojo.Category@272f5416]，共耗时2毫秒------
2020-12-16 09:48:28 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:48:28 CST 2020时使用参数[Ljava.lang.Object;@53523db[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时3毫秒------
2020-12-16 09:56:47 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 09:56:47 CST 2020时使用参数[Ljava.lang.Object;@4436295c[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6394b89，共耗时2毫秒------
2020-12-16 09:56:47 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 09:56:47 CST 2020时使用参数[Ljava.lang.Object;@6b95506c[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@4cb8c90d, top.chris.shop.pojo.Carousel@6eeccd8f, top.chris.shop.pojo.Carousel@6da4f6ce, top.chris.shop.pojo.Carousel@2c73cd26]，共耗时1毫秒------
2020-12-16 09:56:47 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 09:56:47 CST 2020时使用参数[Ljava.lang.Object;@3e12e48[{}]调用,并得到了结果[top.chris.shop.pojo.Category@18feba88, top.chris.shop.pojo.Category@3968b684, top.chris.shop.pojo.Category@46663685, top.chris.shop.pojo.Category@4c7fd36f, top.chris.shop.pojo.Category@21b80a92, top.chris.shop.pojo.Category@5d1854b7, top.chris.shop.pojo.Category@2a3d838f, top.chris.shop.pojo.Category@186bc90c, top.chris.shop.pojo.Category@79e6ac09, top.chris.shop.pojo.Category@6644e26e]，共耗时3毫秒------
2020-12-16 09:56:47 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 09:56:47 CST 2020时使用参数[Ljava.lang.Object;@1d4e321e[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时2毫秒------
2020-12-16 10:15:04 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:15:05 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 19448 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:15:05 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:15:08 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:15:08 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:15:08 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
2020-12-16 10:15:08 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:15:08 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c07ceef4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:15:09 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:15:10 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 4328 ms
2020-12-16 10:15:14 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:15:14 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:15:15 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:15:15 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:15:15 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:15:15 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:15:15 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 992e39ab-0721-4d03-8220-36b772401cd1

2020-12-16 10:15:15 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@34fcd292, org.springframework.security.web.context.SecurityContextPersistenceFilter@a323a5b, org.springframework.security.web.header.HeaderWriterFilter@1182413a, org.springframework.security.web.authentication.logout.LogoutFilter@44da7eb3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50dc49e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@653a5967, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63db743d, org.springframework.security.web.session.SessionManagementFilter@6b9697ae, org.springframework.security.web.access.ExceptionTranslationFilter@7cd3e0da, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@537ca28e]
2020-12-16 10:15:15 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:15:15 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:15:15 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:15:15 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:15:16 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:15:16 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:15:16 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 11.665 seconds (JVM running for 13.606)
2020-12-16 10:15:16 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:15:16 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-16 10:15:27 上午 [Thread: http-nio-8080-exec-10][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public top.chris.shop.util.JsonResult top.chris.shop.web.controller.AliPayController.topay(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException]
2020-12-16 10:16:26 上午 [Thread: http-nio-8080-exec-4][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 10:16:26 上午 [Thread: http-nio-8080-exec-4][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 10:16:26 上午 [Thread: http-nio-8080-exec-4][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 10:16:26 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 10:16:26 CST 2020时使用参数[Ljava.lang.Object;@544746ba[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@10f25f79，共耗时571毫秒------
2020-12-16 10:16:26 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 10:16:26 CST 2020时使用参数[Ljava.lang.Object;@2d265f7c[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时570毫秒------
2020-12-16 10:16:26 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 10:16:26 CST 2020时使用参数[Ljava.lang.Object;@10de52e2[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=253, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时622毫秒------
2020-12-16 10:16:29 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 10:16:29 CST 2020时使用参数[Ljava.lang.Object;@1bd2f077[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时22毫秒------
2020-12-16 10:16:31 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 10:16:31 CST 2020时使用参数[Ljava.lang.Object;@1dc8df2[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时11毫秒------
2020-12-16 10:16:34 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 10:16:34 CST 2020时使用参数[Ljava.lang.Object;@2783c6dc[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@5c0dd24c，共耗时4毫秒------
2020-12-16 10:16:34 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 10:16:34 CST 2020时使用参数[Ljava.lang.Object;@2fa3d138[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@fb836c2]，共耗时19毫秒------
2020-12-16 10:16:34 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 10:16:34 CST 2020时使用参数[Ljava.lang.Object;@500211ae[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@61993087，共耗时3毫秒------
2020-12-16 10:16:34 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 10:16:34 CST 2020时使用参数[Ljava.lang.Object;@382891d9[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@78676813，共耗时2毫秒------
2020-12-16 10:16:34 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 10:16:34 CST 2020时使用参数[Ljava.lang.Object;@8428f1d[{top.chris.shop.pojo.ItemsSpec@fb836c2}]调用,并得到了结果1，共耗时5毫秒------
2020-12-16 10:16:34 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 10:16:34 CST 2020时使用参数[Ljava.lang.Object;@5886f0dd[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果201216799W144TTC，共耗时145毫秒------
2020-12-16 10:16:34 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 10:16:34 上午 [Thread: http-nio-8080-exec-7][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public top.chris.shop.util.JsonResult top.chris.shop.web.controller.AliPayController.topay(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException]
2020-12-16 10:17:33 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:17:34 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 21188 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:17:34 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:17:35 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:17:35 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:17:35 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
2020-12-16 10:17:35 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:17:36 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$142c2361] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:17:36 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:17:36 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2596 ms
2020-12-16 10:17:39 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:17:39 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:17:40 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:17:40 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:17:40 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:17:40 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:17:40 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 6037b070-d863-411e-a87c-c135bef19da3

2020-12-16 10:17:40 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7606bd03, org.springframework.security.web.context.SecurityContextPersistenceFilter@4ff66917, org.springframework.security.web.header.HeaderWriterFilter@6d4a05f7, org.springframework.security.web.authentication.logout.LogoutFilter@2b9e69fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d43a1b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b9697ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@afee63, org.springframework.security.web.session.SessionManagementFilter@17134190, org.springframework.security.web.access.ExceptionTranslationFilter@28cb86b2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fe8f2ae]
2020-12-16 10:17:40 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:17:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:17:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:17:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:17:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:17:40 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:17:40 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.544 seconds (JVM running for 9.129)
2020-12-16 10:17:41 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:17:41 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 10:17:45 上午 [Thread: http-nio-8080-exec-7][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public top.chris.shop.util.JsonResult top.chris.shop.web.controller.AliPayController.topay(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException]
2020-12-16 10:18:43 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:18:43 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 14332 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:18:43 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:18:45 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:18:45 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:18:45 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 10:18:45 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:18:46 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$46a9e1cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:18:46 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:18:46 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2634 ms
2020-12-16 10:18:49 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:18:49 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:18:49 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:18:49 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:18:49 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:18:49 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:18:49 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 30b89fe5-1cba-4c93-a8e0-1dc8729a209f

2020-12-16 10:18:50 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a3cf824, org.springframework.security.web.context.SecurityContextPersistenceFilter@6704df84, org.springframework.security.web.header.HeaderWriterFilter@6734ff92, org.springframework.security.web.authentication.logout.LogoutFilter@5599b5bb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@698d6d30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@748904e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c2b6acb, org.springframework.security.web.session.SessionManagementFilter@7c91fe86, org.springframework.security.web.access.ExceptionTranslationFilter@3af36922, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2c2e3460]
2020-12-16 10:18:50 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:18:50 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:18:50 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:18:50 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:18:50 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:18:50 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:18:50 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.258 seconds (JVM running for 8.828)
2020-12-16 10:18:50 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:18:50 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-16 10:18:58 上午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:234) ]
WARN:Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-12-16 10:18:58 上午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-12-16 10:21:40 上午 [Thread: http-nio-8080-exec-6][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:234) ]
WARN:Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-12-16 10:21:40 上午 [Thread: http-nio-8080-exec-6][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-12-16 10:25:01 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:25:02 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 23488 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:25:02 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:25:03 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:25:03 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:25:03 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 10:25:03 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:25:04 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a814352] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:25:04 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:25:04 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2398 ms
2020-12-16 10:25:07 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:25:07 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:25:07 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:25:07 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:25:07 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:25:07 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:25:08 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: a0120cc1-0f5a-41d4-855d-04cb4e30d37b

2020-12-16 10:25:08 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52d96367, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d512652, org.springframework.security.web.header.HeaderWriterFilter@5c4f4330, org.springframework.security.web.authentication.logout.LogoutFilter@d70e9a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5dfc2a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a0f349, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5be51aa, org.springframework.security.web.session.SessionManagementFilter@1a7163e3, org.springframework.security.web.access.ExceptionTranslationFilter@75ed125a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@25218a4d]
2020-12-16 10:25:08 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:25:08 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:25:08 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:25:08 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:25:08 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:25:08 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:25:08 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.929 seconds (JVM running for 8.431)
2020-12-16 10:25:08 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:25:08 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 10:25:15 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:234) ]
WARN:Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-12-16 10:25:15 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-12-16 10:25:27 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:25:28 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 23972 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:25:28 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:25:29 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:25:29 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:25:29 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 38ms. Found 0 repository interfaces.
2020-12-16 10:25:29 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:25:30 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee3ff0d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:25:30 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:25:30 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2434 ms
2020-12-16 10:25:33 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:25:33 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:25:34 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:25:34 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:25:34 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:25:34 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:25:34 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 5d6424cd-3ddb-402e-822b-78eb102e209e

2020-12-16 10:25:34 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1152900, org.springframework.security.web.context.SecurityContextPersistenceFilter@8f39224, org.springframework.security.web.header.HeaderWriterFilter@4a660b34, org.springframework.security.web.authentication.logout.LogoutFilter@2b170932, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c579202, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b9aeedb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fba0dac, org.springframework.security.web.session.SessionManagementFilter@ad0bb4e, org.springframework.security.web.access.ExceptionTranslationFilter@1182413a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63de4fa]
2020-12-16 10:25:34 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:25:34 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:25:34 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:25:34 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:25:34 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:25:35 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:25:35 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.44 seconds (JVM running for 8.967)
2020-12-16 10:25:35 上午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:25:35 上午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 15 ms
2020-12-16 10:25:45 上午 [Thread: http-nio-8080-exec-9][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:234) ]
WARN:Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-12-16 10:25:45 上午 [Thread: http-nio-8080-exec-9][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-12-16 10:28:39 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:28:39 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 8984 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:28:39 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:28:41 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:28:41 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:28:41 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 47ms. Found 0 repository interfaces.
2020-12-16 10:28:41 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:28:41 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$13c18a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:28:42 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:28:42 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2681 ms
2020-12-16 10:28:45 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:28:45 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:28:45 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:28:45 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:28:45 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:28:45 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:28:46 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 816c82fe-66d7-4ea9-8037-970f99dab173

2020-12-16 10:28:46 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59ec7020, org.springframework.security.web.context.SecurityContextPersistenceFilter@5bb2fb2b, org.springframework.security.web.header.HeaderWriterFilter@49ced9c7, org.springframework.security.web.authentication.logout.LogoutFilter@117b2cc6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b96f8b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@781c2497, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23f60b7d, org.springframework.security.web.session.SessionManagementFilter@23ea8830, org.springframework.security.web.access.ExceptionTranslationFilter@650a1aff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@66234b0f]
2020-12-16 10:28:46 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:28:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:28:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:28:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:28:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:28:46 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:28:46 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.701 seconds (JVM running for 9.371)
2020-12-16 10:28:49 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:28:49 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 14 ms
2020-12-16 10:28:55 上午 [Thread: http-nio-8080-exec-5][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:234) ]
WARN:Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-12-16 10:28:55 上午 [Thread: http-nio-8080-exec-5][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-12-16 10:29:54 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:29:54 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 29620 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:29:54 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:29:56 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:29:56 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:29:56 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
2020-12-16 10:29:56 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:29:56 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9134b211] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:29:57 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:29:57 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2411 ms
2020-12-16 10:30:00 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:30:00 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:30:00 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:30:00 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:30:00 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:30:00 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:30:01 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: e32dfe59-2fcc-4416-899e-9255095a10e6

2020-12-16 10:30:01 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b4927e5, org.springframework.security.web.context.SecurityContextPersistenceFilter@647fb583, org.springframework.security.web.header.HeaderWriterFilter@4b476233, org.springframework.security.web.authentication.logout.LogoutFilter@2c579202, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19705650, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40c76f5a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c5da4f9, org.springframework.security.web.session.SessionManagementFilter@5599b5bb, org.springframework.security.web.access.ExceptionTranslationFilter@748904e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61808ecd]
2020-12-16 10:30:01 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:30:01 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:30:01 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:30:01 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:30:01 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:30:01 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:30:01 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.266 seconds (JVM running for 8.73)
2020-12-16 10:30:20 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:30:20 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 10:30:23 上午 [Thread: http-nio-8080-exec-4][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:234) ]
WARN:Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-12-16 10:30:23 上午 [Thread: http-nio-8080-exec-4][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-12-16 10:31:40 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:31:40 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 12624 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:31:40 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:31:42 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:31:42 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:31:42 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 10:31:42 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:31:42 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$392673f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:31:43 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:31:43 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2573 ms
2020-12-16 10:31:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:31:46 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:31:46 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:31:46 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:31:46 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:31:46 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:31:46 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: a1d53eb3-4289-4154-a063-f6dd32c9a2f3

2020-12-16 10:31:46 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b2a4332, org.springframework.security.web.context.SecurityContextPersistenceFilter@43e3a390, org.springframework.security.web.header.HeaderWriterFilter@2df3545d, org.springframework.security.web.authentication.logout.LogoutFilter@42107318, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11c7a0b4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23ea8830, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2cbe455c, org.springframework.security.web.session.SessionManagementFilter@6a6da47a, org.springframework.security.web.access.ExceptionTranslationFilter@5b14f482, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@18907af2]
2020-12-16 10:31:46 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:31:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:31:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:31:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:31:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:31:47 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:31:47 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.191 seconds (JVM running for 8.728)
2020-12-16 10:31:53 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:31:53 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 16 ms
2020-12-16 10:33:15 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:33:15 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 7740 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:33:15 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:33:17 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:33:17 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:33:17 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2020-12-16 10:33:17 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:33:17 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cbfa934] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:33:18 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:33:18 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2494 ms
2020-12-16 10:33:20 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:33:21 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:33:21 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:33:21 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:33:21 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:33:21 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:33:21 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 2ff90a8a-7402-495d-b3c4-021c2c771dd9

2020-12-16 10:33:21 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c6928c, org.springframework.security.web.context.SecurityContextPersistenceFilter@4cb00fa5, org.springframework.security.web.header.HeaderWriterFilter@4899799b, org.springframework.security.web.authentication.logout.LogoutFilter@7ead1d80, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28cb86b2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f235e8e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c28181b, org.springframework.security.web.session.SessionManagementFilter@15994b0b, org.springframework.security.web.access.ExceptionTranslationFilter@4ce267cc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4416e18d]
2020-12-16 10:33:21 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:33:21 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:33:21 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:33:21 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:33:22 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:33:22 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:33:22 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.043 seconds (JVM running for 8.809)
2020-12-16 10:33:22 上午 [Thread: http-nio-8080-exec-4][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:33:22 上午 [Thread: http-nio-8080-exec-4][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 9 ms
2020-12-16 10:33:27 上午 [Thread: http-nio-8080-exec-10][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:234) ]
WARN:Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-12-16 10:33:27 上午 [Thread: http-nio-8080-exec-10][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-12-16 10:33:52 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:33:53 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 7492 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:33:53 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:33:54 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:33:54 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:33:54 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces.
2020-12-16 10:33:54 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:33:55 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b59f8ada] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:33:55 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:33:55 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2572 ms
2020-12-16 10:33:58 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:33:59 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:33:59 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:33:59 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:33:59 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:33:59 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:33:59 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: fb3649cc-b826-4cd9-b26b-1ee42678b192

2020-12-16 10:33:59 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b4927e5, org.springframework.security.web.context.SecurityContextPersistenceFilter@647fb583, org.springframework.security.web.header.HeaderWriterFilter@4b476233, org.springframework.security.web.authentication.logout.LogoutFilter@2c579202, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19705650, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40c76f5a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c5da4f9, org.springframework.security.web.session.SessionManagementFilter@5599b5bb, org.springframework.security.web.access.ExceptionTranslationFilter@748904e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61808ecd]
2020-12-16 10:33:59 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:33:59 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:33:59 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:33:59 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:34:00 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:34:00 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:34:00 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.538 seconds (JVM running for 9.07)
2020-12-16 10:34:09 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:34:09 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 17 ms
2020-12-16 10:34:12 上午 [Thread: http-nio-8080-exec-4][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:234) ]
WARN:Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-12-16 10:34:12 上午 [Thread: http-nio-8080-exec-4][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation]
2020-12-16 10:36:10 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:36:10 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 11460 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:36:10 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:36:12 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:36:12 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:36:12 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2020-12-16 10:36:12 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:36:12 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c6007d27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:36:13 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:36:13 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2473 ms
2020-12-16 10:36:16 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:36:16 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:36:16 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:36:16 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:36:16 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:36:16 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:36:16 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: e9f2a8f2-d439-4c49-b834-36ebb6612fa5

2020-12-16 10:36:16 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f357c9d, org.springframework.security.web.context.SecurityContextPersistenceFilter@117b2cc6, org.springframework.security.web.header.HeaderWriterFilter@70c491b8, org.springframework.security.web.authentication.logout.LogoutFilter@7ad889be, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fe8f2ae, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@516195cf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fe42a09, org.springframework.security.web.session.SessionManagementFilter@3c28181b, org.springframework.security.web.access.ExceptionTranslationFilter@4416e18d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2bb717d7]
2020-12-16 10:36:16 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:36:16 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:36:16 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:36:17 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:36:17 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:36:17 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:36:17 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.116 seconds (JVM running for 8.85)
2020-12-16 10:36:24 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:36:24 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 18 ms
2020-12-16 10:37:41 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:37:41 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 26876 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:37:41 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:37:42 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:37:42 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:37:42 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
2020-12-16 10:37:43 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:37:43 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e2352229] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:37:43 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:37:43 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2431 ms
2020-12-16 10:37:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:37:46 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:37:46 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:37:46 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:37:46 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:37:46 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:37:47 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 1c981b59-6908-4769-91ae-316fc76fb682

2020-12-16 10:37:47 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52d96367, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d512652, org.springframework.security.web.header.HeaderWriterFilter@5c4f4330, org.springframework.security.web.authentication.logout.LogoutFilter@d70e9a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5dfc2a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a0f349, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5be51aa, org.springframework.security.web.session.SessionManagementFilter@1a7163e3, org.springframework.security.web.access.ExceptionTranslationFilter@75ed125a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@25218a4d]
2020-12-16 10:37:47 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:37:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:37:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:37:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:37:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:37:47 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:37:47 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.063 seconds (JVM running for 8.667)
2020-12-16 10:37:52 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:37:52 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 22 ms
2020-12-16 10:37:55 上午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 10:37:55 上午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 10:37:55 上午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 10:37:55 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 10:37:55 CST 2020时使用参数[Ljava.lang.Object;@57ce7e83[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@1e3b8841，共耗时283毫秒------
2020-12-16 10:37:55 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 10:37:55 CST 2020时使用参数[Ljava.lang.Object;@597b637b[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=252, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时293毫秒------
2020-12-16 10:37:55 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 10:37:55 CST 2020时使用参数[Ljava.lang.Object;@faab9e3[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时284毫秒------
2020-12-16 10:37:58 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 10:37:58 CST 2020时使用参数[Ljava.lang.Object;@2831445b[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时10毫秒------
2020-12-16 10:38:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 10:38:01 CST 2020时使用参数[Ljava.lang.Object;@5826c9c3[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时14毫秒------
2020-12-16 10:38:03 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 10:38:03 CST 2020时使用参数[Ljava.lang.Object;@6ef65a24[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@4a8a64ff，共耗时4毫秒------
2020-12-16 10:38:03 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 10:38:03 CST 2020时使用参数[Ljava.lang.Object;@3d3adf5e[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@5618dc99]，共耗时19毫秒------
2020-12-16 10:38:03 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 10:38:03 CST 2020时使用参数[Ljava.lang.Object;@26a5d13e[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@4d0e2a9b，共耗时3毫秒------
2020-12-16 10:38:03 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 10:38:03 CST 2020时使用参数[Ljava.lang.Object;@4a17d111[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@42b3d54c，共耗时1毫秒------
2020-12-16 10:38:03 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 10:38:03 CST 2020时使用参数[Ljava.lang.Object;@748a9759[{top.chris.shop.pojo.ItemsSpec@5618dc99}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 10:38:03 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 10:38:03 CST 2020时使用参数[Ljava.lang.Object;@58f9a008[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012167HF80740M8，共耗时54毫秒------
2020-12-16 10:38:03 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 10:40:01 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 10:40:01 CST 2020时使用参数[Ljava.lang.Object;@74316244[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@2b24a09c, top.chris.shop.pojo.Carousel@7f20bd22, top.chris.shop.pojo.Carousel@776c3030, top.chris.shop.pojo.Carousel@8305fdb]，共耗时8毫秒------
2020-12-16 10:40:01 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 10:40:01 CST 2020时使用参数[Ljava.lang.Object;@23469174[{}]调用,并得到了结果[top.chris.shop.pojo.Category@1be3fcfa, top.chris.shop.pojo.Category@74e41e1c, top.chris.shop.pojo.Category@265051a2, top.chris.shop.pojo.Category@310ab92d, top.chris.shop.pojo.Category@350a97da, top.chris.shop.pojo.Category@614a7b99, top.chris.shop.pojo.Category@45b3eb53, top.chris.shop.pojo.Category@2114f119, top.chris.shop.pojo.Category@40c106a6, top.chris.shop.pojo.Category@72652b94]，共耗时12毫秒------
2020-12-16 10:40:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 10:40:01 CST 2020时使用参数[Ljava.lang.Object;@6ee50324[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-16 10:40:01 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 10:40:01 CST 2020时使用参数[Ljava.lang.Object;@e21b645[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@5a07791c，共耗时22毫秒------
2020-12-16 10:42:21 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:42:21 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 1236 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:42:21 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:42:23 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:42:23 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:42:23 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2020-12-16 10:42:23 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:42:23 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5982dd25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:42:24 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:42:24 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2779 ms
2020-12-16 10:42:27 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:42:27 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:42:27 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:42:27 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:42:27 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:42:27 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:42:28 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: f85c4f8c-060a-4832-ae6e-fb4f96dacd6d

2020-12-16 10:42:28 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70d3cdbf, org.springframework.security.web.context.SecurityContextPersistenceFilter@67e77f52, org.springframework.security.web.header.HeaderWriterFilter@597a7afa, org.springframework.security.web.authentication.logout.LogoutFilter@75ed125a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@362a561e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ad0bb4e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72a7aa4f, org.springframework.security.web.session.SessionManagementFilter@647fb583, org.springframework.security.web.access.ExceptionTranslationFilter@6d4a05f7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@71b26880]
2020-12-16 10:42:28 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:42:28 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:42:28 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:42:28 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:42:28 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:42:28 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:42:28 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.923 seconds (JVM running for 9.544)
2020-12-16 10:42:28 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:42:28 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 14 ms
2020-12-16 10:43:34 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:43:34 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 9768 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:43:34 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:43:36 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:43:36 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:43:36 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2020-12-16 10:43:36 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:43:36 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9dd57109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:43:37 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:43:37 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2336 ms
2020-12-16 10:43:39 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:43:40 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:43:40 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:43:40 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:43:40 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:43:40 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:43:40 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 593ac6a4-cf6a-472e-a19b-24ecb3ef986c

2020-12-16 10:43:40 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56da96b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b9aeedb, org.springframework.security.web.header.HeaderWriterFilter@650a1aff, org.springframework.security.web.authentication.logout.LogoutFilter@7a1371, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a7163e3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e4f4092, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b3d9c38, org.springframework.security.web.session.SessionManagementFilter@766b6d02, org.springframework.security.web.access.ExceptionTranslationFilter@8f39224, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4cb24e2]
2020-12-16 10:43:40 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:43:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:43:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:43:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:43:41 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:43:41 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:43:41 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.98 seconds (JVM running for 8.726)
2020-12-16 10:43:41 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:43:41 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-16 10:48:33 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 10:48:34 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 21716 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 10:48:34 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 10:48:35 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 10:48:35 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 10:48:35 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
2020-12-16 10:48:35 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 10:48:36 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb4b7b27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 10:48:36 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 10:48:36 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2442 ms
2020-12-16 10:48:39 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 10:48:39 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 10:48:39 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 10:48:39 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 10:48:39 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 10:48:39 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 10:48:40 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: a344ffbe-b735-41de-9737-bc5a7b184738

2020-12-16 10:48:40 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b3d9c38, org.springframework.security.web.context.SecurityContextPersistenceFilter@63485d7, org.springframework.security.web.header.HeaderWriterFilter@3babcaed, org.springframework.security.web.authentication.logout.LogoutFilter@6c6928c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44da7eb3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d829ef0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@426710f0, org.springframework.security.web.session.SessionManagementFilter@6b09ce57, org.springframework.security.web.access.ExceptionTranslationFilter@7f642bf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7be38eba]
2020-12-16 10:48:40 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 10:48:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 10:48:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 10:48:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 10:48:40 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 10:48:40 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 10:48:40 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.36 seconds (JVM running for 8.862)
2020-12-16 10:48:41 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 10:48:41 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-16 10:48:54 上午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 10:48:54 上午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 10:48:54 上午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 10:48:54 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 10:48:54 CST 2020时使用参数[Ljava.lang.Object;@6c512db7[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@97aefa8，共耗时238毫秒------
2020-12-16 10:48:54 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 10:48:54 CST 2020时使用参数[Ljava.lang.Object;@57a526d4[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=251, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时245毫秒------
2020-12-16 10:48:54 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 10:48:54 CST 2020时使用参数[Ljava.lang.Object;@3e91cbd4[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时236毫秒------
2020-12-16 10:48:56 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 10:48:56 CST 2020时使用参数[Ljava.lang.Object;@a38cc8[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时7毫秒------
2020-12-16 10:48:58 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 10:48:58 CST 2020时使用参数[Ljava.lang.Object;@5d1ccd26[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时12毫秒------
2020-12-16 10:49:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 10:49:01 CST 2020时使用参数[Ljava.lang.Object;@5627bdad[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@592f50ee，共耗时3毫秒------
2020-12-16 10:49:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 10:49:01 CST 2020时使用参数[Ljava.lang.Object;@59bc1a7c[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@25a9c15c]，共耗时21毫秒------
2020-12-16 10:49:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 10:49:01 CST 2020时使用参数[Ljava.lang.Object;@28440212[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@1112829c，共耗时9毫秒------
2020-12-16 10:49:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 10:49:01 CST 2020时使用参数[Ljava.lang.Object;@54535884[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@5c8f948e，共耗时2毫秒------
2020-12-16 10:49:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 10:49:01 CST 2020时使用参数[Ljava.lang.Object;@12d8c6c[{top.chris.shop.pojo.ItemsSpec@25a9c15c}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 10:49:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 10:49:01 CST 2020时使用参数[Ljava.lang.Object;@1a5b0d21[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012167P4FA8FXYW，共耗时65毫秒------
2020-12-16 10:49:01 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 10:54:31 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 10:54:31 CST 2020时使用参数[Ljava.lang.Object;@3449947a[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@29e8837c，共耗时8毫秒------
2020-12-16 10:54:31 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 10:54:31 CST 2020时使用参数[Ljava.lang.Object;@18a5f2d0[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@3d91aadc, top.chris.shop.pojo.Carousel@542c2e76, top.chris.shop.pojo.Carousel@c3084dc, top.chris.shop.pojo.Carousel@3b34d4f8]，共耗时7毫秒------
2020-12-16 10:54:31 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 10:54:31 CST 2020时使用参数[Ljava.lang.Object;@1cd39dfa[{}]调用,并得到了结果[top.chris.shop.pojo.Category@54021332, top.chris.shop.pojo.Category@296e5158, top.chris.shop.pojo.Category@381cdcf, top.chris.shop.pojo.Category@33dac08, top.chris.shop.pojo.Category@47e2b4de, top.chris.shop.pojo.Category@1cddc9eb, top.chris.shop.pojo.Category@11bf800a, top.chris.shop.pojo.Category@7f0c33d9, top.chris.shop.pojo.Category@2d1a2ca2, top.chris.shop.pojo.Category@5ffa3a7b]，共耗时7毫秒------
2020-12-16 10:54:31 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 10:54:31 CST 2020时使用参数[Ljava.lang.Object;@6cab61bc[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-16 10:54:44 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2020-12-16 10:58:14 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 10:58:14 CST 2020时使用参数[Ljava.lang.Object;@13910751[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6b8fca94，共耗时3毫秒------
2020-12-16 10:58:14 上午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 10:58:14 CST 2020时使用参数[Ljava.lang.Object;@366e4132[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@18cb9827, top.chris.shop.pojo.Carousel@44561b69, top.chris.shop.pojo.Carousel@273ee840, top.chris.shop.pojo.Carousel@639d5a44]，共耗时4毫秒------
2020-12-16 10:58:14 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 10:58:14 CST 2020时使用参数[Ljava.lang.Object;@4d7e55c5[{}]调用,并得到了结果[top.chris.shop.pojo.Category@22553965, top.chris.shop.pojo.Category@79896d1e, top.chris.shop.pojo.Category@5e3780c2, top.chris.shop.pojo.Category@615826bc, top.chris.shop.pojo.Category@6acdb5e3, top.chris.shop.pojo.Category@581ed439, top.chris.shop.pojo.Category@3acd6e68, top.chris.shop.pojo.Category@1a80c24b, top.chris.shop.pojo.Category@1d650e55, top.chris.shop.pojo.Category@33f4bedc]，共耗时6毫秒------
2020-12-16 10:58:14 上午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 10:58:14 CST 2020时使用参数[Ljava.lang.Object;@63094d16[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时4毫秒------
2020-12-16 11:02:06 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:02:07 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 19032 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:02:07 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:02:08 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:02:08 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:02:08 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
2020-12-16 11:02:08 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:02:09 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4ec2459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:02:09 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:02:09 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2575 ms
2020-12-16 11:02:12 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:02:12 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:02:12 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:02:12 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:02:12 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:02:12 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:02:13 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 21b45481-649a-47ab-8631-3f7311ab33fe

2020-12-16 11:02:13 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d4ecc67, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d8b66d9, org.springframework.security.web.header.HeaderWriterFilter@4fbaa7f5, org.springframework.security.web.authentication.logout.LogoutFilter@650a1aff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d1bf7bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75ad30c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@60dcf9ec, org.springframework.security.web.session.SessionManagementFilter@524f5ea5, org.springframework.security.web.access.ExceptionTranslationFilter@19b9f903, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d70e9a]
2020-12-16 11:02:13 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:02:13 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:02:13 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:02:13 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:02:13 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:02:13 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:02:13 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.259 seconds (JVM running for 8.486)
2020-12-16 11:02:23 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:02:23 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 11:03:31 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:03:31 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 23820 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:03:31 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:03:32 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:03:32 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:03:32 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 11:03:32 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:03:33 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$28eb4a26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:03:33 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:03:33 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2185 ms
2020-12-16 11:03:36 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:03:36 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:03:36 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:03:36 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:03:36 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:03:36 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:03:37 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 7b654fd1-2e91-41e2-9ef9-bfb4d945dd94

2020-12-16 11:03:37 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@cfd5cd2, org.springframework.security.web.context.SecurityContextPersistenceFilter@75ad30c1, org.springframework.security.web.header.HeaderWriterFilter@7cd3e0da, org.springframework.security.web.authentication.logout.LogoutFilter@5bb2fb2b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a6da47a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19bfbe28, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@762bf32d, org.springframework.security.web.session.SessionManagementFilter@4a660b34, org.springframework.security.web.access.ExceptionTranslationFilter@7d8b66d9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b4927e5]
2020-12-16 11:03:37 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:03:37 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:03:37 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:03:37 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:03:37 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:03:37 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:03:37 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.789 seconds (JVM running for 8.146)
2020-12-16 11:03:37 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:03:37 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 16 ms
2020-12-16 11:04:07 上午 [Thread: http-nio-8080-exec-10][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 11:04:07 上午 [Thread: http-nio-8080-exec-10][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 11:04:07 上午 [Thread: http-nio-8080-exec-10][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 11:04:08 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 11:04:07 CST 2020时使用参数[Ljava.lang.Object;@4a5db6a0[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@3fa02127, top.chris.shop.pojo.Carousel@553ae66c, top.chris.shop.pojo.Carousel@490f1772, top.chris.shop.pojo.Carousel@6ec04045]，共耗时572毫秒------
2020-12-16 11:04:08 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 11:04:07 CST 2020时使用参数[Ljava.lang.Object;@2a9933d7[{}]调用,并得到了结果[top.chris.shop.pojo.Category@3ed2d75, top.chris.shop.pojo.Category@c1522f0, top.chris.shop.pojo.Category@19c71740, top.chris.shop.pojo.Category@7a238824, top.chris.shop.pojo.Category@10cf8490, top.chris.shop.pojo.Category@35e826db, top.chris.shop.pojo.Category@14344a31, top.chris.shop.pojo.Category@7230923b, top.chris.shop.pojo.Category@1eb763e9, top.chris.shop.pojo.Category@6a1d501a]，共耗时573毫秒------
2020-12-16 11:04:08 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 11:04:07 CST 2020时使用参数[Ljava.lang.Object;@794b4d33[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@13ac17b8，共耗时132毫秒------
2020-12-16 11:04:08 上午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 11:04:08 CST 2020时使用参数[Ljava.lang.Object;@30564743[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时12毫秒------
2020-12-16 11:04:27 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 11:04:27 CST 2020时使用参数[Ljava.lang.Object;@2f0e68f9[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@759ec127, top.chris.shop.pojo.Carousel@3a5925c1, top.chris.shop.pojo.Carousel@4e3972bf, top.chris.shop.pojo.Carousel@12ac9221]，共耗时4毫秒------
2020-12-16 11:04:27 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 11:04:27 CST 2020时使用参数[Ljava.lang.Object;@6a026324[{}]调用,并得到了结果[top.chris.shop.pojo.Category@44c8ebf4, top.chris.shop.pojo.Category@1380d2d7, top.chris.shop.pojo.Category@34102577, top.chris.shop.pojo.Category@4df26b92, top.chris.shop.pojo.Category@4ee6be93, top.chris.shop.pojo.Category@5b65dbf2, top.chris.shop.pojo.Category@6e6b7674, top.chris.shop.pojo.Category@301b2ed0, top.chris.shop.pojo.Category@4bf20c66, top.chris.shop.pojo.Category@3e3df4a1]，共耗时5毫秒------
2020-12-16 11:04:27 上午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 11:04:27 CST 2020时使用参数[Ljava.lang.Object;@6df71946[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时24毫秒------
2020-12-16 11:04:27 上午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 11:04:27 CST 2020时使用参数[Ljava.lang.Object;@3ce14a52[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@48365845，共耗时3毫秒------
2020-12-16 11:05:10 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 11:05:10 CST 2020时使用参数[Ljava.lang.Object;@2d70598a[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@3a22ff1e, top.chris.shop.pojo.Carousel@6922c739, top.chris.shop.pojo.Carousel@2b076c26, top.chris.shop.pojo.Carousel@494dcc5]，共耗时3毫秒------
2020-12-16 11:05:10 上午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 11:05:10 CST 2020时使用参数[Ljava.lang.Object;@3b129d71[{}]调用,并得到了结果[top.chris.shop.pojo.Category@74eb34ed, top.chris.shop.pojo.Category@1d135587, top.chris.shop.pojo.Category@161826d, top.chris.shop.pojo.Category@2e376e25, top.chris.shop.pojo.Category@3566b52, top.chris.shop.pojo.Category@46ea9d2, top.chris.shop.pojo.Category@91131d8, top.chris.shop.pojo.Category@1c423099, top.chris.shop.pojo.Category@2c7ec4b8, top.chris.shop.pojo.Category@5d2fd8dc]，共耗时2毫秒------
2020-12-16 11:05:10 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 11:05:10 CST 2020时使用参数[Ljava.lang.Object;@7edd194a[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时3毫秒------
2020-12-16 11:05:10 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 11:05:10 CST 2020时使用参数[Ljava.lang.Object;@6b484645[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@3451e6c8，共耗时2毫秒------
2020-12-16 11:05:38 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:05:38 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 22992 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:05:38 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:05:39 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:05:39 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:05:39 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2020-12-16 11:05:40 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:05:40 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$78413038] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:05:40 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:05:41 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2498 ms
2020-12-16 11:05:43 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:05:43 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:05:44 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:05:44 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:05:44 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:05:44 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:05:44 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 1ec86e0b-31e1-4b9a-beb0-c9509e7432c3

2020-12-16 11:05:44 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1152900, org.springframework.security.web.context.SecurityContextPersistenceFilter@8f39224, org.springframework.security.web.header.HeaderWriterFilter@4a660b34, org.springframework.security.web.authentication.logout.LogoutFilter@2b170932, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c579202, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b9aeedb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fba0dac, org.springframework.security.web.session.SessionManagementFilter@ad0bb4e, org.springframework.security.web.access.ExceptionTranslationFilter@1182413a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63de4fa]
2020-12-16 11:05:44 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:05:44 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:05:44 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:05:44 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:05:44 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:05:44 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:05:44 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.896 seconds (JVM running for 8.197)
2020-12-16 11:06:00 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:06:00 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-16 11:10:21 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:10:22 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 18656 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:10:22 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:10:23 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:10:23 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:10:23 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 11:10:23 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:10:24 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4846d3e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:10:24 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:10:24 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2301 ms
2020-12-16 11:10:27 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:10:27 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:10:27 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:10:27 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:10:27 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:10:27 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:10:28 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 0c6b5048-38bc-4fc1-95e2-1ffca6577ec4

2020-12-16 11:10:28 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5be51aa, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c2e3460, org.springframework.security.web.header.HeaderWriterFilter@2b9aeedb, org.springframework.security.web.authentication.logout.LogoutFilter@5e98032e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3120495d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c60c681, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3302035b, org.springframework.security.web.session.SessionManagementFilter@44da7eb3, org.springframework.security.web.access.ExceptionTranslationFilter@653a5967, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@bf2aa32]
2020-12-16 11:10:28 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:10:28 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:10:28 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:10:28 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:10:28 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:10:28 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:10:28 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.139 seconds (JVM running for 8.918)
2020-12-16 11:10:32 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:10:32 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-16 11:14:41 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:14:41 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 21832 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:14:41 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:14:43 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:14:43 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:14:43 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 11:14:43 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:14:43 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e92ee562] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:14:44 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:14:44 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2225 ms
2020-12-16 11:14:46 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:14:46 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:14:47 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:14:47 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:14:47 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:14:47 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:14:47 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: d5773efd-b47e-4843-abc6-a64db751216d

2020-12-16 11:14:47 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66234b0f, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c579202, org.springframework.security.web.header.HeaderWriterFilter@5546e754, org.springframework.security.web.authentication.logout.LogoutFilter@b75b890, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b9aeedb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a7163e3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fca3eb5, org.springframework.security.web.session.SessionManagementFilter@3babcaed, org.springframework.security.web.access.ExceptionTranslationFilter@fe8aaeb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@34fcd292]
2020-12-16 11:14:47 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:14:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:14:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:14:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:14:47 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:14:47 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:14:47 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.693 seconds (JVM running for 8.407)
2020-12-16 11:15:08 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:15:08 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 15 ms
2020-12-16 11:19:46 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:19:47 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 9480 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:19:47 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:19:48 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:19:48 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:19:48 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2020-12-16 11:19:48 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:19:48 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3cc0fc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:19:49 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:19:49 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2425 ms
2020-12-16 11:19:52 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:19:52 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:19:52 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:19:52 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:19:52 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:19:52 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:19:52 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 4ce6179e-77c2-4261-9a57-7310a8be5603

2020-12-16 11:19:52 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2fca3eb5, org.springframework.security.web.context.SecurityContextPersistenceFilter@49ced9c7, org.springframework.security.web.header.HeaderWriterFilter@ad0bb4e, org.springframework.security.web.authentication.logout.LogoutFilter@70c491b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63485d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44da7eb3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69eb544f, org.springframework.security.web.session.SessionManagementFilter@2b9e69fb, org.springframework.security.web.access.ExceptionTranslationFilter@6b9697ae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63db743d]
2020-12-16 11:19:52 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:19:53 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:19:53 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:19:53 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:19:53 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:19:53 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:19:53 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.964 seconds (JVM running for 9.014)
2020-12-16 11:19:53 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:19:53 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 11:19:59 上午 [Thread: http-nio-8080-exec-8][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 11:19:59 上午 [Thread: http-nio-8080-exec-8][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 11:19:59 上午 [Thread: http-nio-8080-exec-8][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 11:19:59 上午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 11:19:59 CST 2020时使用参数[Ljava.lang.Object;@20122cbe[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@777ea971, top.chris.shop.pojo.Carousel@6bc13904, top.chris.shop.pojo.Carousel@492b8aa5, top.chris.shop.pojo.Carousel@78ed38e2]，共耗时320毫秒------
2020-12-16 11:19:59 上午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 11:19:59 CST 2020时使用参数[Ljava.lang.Object;@4c02a403[{}]调用,并得到了结果[top.chris.shop.pojo.Category@3ad92f1e, top.chris.shop.pojo.Category@55cadf8f, top.chris.shop.pojo.Category@2b4787b, top.chris.shop.pojo.Category@5bcfe692, top.chris.shop.pojo.Category@281d932a, top.chris.shop.pojo.Category@2b280701, top.chris.shop.pojo.Category@afed5bf, top.chris.shop.pojo.Category@2e214904, top.chris.shop.pojo.Category@6a611b29, top.chris.shop.pojo.Category@11a096b]，共耗时320毫秒------
2020-12-16 11:19:59 上午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 11:19:59 CST 2020时使用参数[Ljava.lang.Object;@4b0fae8[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-16 11:20:00 上午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver >> Method: org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:198) ]
WARN:Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-12-16 11:20:00 上午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 11:20:00 CST 2020时使用参数[Ljava.lang.Object;@794c1ad8[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6a7252a8，共耗时12毫秒------
2020-12-16 11:34:46 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:34:47 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 11940 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:34:47 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:34:48 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:34:48 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:34:48 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 11:34:48 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:34:49 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ae66b8d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:34:49 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:34:49 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2737 ms
2020-12-16 11:34:52 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:34:53 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:34:53 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:34:53 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:34:53 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:34:53 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:34:53 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: aa75add7-d85d-4837-b074-979ef6fff55b

2020-12-16 11:34:53 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d70e9a, org.springframework.security.web.context.SecurityContextPersistenceFilter@748904e8, org.springframework.security.web.header.HeaderWriterFilter@12cd129c, org.springframework.security.web.authentication.logout.LogoutFilter@fe8aaeb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29dcdd1c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@647fb583, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e98032e, org.springframework.security.web.session.SessionManagementFilter@10e56da9, org.springframework.security.web.access.ExceptionTranslationFilter@6704df84, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c60c681]
2020-12-16 11:34:53 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:34:53 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:34:53 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:34:53 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:34:54 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:34:54 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:34:54 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.858 seconds (JVM running for 9.585)
2020-12-16 11:34:54 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:34:54 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 9 ms
2020-12-16 11:39:13 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:39:13 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 29436 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:39:13 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:39:16 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:39:16 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:39:16 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2020-12-16 11:39:17 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:39:17 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$95ea7391] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:39:18 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:39:19 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 5317 ms
2020-12-16 11:39:22 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:39:22 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:39:22 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:39:22 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:39:22 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:39:22 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:39:23 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: cac59ef7-56de-47a6-972b-42895cd1c87c

2020-12-16 11:39:23 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b5312df, org.springframework.security.web.context.SecurityContextPersistenceFilter@782ac148, org.springframework.security.web.header.HeaderWriterFilter@4c2ab536, org.springframework.security.web.authentication.logout.LogoutFilter@5a06904, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23c7cb18, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e58f697, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4300e240, org.springframework.security.web.session.SessionManagementFilter@3dc82e6a, org.springframework.security.web.access.ExceptionTranslationFilter@749baa0c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@21a6a494]
2020-12-16 11:39:23 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:39:23 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:39:23 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:39:23 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:39:24 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:39:24 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:39:24 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 11.621 seconds (JVM running for 13.953)
2020-12-16 11:39:24 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:39:24 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 10 ms
2020-12-16 11:57:12 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:57:13 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 29536 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:57:13 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:57:14 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:57:14 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:57:14 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2020-12-16 11:57:15 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:57:15 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69865b08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:57:15 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:57:16 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2882 ms
2020-12-16 11:57:19 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:57:19 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:57:19 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:57:19 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:57:19 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:57:19 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:57:20 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 79eb9a01-0a93-4620-bcfb-64d8b9112948

2020-12-16 11:57:20 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b5ad306, org.springframework.security.web.context.SecurityContextPersistenceFilter@4239262e, org.springframework.security.web.header.HeaderWriterFilter@49cb5030, org.springframework.security.web.authentication.logout.LogoutFilter@35dcd032, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@64fdcf99, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ce561cc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54be6213, org.springframework.security.web.session.SessionManagementFilter@7e58f697, org.springframework.security.web.access.ExceptionTranslationFilter@26d40c77, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5908e6d6]
2020-12-16 11:57:20 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:57:20 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:57:20 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:57:20 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:57:20 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:57:20 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:57:20 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.068 seconds (JVM running for 10.03)
2020-12-16 11:57:20 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:57:20 上午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 11:58:31 上午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 11:58:31 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 27380 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 11:58:31 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 11:58:32 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 11:58:32 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 11:58:32 上午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 11:58:33 上午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 11:58:33 上午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2cd0797a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 11:58:33 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 11:58:34 上午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2774 ms
2020-12-16 11:58:37 上午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 11:58:37 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 11:58:37 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 11:58:37 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 11:58:37 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 11:58:37 上午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 11:58:37 上午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 822755a0-4700-4fee-a77c-ad46b5bf4d04

2020-12-16 11:58:38 上午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44fb6ebd, org.springframework.security.web.context.SecurityContextPersistenceFilter@2475fba3, org.springframework.security.web.header.HeaderWriterFilter@5ed25612, org.springframework.security.web.authentication.logout.LogoutFilter@4c2ab536, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@349f0ca4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@baa227e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5da57a64, org.springframework.security.web.session.SessionManagementFilter@600bbf9e, org.springframework.security.web.access.ExceptionTranslationFilter@7185e611, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@184751f3]
2020-12-16 11:58:38 上午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 11:58:38 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 11:58:38 上午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 11:58:38 上午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 11:58:38 上午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 11:58:38 上午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 11:58:38 上午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.705 seconds (JVM running for 9.157)
2020-12-16 11:58:38 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 11:58:38 上午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 12:08:01 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 12:08:01 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 28752 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 12:08:01 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 12:08:03 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 12:08:03 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 12:08:03 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
2020-12-16 12:08:03 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 12:08:03 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4fe361c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 12:08:04 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 12:08:04 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2543 ms
2020-12-16 12:08:07 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 12:08:07 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 12:08:07 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 12:08:07 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 12:08:07 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 12:08:07 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 12:08:07 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: b7dee16e-5932-40f1-9e01-b0ed5fc80ce8

2020-12-16 12:08:07 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32dcfeea, org.springframework.security.web.context.SecurityContextPersistenceFilter@507049f2, org.springframework.security.web.header.HeaderWriterFilter@7493d937, org.springframework.security.web.authentication.logout.LogoutFilter@7b7068d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a4c98d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38bc5ac0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@738a815c, org.springframework.security.web.session.SessionManagementFilter@2347b7af, org.springframework.security.web.access.ExceptionTranslationFilter@451816fd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4536a715]
2020-12-16 12:08:07 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 12:08:08 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 12:08:08 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 12:08:08 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 12:08:08 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 12:08:08 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 12:08:08 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.139 seconds (JVM running for 9.431)
2020-12-16 12:08:08 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 12:08:08 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 12:11:28 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 12:11:29 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 21716 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 12:11:29 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 12:11:31 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 12:11:31 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 12:11:31 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 41ms. Found 0 repository interfaces.
2020-12-16 12:11:31 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 12:11:32 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d43ed6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 12:11:32 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 12:11:33 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3666 ms
2020-12-16 12:11:36 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 12:11:36 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 12:11:36 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 12:11:36 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 12:11:36 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 12:11:36 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 12:11:36 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 87ce66e2-bd2c-44a4-a7b3-be65d2c528f7

2020-12-16 12:11:37 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@286866cb, org.springframework.security.web.context.SecurityContextPersistenceFilter@2262f0d8, org.springframework.security.web.header.HeaderWriterFilter@1c00d406, org.springframework.security.web.authentication.logout.LogoutFilter@12e5d3e1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@451816fd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@600bbf9e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ce561cc, org.springframework.security.web.session.SessionManagementFilter@20b54cfe, org.springframework.security.web.access.ExceptionTranslationFilter@5d7f1e59, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3eac2e8a]
2020-12-16 12:11:37 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 12:11:37 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 12:11:37 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 12:11:37 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 12:11:37 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 12:11:37 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 12:11:37 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.975 seconds (JVM running for 10.506)
2020-12-16 12:11:37 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 12:11:37 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 14 ms
2020-12-16 12:13:24 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 12:13:25 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 8216 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 12:13:25 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 12:13:27 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 12:13:27 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 12:13:27 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 38ms. Found 0 repository interfaces.
2020-12-16 12:13:27 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 12:13:27 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$330936a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 12:13:28 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 12:13:28 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3161 ms
2020-12-16 12:13:31 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 12:13:31 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 12:13:32 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 12:13:32 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 12:13:32 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 12:13:32 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 12:13:32 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 0f0c9447-f43f-46ab-9a9c-a7d19af769a7

2020-12-16 12:13:32 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3375b118, org.springframework.security.web.context.SecurityContextPersistenceFilter@384472bf, org.springframework.security.web.header.HeaderWriterFilter@1f172892, org.springframework.security.web.authentication.logout.LogoutFilter@2026fbff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7493d937, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71dd4624, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@667797f, org.springframework.security.web.session.SessionManagementFilter@59e082f8, org.springframework.security.web.access.ExceptionTranslationFilter@1c00d406, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1805383]
2020-12-16 12:13:32 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 12:13:32 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 12:13:32 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 12:13:32 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 12:13:32 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 12:13:33 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 12:13:33 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.419 seconds (JVM running for 10.102)
2020-12-16 12:13:33 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 12:13:33 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 10 ms
2020-12-16 12:15:35 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 12:15:35 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 24072 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 12:15:35 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 12:15:37 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 12:15:37 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 12:15:37 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 12:15:38 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 12:15:38 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$db0c1ff5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 12:15:38 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 12:15:39 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3583 ms
2020-12-16 12:15:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 12:15:42 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 12:15:42 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 12:15:42 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 12:15:42 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 12:15:42 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 12:15:42 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: fef85e61-02fa-4b73-aaca-5c8518ce860e

2020-12-16 12:15:42 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@236861da, org.springframework.security.web.context.SecurityContextPersistenceFilter@2084e65a, org.springframework.security.web.header.HeaderWriterFilter@4fbb1144, org.springframework.security.web.authentication.logout.LogoutFilter@7bec8cb0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54463380, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14874a5d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37fef327, org.springframework.security.web.session.SessionManagementFilter@8b670c0, org.springframework.security.web.access.ExceptionTranslationFilter@2026fbff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4228f269]
2020-12-16 12:15:43 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 12:15:43 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 12:15:43 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 12:15:43 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 12:15:43 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 12:15:43 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 12:15:43 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.215 seconds (JVM running for 9.791)
2020-12-16 12:15:43 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 12:15:43 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 12:26:07 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 12:26:07 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 21704 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 12:26:07 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 12:26:09 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 12:26:09 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 12:26:09 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 12:26:10 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 12:26:10 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b126bacd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 12:26:10 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 12:26:11 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3699 ms
2020-12-16 12:26:14 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 12:26:14 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 12:26:14 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 12:26:14 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 12:26:14 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 12:26:14 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 12:26:15 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 7abbd07d-beca-4946-abee-f910ff3d93cf

2020-12-16 12:26:15 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5103eea2, org.springframework.security.web.context.SecurityContextPersistenceFilter@66f2ec1c, org.springframework.security.web.header.HeaderWriterFilter@600bbf9e, org.springframework.security.web.authentication.logout.LogoutFilter@3dc82e6a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@351e89fc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@749baa0c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@762405bf, org.springframework.security.web.session.SessionManagementFilter@4e94669c, org.springframework.security.web.access.ExceptionTranslationFilter@c497a55, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4522d793]
2020-12-16 12:26:15 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 12:26:15 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 12:26:15 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 12:26:15 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 12:26:15 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 12:26:15 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 12:26:15 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 9.083 seconds (JVM running for 10.828)
2020-12-16 12:26:15 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 12:26:15 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 12:27:19 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 12:27:19 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 19348 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 12:27:19 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 12:27:23 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 12:27:23 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 12:27:23 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2020-12-16 12:27:23 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 12:27:24 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$afebda8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 12:27:24 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 12:27:25 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 5466 ms
2020-12-16 12:27:28 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 12:27:28 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 12:27:28 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 12:27:28 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 12:27:28 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 12:27:28 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 12:27:29 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 758a4f74-dc7b-406f-9490-7479334f577c

2020-12-16 12:27:29 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f0677f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@2fb082ff, org.springframework.security.web.header.HeaderWriterFilter@19bf47fc, org.springframework.security.web.authentication.logout.LogoutFilter@46d1b59, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e2b3026, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8b670c0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9d99851, org.springframework.security.web.session.SessionManagementFilter@b3fc6d8, org.springframework.security.web.access.ExceptionTranslationFilter@a3b858f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@44fb6ebd]
2020-12-16 12:27:29 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 12:27:29 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 12:27:29 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 12:27:29 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 12:27:29 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 12:27:30 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 12:27:30 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 10.986 seconds (JVM running for 12.956)
2020-12-16 12:27:30 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 12:27:30 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 66 ms
2020-12-16 12:52:43 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 12:52:44 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 8212 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 12:52:44 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 12:52:47 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 12:52:47 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 12:52:47 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 48ms. Found 0 repository interfaces.
2020-12-16 12:52:47 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 12:52:48 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6eb971f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 12:52:49 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 12:52:49 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 4899 ms
2020-12-16 12:52:54 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 12:52:54 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 12:52:55 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 12:52:55 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 12:52:55 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 12:52:55 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 12:52:56 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: b738af20-5e04-4ebc-929f-b31418356c00

2020-12-16 12:52:56 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45e7bb79, org.springframework.security.web.context.SecurityContextPersistenceFilter@10dfa7ef, org.springframework.security.web.header.HeaderWriterFilter@5d3f99d7, org.springframework.security.web.authentication.logout.LogoutFilter@5da57a64, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e848aea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@184751f3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@605c7a9e, org.springframework.security.web.session.SessionManagementFilter@3eac2e8a, org.springframework.security.web.access.ExceptionTranslationFilter@23c7cb18, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@98637a2]
2020-12-16 12:52:56 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 12:52:56 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 12:52:56 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 12:52:56 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 12:52:57 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 12:52:57 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 12:52:57 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 14.356 seconds (JVM running for 16.406)
2020-12-16 12:52:57 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 12:52:57 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-16 12:54:05 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 12:54:05 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 8092 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 12:54:05 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 12:54:07 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 12:54:07 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 12:54:07 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 40ms. Found 0 repository interfaces.
2020-12-16 12:54:07 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 12:54:07 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9dd57109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 12:54:08 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 12:54:08 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3073 ms
2020-12-16 12:54:12 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 12:54:12 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 12:54:12 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 12:54:12 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 12:54:12 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 12:54:12 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 12:54:13 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: b9967441-85d7-4ead-a011-e3a506c461b2

2020-12-16 12:54:13 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6136e1fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@2864f887, org.springframework.security.web.header.HeaderWriterFilter@9e33a6a, org.springframework.security.web.authentication.logout.LogoutFilter@21527b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ed31735, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fbb1144, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1736c1e4, org.springframework.security.web.session.SessionManagementFilter@19bf47fc, org.springframework.security.web.access.ExceptionTranslationFilter@3b8507df, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47f2c722]
2020-12-16 12:54:13 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 12:54:13 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 12:54:13 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 12:54:13 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 12:54:13 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 12:54:14 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 12:54:14 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 9.274 seconds (JVM running for 11.036)
2020-12-16 12:54:14 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 12:54:14 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 12:55:21 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 12:55:21 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 12:55:22 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 12:55:22 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 12:55:21 CST 2020时使用参数[Ljava.lang.Object;@794fe6c6[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@d753a4，共耗时912毫秒------
2020-12-16 12:55:22 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 12:55:22 CST 2020时使用参数[Ljava.lang.Object;@1aaeb502[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@127408f0, top.chris.shop.pojo.Carousel@5fca8ae, top.chris.shop.pojo.Carousel@6553700b, top.chris.shop.pojo.Carousel@abadf06]，共耗时14毫秒------
2020-12-16 12:55:22 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 12:55:22 CST 2020时使用参数[Ljava.lang.Object;@73ea48be[{}]调用,并得到了结果[top.chris.shop.pojo.Category@342c5e25, top.chris.shop.pojo.Category@5a509611, top.chris.shop.pojo.Category@232a1e67, top.chris.shop.pojo.Category@2241d04, top.chris.shop.pojo.Category@54afb613, top.chris.shop.pojo.Category@a914289, top.chris.shop.pojo.Category@79bbac9a, top.chris.shop.pojo.Category@5b555294, top.chris.shop.pojo.Category@726368c3, top.chris.shop.pojo.Category@72e6e90c]，共耗时13毫秒------
2020-12-16 12:55:22 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 12:55:22 CST 2020时使用参数[Ljava.lang.Object;@6f47b1df[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时12毫秒------
2020-12-16 12:55:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 12:55:42 CST 2020时使用参数[Ljava.lang.Object;@1bf351e6[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@7a630f03，共耗时8毫秒------
2020-12-16 12:55:43 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 12:55:43 CST 2020时使用参数[Ljava.lang.Object;@28d46135[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@126fa45d, top.chris.shop.pojo.Carousel@de40c94, top.chris.shop.pojo.Carousel@3d60d513, top.chris.shop.pojo.Carousel@3636c643]，共耗时4毫秒------
2020-12-16 12:55:43 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 12:55:43 CST 2020时使用参数[Ljava.lang.Object;@1e14bffa[{}]调用,并得到了结果[top.chris.shop.pojo.Category@73457335, top.chris.shop.pojo.Category@4a29568, top.chris.shop.pojo.Category@152e860, top.chris.shop.pojo.Category@3a027cdf, top.chris.shop.pojo.Category@62067c71, top.chris.shop.pojo.Category@721fbc8c, top.chris.shop.pojo.Category@64185b47, top.chris.shop.pojo.Category@4dd5279f, top.chris.shop.pojo.Category@1ce12fa0, top.chris.shop.pojo.Category@13150b6c]，共耗时11毫秒------
2020-12-16 12:55:43 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 12:55:43 CST 2020时使用参数[Ljava.lang.Object;@73601943[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-16 12:57:49 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 12:57:49 CST 2020时使用参数[Ljava.lang.Object;@43021dff[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@1fbff4c2，共耗时9毫秒------
2020-12-16 12:57:50 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 12:57:50 CST 2020时使用参数[Ljava.lang.Object;@b1f4332[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@1723b753, top.chris.shop.pojo.Carousel@2d262ca2, top.chris.shop.pojo.Carousel@5704578f, top.chris.shop.pojo.Carousel@2673888e]，共耗时4毫秒------
2020-12-16 12:57:50 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 12:57:50 CST 2020时使用参数[Ljava.lang.Object;@74b82a72[{}]调用,并得到了结果[top.chris.shop.pojo.Category@5f1800cf, top.chris.shop.pojo.Category@3f8fcda2, top.chris.shop.pojo.Category@3ecdd7c5, top.chris.shop.pojo.Category@b1391d4, top.chris.shop.pojo.Category@1412e601, top.chris.shop.pojo.Category@55b1cbfc, top.chris.shop.pojo.Category@5125d70, top.chris.shop.pojo.Category@1298f137, top.chris.shop.pojo.Category@11b93f8b, top.chris.shop.pojo.Category@4a0cf86b]，共耗时3毫秒------
2020-12-16 12:57:50 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 12:57:50 CST 2020时使用参数[Ljava.lang.Object;@56f1e382[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时5毫秒------
2020-12-16 12:58:46 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 12:58:46 CST 2020时使用参数[Ljava.lang.Object;@4c5b3af3[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@414674c9，共耗时3毫秒------
2020-12-16 12:58:47 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 12:58:47 CST 2020时使用参数[Ljava.lang.Object;@7560cc9d[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@79bfa5ce, top.chris.shop.pojo.Carousel@2bc896ca, top.chris.shop.pojo.Carousel@332981f2, top.chris.shop.pojo.Carousel@405ea72e]，共耗时6毫秒------
2020-12-16 12:58:47 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 12:58:47 CST 2020时使用参数[Ljava.lang.Object;@31c0fd8b[{}]调用,并得到了结果[top.chris.shop.pojo.Category@4f990d75, top.chris.shop.pojo.Category@5cf8c50a, top.chris.shop.pojo.Category@3146c8a2, top.chris.shop.pojo.Category@7dc57a4, top.chris.shop.pojo.Category@29008f, top.chris.shop.pojo.Category@1ae34515, top.chris.shop.pojo.Category@1d679d33, top.chris.shop.pojo.Category@78e3984c, top.chris.shop.pojo.Category@3086c2a7, top.chris.shop.pojo.Category@304de24f]，共耗时9毫秒------
2020-12-16 12:58:47 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 12:58:47 CST 2020时使用参数[Ljava.lang.Object;@2de1dd38[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时6毫秒------
2020-12-16 12:59:17 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 12:59:17 CST 2020时使用参数[Ljava.lang.Object;@68a3b069[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@103b5a16，共耗时3毫秒------
2020-12-16 12:59:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 12:59:17 CST 2020时使用参数[Ljava.lang.Object;@3ae67e4[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@3f6518bb, top.chris.shop.pojo.Carousel@5e7048df, top.chris.shop.pojo.Carousel@302c7bf9, top.chris.shop.pojo.Carousel@404dab5f]，共耗时3毫秒------
2020-12-16 12:59:17 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 12:59:17 CST 2020时使用参数[Ljava.lang.Object;@14e83a5e[{}]调用,并得到了结果[top.chris.shop.pojo.Category@175a890e, top.chris.shop.pojo.Category@7790142a, top.chris.shop.pojo.Category@3b39b278, top.chris.shop.pojo.Category@6ed6558b, top.chris.shop.pojo.Category@2d87b3a6, top.chris.shop.pojo.Category@5a41c378, top.chris.shop.pojo.Category@2c9d003a, top.chris.shop.pojo.Category@703b622f, top.chris.shop.pojo.Category@6031f50d, top.chris.shop.pojo.Category@34bfa070]，共耗时3毫秒------
2020-12-16 12:59:17 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 12:59:17 CST 2020时使用参数[Ljava.lang.Object;@481ab67[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时4毫秒------
2020-12-16 13:18:46 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:18:45 CST 2020时使用参数[Ljava.lang.Object;@14c0244[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@224c1751，共耗时736毫秒------
2020-12-16 13:18:46 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:18:45 CST 2020时使用参数[Ljava.lang.Object;@7cbce55f[{}]调用,并得到了结果[top.chris.shop.pojo.Category@70cfd352, top.chris.shop.pojo.Category@192cbabe, top.chris.shop.pojo.Category@27f4f70b, top.chris.shop.pojo.Category@3cf968b7, top.chris.shop.pojo.Category@32227939, top.chris.shop.pojo.Category@4e27dc89, top.chris.shop.pojo.Category@4e6b36e9, top.chris.shop.pojo.Category@39205343, top.chris.shop.pojo.Category@186a1eef, top.chris.shop.pojo.Category@68d94aff]，共耗时675毫秒------
2020-12-16 13:18:46 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:18:45 CST 2020时使用参数[Ljava.lang.Object;@5b59768c[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@364550a2, top.chris.shop.pojo.Carousel@6b414d1, top.chris.shop.pojo.Carousel@5242a63a, top.chris.shop.pojo.Carousel@42bf57e8]，共耗时677毫秒------
2020-12-16 13:18:46 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:18:46 CST 2020时使用参数[Ljava.lang.Object;@416c67d[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时4毫秒------
2020-12-16 13:19:16 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:19:16 CST 2020时使用参数[Ljava.lang.Object;@62c72582[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@505505f3，共耗时2毫秒------
2020-12-16 13:19:17 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:19:17 CST 2020时使用参数[Ljava.lang.Object;@1f8eb687[{}]调用,并得到了结果[top.chris.shop.pojo.Category@46b275bf, top.chris.shop.pojo.Category@23d710ee, top.chris.shop.pojo.Category@7de904a6, top.chris.shop.pojo.Category@17b9af12, top.chris.shop.pojo.Category@42f32fd7, top.chris.shop.pojo.Category@59380707, top.chris.shop.pojo.Category@6c41f4b2, top.chris.shop.pojo.Category@36da1717, top.chris.shop.pojo.Category@6d0c1b8c, top.chris.shop.pojo.Category@74953915]，共耗时3毫秒------
2020-12-16 13:19:17 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:19:17 CST 2020时使用参数[Ljava.lang.Object;@4cfa47b1[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@552a76d2, top.chris.shop.pojo.Carousel@1ffb5947, top.chris.shop.pojo.Carousel@49273ed0, top.chris.shop.pojo.Carousel@57fe2f8a]，共耗时4毫秒------
2020-12-16 13:19:17 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:19:17 CST 2020时使用参数[Ljava.lang.Object;@af4d000[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时4毫秒------
2020-12-16 13:22:24 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:22:25 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 26980 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:22:25 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:22:34 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:22:34 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 21712 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:22:34 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:22:35 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 13:22:35 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 13:22:35 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces.
2020-12-16 13:22:36 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 13:22:36 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bbd5bb7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 13:22:37 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 13:22:37 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3011 ms
2020-12-16 13:22:40 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 13:22:41 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 13:22:41 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 13:22:41 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 13:22:41 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 13:22:41 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 13:22:41 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 719ac6e7-ab58-41d7-a7ea-bfee17dfbb75

2020-12-16 13:22:42 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21a6a494, org.springframework.security.web.context.SecurityContextPersistenceFilter@8b670c0, org.springframework.security.web.header.HeaderWriterFilter@351e89fc, org.springframework.security.web.authentication.logout.LogoutFilter@44384b4a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@360d41d0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@85ab964, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@794c5f5e, org.springframework.security.web.session.SessionManagementFilter@1b3bec6c, org.springframework.security.web.access.ExceptionTranslationFilter@2fb082ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@46b6701e]
2020-12-16 13:22:42 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 13:22:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 13:22:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 13:22:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 13:22:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 13:22:42 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 13:22:42 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.758 seconds (JVM running for 10.191)
2020-12-16 13:24:07 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 13:24:07 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 49 ms
2020-12-16 13:24:08 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 13:24:08 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 13:24:08 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 13:24:08 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:24:07 CST 2020时使用参数[Ljava.lang.Object;@7f80a97c[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@463ad5e7，共耗时703毫秒------
2020-12-16 13:24:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:24:07 CST 2020时使用参数[Ljava.lang.Object;@10a82a7f[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时703毫秒------
2020-12-16 13:24:08 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:24:07 CST 2020时使用参数[Ljava.lang.Object;@6ad84b0a[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=250, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时784毫秒------
2020-12-16 13:24:13 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:24:13 CST 2020时使用参数[Ljava.lang.Object;@c7b3ffb[{{cookies-54-spec-1,cookies-54-spec-2,cookies-54-spec-3}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350), ShopCartVo(specId=cookies-54-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=原味, priceNormal=21500, priceDiscount=17200), ShopCartVo(specId=cookies-54-spec-3, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=草莓味, priceNormal=21500, priceDiscount=21500)]，共耗时56毫秒------
2020-12-16 13:24:16 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:24:16 CST 2020时使用参数[Ljava.lang.Object;@929bdb2[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时11毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@5abf5344[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@309ac32c，共耗时4毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@7d3cd488[{[cookies-54-spec-1, cookies-54-spec-2, cookies-54-spec-3]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@ab6bca5, top.chris.shop.pojo.ItemsSpec@4d6db572, top.chris.shop.pojo.ItemsSpec@298f92c3]，共耗时31毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@2d06b865[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@784a3e8c，共耗时3毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@39a95326[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@10beb4c1，共耗时2毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@6e019368[{top.chris.shop.pojo.ItemsSpec@ab6bca5}]调用,并得到了结果1，共耗时26毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@77277ee[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@4ca88a39，共耗时2毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@732b97f1[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@18409a9e，共耗时3毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@48ecd120[{top.chris.shop.pojo.ItemsSpec@4d6db572}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@7f27c3c5[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@a1cf78c，共耗时4毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@4b24b6c8[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@6ea7cdce，共耗时3毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@9101dc6[{top.chris.shop.pojo.ItemsSpec@298f92c3}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:24:21 CST 2020时使用参数[Ljava.lang.Object;@62c23272[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1,cookies-54-spec-2,cookies-54-spec-3, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169GX3NKG1GC，共耗时216毫秒------
2020-12-16 13:24:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:26:39 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:26:40 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 16104 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:26:40 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:26:42 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 13:26:42 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 13:26:42 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 13:26:42 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 13:26:42 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$63ad03db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 13:26:43 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 13:26:43 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3502 ms
2020-12-16 13:26:46 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 13:26:46 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 13:26:46 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 13:26:46 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 13:26:46 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 13:26:46 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 13:26:47 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 5b78f898-d200-4745-99c5-eef40a8ecfa4

2020-12-16 13:26:47 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@184751f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b8507df, org.springframework.security.web.header.HeaderWriterFilter@45f9d394, org.springframework.security.web.authentication.logout.LogoutFilter@351e89fc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d67d5a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2864f887, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46ea78f0, org.springframework.security.web.session.SessionManagementFilter@44d43cc9, org.springframework.security.web.access.ExceptionTranslationFilter@559d19c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@9f0fc36]
2020-12-16 13:26:47 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 13:26:47 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 13:26:47 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 13:26:47 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 13:26:47 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 13:26:47 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 13:26:47 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.329 seconds (JVM running for 9.889)
2020-12-16 13:26:59 下午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 13:26:59 下午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 13:26:59 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 13:26:59 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 13:26:59 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 13:26:59 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:26:59 CST 2020时使用参数[Ljava.lang.Object;@5cf1e057[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@402166ac，共耗时224毫秒------
2020-12-16 13:26:59 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:26:59 CST 2020时使用参数[Ljava.lang.Object;@1b4b87a8[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=249, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=303, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=196, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时232毫秒------
2020-12-16 13:26:59 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:26:59 CST 2020时使用参数[Ljava.lang.Object;@7322856e[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时225毫秒------
2020-12-16 13:27:03 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:27:03 CST 2020时使用参数[Ljava.lang.Object;@4c303037[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时7毫秒------
2020-12-16 13:27:05 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:27:05 CST 2020时使用参数[Ljava.lang.Object;@3fc3d247[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时16毫秒------
2020-12-16 13:27:08 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:27:08 CST 2020时使用参数[Ljava.lang.Object;@97b0464[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@a09b882，共耗时3毫秒------
2020-12-16 13:27:08 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:27:08 CST 2020时使用参数[Ljava.lang.Object;@35110366[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@792f8b50]，共耗时19毫秒------
2020-12-16 13:27:08 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:27:08 CST 2020时使用参数[Ljava.lang.Object;@2f4e5d18[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@127971a4，共耗时3毫秒------
2020-12-16 13:27:08 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:27:08 CST 2020时使用参数[Ljava.lang.Object;@7be5ebf2[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@269ecf0b，共耗时3毫秒------
2020-12-16 13:27:08 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:27:08 CST 2020时使用参数[Ljava.lang.Object;@20d90d0f[{top.chris.shop.pojo.ItemsSpec@792f8b50}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 13:27:08 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:27:08 CST 2020时使用参数[Ljava.lang.Object;@6ecb206b[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169HSZS8D1P0，共耗时55毫秒------
2020-12-16 13:27:08 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:29:22 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:29:22 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 28116 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:29:22 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:29:23 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 13:29:23 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 13:29:23 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2020-12-16 13:29:23 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 13:29:24 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bdb7a6d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 13:29:24 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 13:29:25 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2647 ms
2020-12-16 13:29:27 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 13:29:27 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 13:29:27 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 13:29:27 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 13:29:27 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 13:29:27 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 13:29:28 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: ab7faab8-a14b-42a5-9fb2-b0a61d8cccf1

2020-12-16 13:29:28 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e27f603, org.springframework.security.web.context.SecurityContextPersistenceFilter@2347b7af, org.springframework.security.web.header.HeaderWriterFilter@45cd8607, org.springframework.security.web.authentication.logout.LogoutFilter@1b8fa2fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12e5d3e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15586843, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6136e1fc, org.springframework.security.web.session.SessionManagementFilter@2475fba3, org.springframework.security.web.access.ExceptionTranslationFilter@656ec00d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6598caab]
2020-12-16 13:29:28 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 13:29:28 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 13:29:28 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 13:29:28 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 13:29:28 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 13:29:28 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 13:29:28 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.199 seconds (JVM running for 8.639)
2020-12-16 13:29:42 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 13:29:42 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 10 ms
2020-12-16 13:29:42 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 13:29:42 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 13:29:42 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 13:29:42 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.searchItemsLikeName在Wed Dec 16 13:29:42 CST 2020时使用参数[Ljava.lang.Object;@2cb33d8[{SearchItemsBo(keywords=天, catId=null, sort=k, page=1, pageSize=20)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@31905a9e，共耗时362毫秒------
2020-12-16 13:29:44 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:29:44 CST 2020时使用参数[Ljava.lang.Object;@7ea923db[{tea-1002}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时13毫秒------
2020-12-16 13:29:44 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:29:44 CST 2020时使用参数[Ljava.lang.Object;@62a96e6e[{CommentBo(itemId=tea-1002, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@23080922，共耗时14毫秒------
2020-12-16 13:29:44 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:29:44 CST 2020时使用参数[Ljava.lang.Object;@146ab4d4[{tea-1002}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】精品龙井茶 居家必备 喝茶最佳, sellCounts=985, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/tea-1002/img1.png"><img src="http://122.152.205.72:88/foodie/tea-1002/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/tea-1002/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/tea-1002/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-1, name=散装, priceDiscount=18720, priceNormal=20800, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-2, name=盒装, priceDiscount=16640, priceNormal=20800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-3, name=试吃装, priceDiscount=20800, priceNormal=20800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时27毫秒------
2020-12-16 13:29:47 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:29:47 CST 2020时使用参数[Ljava.lang.Object;@32b89cd0[{{tea-1002-spec-1}}]调用,并得到了结果[ShopCartVo(specId=tea-1002-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/tea-1002/img1.png, itemName=【天天吃货】精品龙井茶 居家必备 喝茶最佳, specName=散装, priceNormal=20800, priceDiscount=18720)]，共耗时6毫秒------
2020-12-16 13:29:49 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:29:49 CST 2020时使用参数[Ljava.lang.Object;@23270019[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时10毫秒------
2020-12-16 13:29:51 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:29:51 CST 2020时使用参数[Ljava.lang.Object;@734fa600[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@3daa5aed，共耗时2毫秒------
2020-12-16 13:29:51 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:29:51 CST 2020时使用参数[Ljava.lang.Object;@61dc46d2[{[tea-1002-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@2fe18f2c]，共耗时16毫秒------
2020-12-16 13:29:51 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:29:51 CST 2020时使用参数[Ljava.lang.Object;@1aee1e79[{tea-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@19873120，共耗时3毫秒------
2020-12-16 13:29:51 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:29:51 CST 2020时使用参数[Ljava.lang.Object;@557cce53[{tea-1002}]调用,并得到了结果top.chris.shop.pojo.Items@7552fbed，共耗时3毫秒------
2020-12-16 13:29:51 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:29:51 CST 2020时使用参数[Ljava.lang.Object;@2c0403bb[{top.chris.shop.pojo.ItemsSpec@2fe18f2c}]调用,并得到了结果1，共耗时6毫秒------
2020-12-16 13:29:51 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:29:51 CST 2020时使用参数[Ljava.lang.Object;@3f54576a[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=tea-1002-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169KPB6APF14，共耗时112毫秒------
2020-12-16 13:29:51 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:30:16 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:30:17 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 25836 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:30:17 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:30:18 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 13:30:18 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 13:30:18 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 13:30:18 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 13:30:18 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f4d0541] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 13:30:19 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 13:30:19 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2430 ms
2020-12-16 13:30:22 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 13:30:22 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 13:30:22 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 13:30:22 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 13:30:22 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 13:30:22 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 13:30:22 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 4f37968c-d4d4-485e-81de-9679ddfcb897

2020-12-16 13:30:22 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e848aea, org.springframework.security.web.context.SecurityContextPersistenceFilter@2bdb5e0f, org.springframework.security.web.header.HeaderWriterFilter@2326180c, org.springframework.security.web.authentication.logout.LogoutFilter@66f2ec1c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b8507df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d67d5a4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@786a3477, org.springframework.security.web.session.SessionManagementFilter@1c2d63f0, org.springframework.security.web.access.ExceptionTranslationFilter@223967ea, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7bec8cb0]
2020-12-16 13:30:22 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 13:30:22 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 13:30:22 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 13:30:22 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 13:30:23 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 13:30:23 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 13:30:23 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.718 seconds (JVM running for 8.172)
2020-12-16 13:30:30 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 13:30:30 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 13:30:30 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 13:30:30 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 13:30:31 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 13:30:31 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:30:30 CST 2020时使用参数[Ljava.lang.Object;@33462805[{CommentBo(itemId=tea-1002, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@ed3e1c3，共耗时242毫秒------
2020-12-16 13:30:31 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:30:30 CST 2020时使用参数[Ljava.lang.Object;@3c3097fa[{tea-1002}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时242毫秒------
2020-12-16 13:30:31 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:30:30 CST 2020时使用参数[Ljava.lang.Object;@2983e267[{tea-1002}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】精品龙井茶 居家必备 喝茶最佳, sellCounts=985, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/tea-1002/img1.png"><img src="http://122.152.205.72:88/foodie/tea-1002/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/tea-1002/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/tea-1002/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-1, name=散装, priceDiscount=18720, priceNormal=20800, stock=259, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-2, name=盒装, priceDiscount=16640, priceNormal=20800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-3, name=试吃装, priceDiscount=20800, priceNormal=20800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时249毫秒------
2020-12-16 13:30:36 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:30:36 CST 2020时使用参数[Ljava.lang.Object;@e2b1d03[{{tea-1002-spec-1}}]调用,并得到了结果[ShopCartVo(specId=tea-1002-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/tea-1002/img1.png, itemName=【天天吃货】精品龙井茶 居家必备 喝茶最佳, specName=散装, priceNormal=20800, priceDiscount=18720)]，共耗时8毫秒------
2020-12-16 13:30:39 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:30:39 CST 2020时使用参数[Ljava.lang.Object;@5116d542[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时12毫秒------
2020-12-16 13:30:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:30:42 CST 2020时使用参数[Ljava.lang.Object;@783caab2[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@6ed2bc6b，共耗时4毫秒------
2020-12-16 13:30:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:30:42 CST 2020时使用参数[Ljava.lang.Object;@7b20b640[{[tea-1002-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@7776d466]，共耗时17毫秒------
2020-12-16 13:30:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:30:42 CST 2020时使用参数[Ljava.lang.Object;@3e0e6987[{tea-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@40e24ab0，共耗时2毫秒------
2020-12-16 13:30:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:30:42 CST 2020时使用参数[Ljava.lang.Object;@178b2d6[{tea-1002}]调用,并得到了结果top.chris.shop.pojo.Items@4c77b12f，共耗时1毫秒------
2020-12-16 13:30:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:30:42 CST 2020时使用参数[Ljava.lang.Object;@44155d7d[{top.chris.shop.pojo.ItemsSpec@7776d466}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 13:30:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:30:42 CST 2020时使用参数[Ljava.lang.Object;@218a9e58[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=tea-1002-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169M07GA4WDP，共耗时49毫秒------
2020-12-16 13:30:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:32:07 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:32:07 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 22284 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:32:07 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:32:09 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 13:32:09 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 13:32:09 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 13:32:09 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 13:32:09 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4fe361c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 13:32:10 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 13:32:10 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2637 ms
2020-12-16 13:32:12 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 13:32:13 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 13:32:13 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 13:32:13 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 13:32:13 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 13:32:13 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 13:32:13 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 94962edf-0e8a-4bb1-b2a9-7eb37efc0926

2020-12-16 13:32:13 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3686389, org.springframework.security.web.context.SecurityContextPersistenceFilter@351e89fc, org.springframework.security.web.header.HeaderWriterFilter@507049f2, org.springframework.security.web.authentication.logout.LogoutFilter@12365bd8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@749baa0c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21527b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71e2c6d8, org.springframework.security.web.session.SessionManagementFilter@668a32a4, org.springframework.security.web.access.ExceptionTranslationFilter@19bf47fc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1736c1e4]
2020-12-16 13:32:13 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 13:32:13 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 13:32:13 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 13:32:13 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 13:32:13 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 13:32:14 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 13:32:14 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.681 seconds (JVM running for 8.008)
2020-12-16 13:32:32 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 13:32:32 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 13:32:32 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 13:32:32 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 13:32:32 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 13:32:32 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:32:32 CST 2020时使用参数[Ljava.lang.Object;@2da451b1[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@43afe310, top.chris.shop.pojo.Carousel@c9f1f7c, top.chris.shop.pojo.Carousel@4bb2be7, top.chris.shop.pojo.Carousel@b9dcb18]，共耗时231毫秒------
2020-12-16 13:32:32 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:32:32 CST 2020时使用参数[Ljava.lang.Object;@34d8d8e6[{}]调用,并得到了结果[top.chris.shop.pojo.Category@6dd56a9c, top.chris.shop.pojo.Category@3dfa254a, top.chris.shop.pojo.Category@19d28b0e, top.chris.shop.pojo.Category@6bbf7f3a, top.chris.shop.pojo.Category@2d78795b, top.chris.shop.pojo.Category@4144d9cb, top.chris.shop.pojo.Category@4c43b016, top.chris.shop.pojo.Category@5c95500b, top.chris.shop.pojo.Category@32c95863, top.chris.shop.pojo.Category@55a45570]，共耗时230毫秒------
2020-12-16 13:32:33 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:32:32 CST 2020时使用参数[Ljava.lang.Object;@6be7f1a0[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@1a35c9f3，共耗时1230毫秒------
2020-12-16 13:32:34 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:32:34 CST 2020时使用参数[Ljava.lang.Object;@60bba105[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时8毫秒------
2020-12-16 13:32:40 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:32:40 CST 2020时使用参数[Ljava.lang.Object;@32dd164c[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=248, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=303, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=196, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时11毫秒------
2020-12-16 13:32:40 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:32:40 CST 2020时使用参数[Ljava.lang.Object;@30bb924c[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时4毫秒------
2020-12-16 13:32:40 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:32:40 CST 2020时使用参数[Ljava.lang.Object;@1bd60945[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@65c501ca，共耗时11毫秒------
2020-12-16 13:32:42 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:32:42 CST 2020时使用参数[Ljava.lang.Object;@5fc4ef60[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时6毫秒------
2020-12-16 13:32:45 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:32:45 CST 2020时使用参数[Ljava.lang.Object;@3ccf5c35[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时8毫秒------
2020-12-16 13:32:48 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:32:48 CST 2020时使用参数[Ljava.lang.Object;@6adfb447[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@271c3d48，共耗时3毫秒------
2020-12-16 13:32:48 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:32:48 CST 2020时使用参数[Ljava.lang.Object;@461a7a4f[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@3702df9c]，共耗时16毫秒------
2020-12-16 13:32:48 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:32:48 CST 2020时使用参数[Ljava.lang.Object;@4b3485c3[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@6a6b4d06，共耗时2毫秒------
2020-12-16 13:32:48 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:32:48 CST 2020时使用参数[Ljava.lang.Object;@7fa3757d[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@779c2846，共耗时3毫秒------
2020-12-16 13:32:48 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:32:48 CST 2020时使用参数[Ljava.lang.Object;@5a6c6e9e[{top.chris.shop.pojo.ItemsSpec@3702df9c}]调用,并得到了结果1，共耗时17毫秒------
2020-12-16 13:32:48 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:32:48 CST 2020时使用参数[Ljava.lang.Object;@5671ccb8[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169MNY6107F8，共耗时74毫秒------
2020-12-16 13:32:48 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:34:04 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:34:04 CST 2020时使用参数[Ljava.lang.Object;@31827fd4[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@756b1115，共耗时8毫秒------
2020-12-16 13:34:04 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:34:04 CST 2020时使用参数[Ljava.lang.Object;@35f3c011[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@6a455f27, top.chris.shop.pojo.Carousel@6f92111e, top.chris.shop.pojo.Carousel@52f24a9, top.chris.shop.pojo.Carousel@2ef78f55]，共耗时2毫秒------
2020-12-16 13:34:04 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:34:04 CST 2020时使用参数[Ljava.lang.Object;@2d7cb1e[{}]调用,并得到了结果[top.chris.shop.pojo.Category@62a71393, top.chris.shop.pojo.Category@38a7b98, top.chris.shop.pojo.Category@26aeecb5, top.chris.shop.pojo.Category@1a9d5c45, top.chris.shop.pojo.Category@407cff0e, top.chris.shop.pojo.Category@107a1a22, top.chris.shop.pojo.Category@41e097dc, top.chris.shop.pojo.Category@31ef94d1, top.chris.shop.pojo.Category@16cc996d, top.chris.shop.pojo.Category@56a72a9c]，共耗时5毫秒------
2020-12-16 13:34:05 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:34:05 CST 2020时使用参数[Ljava.lang.Object;@40459bf5[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时8毫秒------
2020-12-16 13:34:06 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:34:06 CST 2020时使用参数[Ljava.lang.Object;@463a2d29[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时3毫秒------
2020-12-16 13:34:06 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:34:06 CST 2020时使用参数[Ljava.lang.Object;@56d58707[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=247, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=303, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=196, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时7毫秒------
2020-12-16 13:34:06 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:34:06 CST 2020时使用参数[Ljava.lang.Object;@db8ac7c[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@68e38cc1，共耗时2毫秒------
2020-12-16 13:34:09 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:34:09 CST 2020时使用参数[Ljava.lang.Object;@9f4a47[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时4毫秒------
2020-12-16 13:34:12 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:34:12 CST 2020时使用参数[Ljava.lang.Object;@4a81ea4[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时2毫秒------
2020-12-16 13:34:14 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:34:14 CST 2020时使用参数[Ljava.lang.Object;@6ebc60d9[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@60de4448，共耗时2毫秒------
2020-12-16 13:34:14 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:34:14 CST 2020时使用参数[Ljava.lang.Object;@d085da2[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@3f4e72]，共耗时2毫秒------
2020-12-16 13:34:14 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:34:14 CST 2020时使用参数[Ljava.lang.Object;@75d0687c[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@3a7ade29，共耗时2毫秒------
2020-12-16 13:34:14 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:34:14 CST 2020时使用参数[Ljava.lang.Object;@5fb34d94[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@29565d96，共耗时2毫秒------
2020-12-16 13:34:14 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:34:14 CST 2020时使用参数[Ljava.lang.Object;@229bfafd[{top.chris.shop.pojo.ItemsSpec@3f4e72}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 13:34:14 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:34:14 CST 2020时使用参数[Ljava.lang.Object;@1f272261[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169N581BKT7C，共耗时18毫秒------
2020-12-16 13:34:14 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:37:52 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:37:52 CST 2020时使用参数[Ljava.lang.Object;@68ca8317[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@2d85b29a，共耗时7毫秒------
2020-12-16 13:37:53 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:37:53 CST 2020时使用参数[Ljava.lang.Object;@6cd7210[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@3bf079ca, top.chris.shop.pojo.Carousel@3bf09ddc, top.chris.shop.pojo.Carousel@7ee526d2, top.chris.shop.pojo.Carousel@135596ec]，共耗时2毫秒------
2020-12-16 13:37:53 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:37:53 CST 2020时使用参数[Ljava.lang.Object;@1cc742e2[{}]调用,并得到了结果[top.chris.shop.pojo.Category@2002b157, top.chris.shop.pojo.Category@2be38b44, top.chris.shop.pojo.Category@40b57dba, top.chris.shop.pojo.Category@6643f71c, top.chris.shop.pojo.Category@53fe7a8a, top.chris.shop.pojo.Category@6470621a, top.chris.shop.pojo.Category@fc39b83, top.chris.shop.pojo.Category@76416670, top.chris.shop.pojo.Category@56cb7818, top.chris.shop.pojo.Category@314ca069]，共耗时3毫秒------
2020-12-16 13:37:53 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:37:53 CST 2020时使用参数[Ljava.lang.Object;@72a6feb0[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时10毫秒------
2020-12-16 13:39:11 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:39:11 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 8632 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:39:11 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:39:12 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 13:39:12 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 13:39:12 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 13:39:13 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 13:39:13 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe2f1b27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 13:39:14 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 13:39:14 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2917 ms
2020-12-16 13:39:17 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 13:39:17 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 13:39:17 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 13:39:17 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 13:39:17 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 13:39:17 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 13:39:18 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 58152034-c121-466d-99be-53e3a87f0caa

2020-12-16 13:39:18 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ff498b0, org.springframework.security.web.context.SecurityContextPersistenceFilter@819fb19, org.springframework.security.web.header.HeaderWriterFilter@8b670c0, org.springframework.security.web.authentication.logout.LogoutFilter@63f2e0b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49cb5030, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f883d90, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b5312df, org.springframework.security.web.session.SessionManagementFilter@4586a8aa, org.springframework.security.web.access.ExceptionTranslationFilter@2e2b9f53, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75839695]
2020-12-16 13:39:18 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 13:39:18 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 13:39:18 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 13:39:18 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 13:39:18 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 13:39:18 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 13:39:18 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.028 seconds (JVM running for 9.734)
2020-12-16 13:39:21 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 13:39:21 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 13:39:21 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 13:39:21 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 13:39:21 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 13:39:21 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:39:21 CST 2020时使用参数[Ljava.lang.Object;@6461c7c4[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@254265df，共耗时220毫秒------
2020-12-16 13:39:21 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:39:21 CST 2020时使用参数[Ljava.lang.Object;@19176ff[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=246, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=303, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=196, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时229毫秒------
2020-12-16 13:39:21 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:39:21 CST 2020时使用参数[Ljava.lang.Object;@3c1fbfad[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时222毫秒------
2020-12-16 13:39:24 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:39:23 CST 2020时使用参数[Ljava.lang.Object;@4bb667ee[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时8毫秒------
2020-12-16 13:39:26 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:39:26 CST 2020时使用参数[Ljava.lang.Object;@5fc4ef60[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时11毫秒------
2020-12-16 13:39:28 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:39:28 CST 2020时使用参数[Ljava.lang.Object;@9a40617[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@75aad7bd，共耗时2毫秒------
2020-12-16 13:39:28 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:39:28 CST 2020时使用参数[Ljava.lang.Object;@663a7cac[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@4c38f41e]，共耗时17毫秒------
2020-12-16 13:39:28 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:39:28 CST 2020时使用参数[Ljava.lang.Object;@398df6cb[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@c67324a，共耗时2毫秒------
2020-12-16 13:39:28 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:39:28 CST 2020时使用参数[Ljava.lang.Object;@1e7667a[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@578af323，共耗时2毫秒------
2020-12-16 13:39:28 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:39:28 CST 2020时使用参数[Ljava.lang.Object;@1e1d439b[{top.chris.shop.pojo.ItemsSpec@4c38f41e}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 13:39:28 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:39:28 CST 2020时使用参数[Ljava.lang.Object;@7181cc17[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169PY2S0PSFW，共耗时47毫秒------
2020-12-16 13:39:28 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:39:58 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:39:58 CST 2020时使用参数[Ljava.lang.Object;@63be7e71[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@3f5f86e9，共耗时6毫秒------
2020-12-16 13:39:58 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:39:58 CST 2020时使用参数[Ljava.lang.Object;@48c9753d[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@7f70805c, top.chris.shop.pojo.Carousel@7a9cec2e, top.chris.shop.pojo.Carousel@19857792, top.chris.shop.pojo.Carousel@1ae68902]，共耗时8毫秒------
2020-12-16 13:39:58 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:39:58 CST 2020时使用参数[Ljava.lang.Object;@73eacee8[{}]调用,并得到了结果[top.chris.shop.pojo.Category@193bce8f, top.chris.shop.pojo.Category@2b118dc0, top.chris.shop.pojo.Category@558cd8fb, top.chris.shop.pojo.Category@70b4d12c, top.chris.shop.pojo.Category@373c2603, top.chris.shop.pojo.Category@10e4c2a9, top.chris.shop.pojo.Category@231c8b4e, top.chris.shop.pojo.Category@75f713b0, top.chris.shop.pojo.Category@23ad2f33, top.chris.shop.pojo.Category@156a5065]，共耗时7毫秒------
2020-12-16 13:39:58 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:39:58 CST 2020时使用参数[Ljava.lang.Object;@43234684[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-16 13:40:03 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:40:03 CST 2020时使用参数[Ljava.lang.Object;@6ebc60d9[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时2毫秒------
2020-12-16 13:40:03 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:40:03 CST 2020时使用参数[Ljava.lang.Object;@7a236f16[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@7c5afcfe，共耗时3毫秒------
2020-12-16 13:40:03 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:40:03 CST 2020时使用参数[Ljava.lang.Object;@e2a102c[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=245, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=303, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=196, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时14毫秒------
2020-12-16 13:40:07 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:40:07 CST 2020时使用参数[Ljava.lang.Object;@db8ac7c[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时3毫秒------
2020-12-16 13:40:10 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:40:10 CST 2020时使用参数[Ljava.lang.Object;@621db3d8[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时4毫秒------
2020-12-16 13:40:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:40:12 CST 2020时使用参数[Ljava.lang.Object;@3a1d2f6c[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@582a83cc，共耗时3毫秒------
2020-12-16 13:40:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:40:12 CST 2020时使用参数[Ljava.lang.Object;@3629c30d[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@651cfceb]，共耗时2毫秒------
2020-12-16 13:40:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:40:12 CST 2020时使用参数[Ljava.lang.Object;@456458ae[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@3dadcaa4，共耗时3毫秒------
2020-12-16 13:40:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:40:12 CST 2020时使用参数[Ljava.lang.Object;@770385dc[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@10c512ba，共耗时1毫秒------
2020-12-16 13:40:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:40:12 CST 2020时使用参数[Ljava.lang.Object;@b9de904[{top.chris.shop.pojo.ItemsSpec@651cfceb}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 13:40:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:40:12 CST 2020时使用参数[Ljava.lang.Object;@61d51b5d[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169R4WG9PPX4，共耗时18毫秒------
2020-12-16 13:40:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:41:18 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:41:19 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 5112 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:41:19 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:41:21 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 13:41:21 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 13:41:21 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 33ms. Found 0 repository interfaces.
2020-12-16 13:41:21 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 13:41:21 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dfe19409] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 13:41:22 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 13:41:22 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3452 ms
2020-12-16 13:41:25 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 13:41:25 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 13:41:26 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 13:41:26 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 13:41:26 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 13:41:26 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 13:41:26 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: d741490c-c35d-4cb1-9ba7-8dfebdc9d93f

2020-12-16 13:41:26 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64dfb31d, org.springframework.security.web.context.SecurityContextPersistenceFilter@600bbf9e, org.springframework.security.web.header.HeaderWriterFilter@384472bf, org.springframework.security.web.authentication.logout.LogoutFilter@53f7a906, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@507049f2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a4c98d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4438b862, org.springframework.security.web.session.SessionManagementFilter@5dc7841c, org.springframework.security.web.access.ExceptionTranslationFilter@2262f0d8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@14b95942]
2020-12-16 13:41:26 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 13:41:26 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 13:41:26 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 13:41:26 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 13:41:26 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 13:41:27 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 13:41:27 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.471 seconds (JVM running for 10.207)
2020-12-16 13:41:37 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 13:41:37 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 13:41:37 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 13:41:37 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 13:41:38 下午 [Thread: http-nio-8080-exec-2][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 13:41:38 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:41:37 CST 2020时使用参数[Ljava.lang.Object;@69ae58b7[{SearchItemsBo(keywords=null, catId=54, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@24487f48，共耗时222毫秒------
2020-12-16 13:41:38 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:41:37 CST 2020时使用参数[Ljava.lang.Object;@a65a671[{}]调用,并得到了结果[top.chris.shop.pojo.Category@6fa23e3c, top.chris.shop.pojo.Category@fa4edb7, top.chris.shop.pojo.Category@75e13d92, top.chris.shop.pojo.Category@52104b71, top.chris.shop.pojo.Category@2c3ddcd1, top.chris.shop.pojo.Category@4dc55b4, top.chris.shop.pojo.Category@78ade510, top.chris.shop.pojo.Category@28b672b7, top.chris.shop.pojo.Category@6a2fe824, top.chris.shop.pojo.Category@c387120]，共耗时222毫秒------
2020-12-16 13:41:38 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:41:37 CST 2020时使用参数[Ljava.lang.Object;@308c673d[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@154c01b6, top.chris.shop.pojo.Carousel@21fc6783, top.chris.shop.pojo.Carousel@5f298011, top.chris.shop.pojo.Carousel@c4fa146]，共耗时222毫秒------
2020-12-16 13:41:38 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:41:38 CST 2020时使用参数[Ljava.lang.Object;@1a23bb97[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时8毫秒------
2020-12-16 13:41:44 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:41:44 CST 2020时使用参数[Ljava.lang.Object;@58e21358[{cookies-54}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=甜甜美食饼干 儿童最爱, sellCounts=1288, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cookies-54/img1.png"><img src="http://122.152.205.72:88/foodie/cookies-54/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cookies-54/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cookies-54/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-1, name=巧克力, priceDiscount=19350, priceNormal=21500, stock=244, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-2, name=原味, priceDiscount=17200, priceNormal=21500, stock=303, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cookies-54-spec-3, name=草莓味, priceDiscount=21500, priceNormal=21500, stock=196, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时12毫秒------
2020-12-16 13:41:44 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:41:44 CST 2020时使用参数[Ljava.lang.Object;@348e71ef[{cookies-54}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时10毫秒------
2020-12-16 13:41:44 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:41:44 CST 2020时使用参数[Ljava.lang.Object;@17062ae8[{CommentBo(itemId=cookies-54, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@35ea7e57，共耗时8毫秒------
2020-12-16 13:41:47 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:41:47 CST 2020时使用参数[Ljava.lang.Object;@31f8c890[{{cookies-54-spec-1}}]调用,并得到了结果[ShopCartVo(specId=cookies-54-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png, itemName=甜甜美食饼干 儿童最爱, specName=巧克力, priceNormal=21500, priceDiscount=19350)]，共耗时7毫秒------
2020-12-16 13:41:50 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:41:50 CST 2020时使用参数[Ljava.lang.Object;@5f445de9[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时9毫秒------
2020-12-16 13:41:52 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:41:52 CST 2020时使用参数[Ljava.lang.Object;@1ef89b87[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@2a5a84d5，共耗时2毫秒------
2020-12-16 13:41:52 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:41:52 CST 2020时使用参数[Ljava.lang.Object;@581abc5c[{[cookies-54-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@4d0e79a3]，共耗时17毫秒------
2020-12-16 13:41:52 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:41:52 CST 2020时使用参数[Ljava.lang.Object;@4a6f5c6e[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@479ae123，共耗时3毫秒------
2020-12-16 13:41:52 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:41:52 CST 2020时使用参数[Ljava.lang.Object;@2b94d502[{cookies-54}]调用,并得到了结果top.chris.shop.pojo.Items@6df8d588，共耗时3毫秒------
2020-12-16 13:41:52 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:41:52 CST 2020时使用参数[Ljava.lang.Object;@7d3cf012[{top.chris.shop.pojo.ItemsSpec@4d0e79a3}]调用,并得到了结果1，共耗时3毫秒------
2020-12-16 13:41:52 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:41:52 CST 2020时使用参数[Ljava.lang.Object;@c747b84[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=cookies-54-spec-1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169RPBZ5PS5P，共耗时95毫秒------
2020-12-16 13:41:52 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:46:33 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 13:46:33 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 4844 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 13:46:33 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 13:46:35 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 13:46:35 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 13:46:35 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2020-12-16 13:46:35 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 13:46:35 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb4b7b27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 13:46:36 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 13:46:36 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2471 ms
2020-12-16 13:46:38 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 13:46:39 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 13:46:39 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 13:46:39 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 13:46:39 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 13:46:39 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 13:46:39 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 2762fb3f-8ecc-4aed-8040-d096a55341fb

2020-12-16 13:46:39 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32dcfeea, org.springframework.security.web.context.SecurityContextPersistenceFilter@507049f2, org.springframework.security.web.header.HeaderWriterFilter@7493d937, org.springframework.security.web.authentication.logout.LogoutFilter@7b7068d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a4c98d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38bc5ac0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@738a815c, org.springframework.security.web.session.SessionManagementFilter@2347b7af, org.springframework.security.web.access.ExceptionTranslationFilter@451816fd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4536a715]
2020-12-16 13:46:39 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 13:46:39 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 13:46:39 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 13:46:39 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 13:46:40 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 13:46:40 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 13:46:40 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.989 seconds (JVM running for 8.449)
2020-12-16 13:46:47 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 13:46:47 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 13:48:40 下午 [Thread: http-nio-8080-exec-8][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 13:48:40 下午 [Thread: http-nio-8080-exec-8][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 13:48:40 下午 [Thread: http-nio-8080-exec-8][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 13:48:40 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:48:40 CST 2020时使用参数[Ljava.lang.Object;@7b8ce983[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@3c32324e, top.chris.shop.pojo.Carousel@213e8232, top.chris.shop.pojo.Carousel@1b51f5ac, top.chris.shop.pojo.Carousel@78dc7b4]，共耗时252毫秒------
2020-12-16 13:48:40 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:48:40 CST 2020时使用参数[Ljava.lang.Object;@16eb70f2[{}]调用,并得到了结果[top.chris.shop.pojo.Category@5174f742, top.chris.shop.pojo.Category@15edd0f4, top.chris.shop.pojo.Category@768ce0b4, top.chris.shop.pojo.Category@3b2d6277, top.chris.shop.pojo.Category@4d955cb7, top.chris.shop.pojo.Category@36045f81, top.chris.shop.pojo.Category@279c90b5, top.chris.shop.pojo.Category@777270eb, top.chris.shop.pojo.Category@1065fa56, top.chris.shop.pojo.Category@489478c]，共耗时252毫秒------
2020-12-16 13:48:40 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:48:40 CST 2020时使用参数[Ljava.lang.Object;@6bc89c1b[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时11毫秒------
2020-12-16 13:48:43 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 13:48:43 CST 2020时使用参数[Ljava.lang.Object;@125794e3[{1}]调用,并得到了结果[CategoryVo(id=11, name=蛋糕, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@2d2227bb, top.chris.shop.pojo.Category@64da8990, top.chris.shop.pojo.Category@3de90832, top.chris.shop.pojo.Category@133773e0, top.chris.shop.pojo.Category@2f9491c2, top.chris.shop.pojo.Category@1f321ba9, top.chris.shop.pojo.Category@6aef38e5]), CategoryVo(id=12, name=点心, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@42effe2b, top.chris.shop.pojo.Category@49fe6d35, top.chris.shop.pojo.Category@461ed8f0, top.chris.shop.pojo.Category@55a5e8c6, top.chris.shop.pojo.Category@68864aff, top.chris.shop.pojo.Category@52ab051f, top.chris.shop.pojo.Category@62c28ee2])]，共耗时10毫秒------
2020-12-16 13:48:43 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 13:48:43 CST 2020时使用参数[Ljava.lang.Object;@47f3e379[{2}]调用,并得到了结果[CategoryVo(id=13, name=饼干, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@1908abfb, top.chris.shop.pojo.Category@1660ca5b, top.chris.shop.pojo.Category@6b77c5e, top.chris.shop.pojo.Category@5e87afda, top.chris.shop.pojo.Category@20c8082, top.chris.shop.pojo.Category@122eb08a, top.chris.shop.pojo.Category@2f467b1d, top.chris.shop.pojo.Category@4cdce850, top.chris.shop.pojo.Category@2a3269d9]), CategoryVo(id=14, name=薯片, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@4d7f26f5, top.chris.shop.pojo.Category@517d32d4, top.chris.shop.pojo.Category@7ac8cec3, top.chris.shop.pojo.Category@430d1ce2, top.chris.shop.pojo.Category@7771c2f8]), CategoryVo(id=15, name=虾条, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@4f22a550, top.chris.shop.pojo.Category@73a0c4a1, top.chris.shop.pojo.Category@58e12c3b, top.chris.shop.pojo.Category@21fe53dd, top.chris.shop.pojo.Category@7bac6a97])]，共耗时5毫秒------
2020-12-16 13:48:45 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:48:45 CST 2020时使用参数[Ljava.lang.Object;@42e3c80c[{SearchItemsBo(keywords=null, catId=37, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@70e2deed，共耗时18毫秒------
2020-12-16 13:48:48 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:48:48 CST 2020时使用参数[Ljava.lang.Object;@4e2f7290[{cake-1001}]调用,并得到了结果CountsVo(totalCounts=23, goodCounts=14, normalCounts=7, badCounts=2)，共耗时3毫秒------
2020-12-16 13:48:48 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:48:48 CST 2020时使用参数[Ljava.lang.Object;@4150b6c7[{cake-1001}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, sellCounts=1003, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-1001/img1.png"><img src="http://122.152.205.72:88/foodie/cake-1001/img2.png"><img src="http://122.152.205.72:88/foodie/cake-1001/img3.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-1001/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1001/img2.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1001/img3.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=1, name=原味, priceDiscount=18000, priceNormal=20000, stock=2274, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=2, name=草莓味, priceDiscount=20000, priceNormal=20000, stock=1007, discounts=1.00), RenderItemInfoVo.SimpleItemsSpec(id=3, name=香草味, priceDiscount=17600, priceNormal=20000, stock=978, discounts=0.88)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时10毫秒------
2020-12-16 13:48:48 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:48:48 CST 2020时使用参数[Ljava.lang.Object;@4b68491f[{CommentBo(itemId=cake-1001, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@2627524f，共耗时13毫秒------
2020-12-16 13:48:51 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:48:51 CST 2020时使用参数[Ljava.lang.Object;@34005683[{{1}}]调用,并得到了结果[ShopCartVo(specId=1, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=原味, priceNormal=20000, priceDiscount=18000)]，共耗时7毫秒------
2020-12-16 13:48:55 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:48:55 CST 2020时使用参数[Ljava.lang.Object;@5a694fdd[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时11毫秒------
2020-12-16 13:49:12 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:49:12 CST 2020时使用参数[Ljava.lang.Object;@297b0339[{20121572283947270144}]调用,并得到了结果[AddressVo(id=2012156TH9HYKBTC, receiver=idea, mobile=18000000000, province=广东, district=越秀区, detail=南天村, city=广州, isDefault=1), AddressVo(id=2012156TP40RF8M8, receiver=Chris, mobile=13600000000, province=重庆, district=北碚区, detail=晓寇, city=重庆, isDefault=0)]，共耗时7毫秒------
2020-12-16 13:49:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:49:18 CST 2020时使用参数[Ljava.lang.Object;@7ca70b3c[{2012156TH9HYKBTC}]调用,并得到了结果top.chris.shop.pojo.UserAddress@5ad3d21c，共耗时3毫秒------
2020-12-16 13:49:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:49:18 CST 2020时使用参数[Ljava.lang.Object;@2375bad4[{[1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@3364ab3d]，共耗时15毫秒------
2020-12-16 13:49:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:49:18 CST 2020时使用参数[Ljava.lang.Object;@2b5f5297[{cake-1001}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@25f2fe32，共耗时2毫秒------
2020-12-16 13:49:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:49:18 CST 2020时使用参数[Ljava.lang.Object;@102b642[{cake-1001}]调用,并得到了结果top.chris.shop.pojo.Items@3333db3e，共耗时1毫秒------
2020-12-16 13:49:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:49:18 CST 2020时使用参数[Ljava.lang.Object;@6134679c[{top.chris.shop.pojo.ItemsSpec@3364ab3d}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 13:49:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:49:18 CST 2020时使用参数[Ljava.lang.Object;@6528e18[{OrdersCreatBo(userId=20121572283947270144, itemSpecIds=1, addressId=2012156TH9HYKBTC, leftMsg=, payMethod=2)}]调用,并得到了结果2012169W5PZBX0BC，共耗时228毫秒------
2020-12-16 13:49:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:50:06 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 13:50:06 CST 2020时使用参数[Ljava.lang.Object;@4de6970b[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@fe8fa07, top.chris.shop.pojo.Carousel@6f396a91, top.chris.shop.pojo.Carousel@17913597, top.chris.shop.pojo.Carousel@6e36b6a1]，共耗时3毫秒------
2020-12-16 13:50:06 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 13:50:06 CST 2020时使用参数[Ljava.lang.Object;@12d7792a[{}]调用,并得到了结果[top.chris.shop.pojo.Category@2bfeebf4, top.chris.shop.pojo.Category@64fc9679, top.chris.shop.pojo.Category@12b30203, top.chris.shop.pojo.Category@3b042756, top.chris.shop.pojo.Category@67f9ca89, top.chris.shop.pojo.Category@67b6d751, top.chris.shop.pojo.Category@6d1f62be, top.chris.shop.pojo.Category@773bc6dc, top.chris.shop.pojo.Category@5e3fe730, top.chris.shop.pojo.Category@fe2aff9]，共耗时11毫秒------
2020-12-16 13:50:06 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 13:50:06 CST 2020时使用参数[Ljava.lang.Object;@48822602[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时7毫秒------
2020-12-16 13:50:07 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 13:50:07 CST 2020时使用参数[Ljava.lang.Object;@721ec323[{1}]调用,并得到了结果[CategoryVo(id=11, name=蛋糕, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@635fe1c1, top.chris.shop.pojo.Category@52b2ebd2, top.chris.shop.pojo.Category@59f26ceb, top.chris.shop.pojo.Category@5df1ab2d, top.chris.shop.pojo.Category@41bc08bb, top.chris.shop.pojo.Category@4958725, top.chris.shop.pojo.Category@4e4a2668]), CategoryVo(id=12, name=点心, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@1eb2444f, top.chris.shop.pojo.Category@3f6a6ef2, top.chris.shop.pojo.Category@176e6a95, top.chris.shop.pojo.Category@8086776, top.chris.shop.pojo.Category@414da04, top.chris.shop.pojo.Category@6865398a, top.chris.shop.pojo.Category@cbbccd1])]，共耗时3毫秒------
2020-12-16 13:50:09 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 13:50:09 CST 2020时使用参数[Ljava.lang.Object;@57da899d[{SearchItemsBo(keywords=null, catId=37, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@668652d4，共耗时4毫秒------
2020-12-16 13:50:11 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:50:11 CST 2020时使用参数[Ljava.lang.Object;@3338a7fa[{cake-1001}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, sellCounts=1003, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-1001/img1.png"><img src="http://122.152.205.72:88/foodie/cake-1001/img2.png"><img src="http://122.152.205.72:88/foodie/cake-1001/img3.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-1001/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1001/img2.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1001/img3.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=1, name=原味, priceDiscount=18000, priceNormal=20000, stock=2273, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=2, name=草莓味, priceDiscount=20000, priceNormal=20000, stock=1007, discounts=1.00), RenderItemInfoVo.SimpleItemsSpec(id=3, name=香草味, priceDiscount=17600, priceNormal=20000, stock=978, discounts=0.88)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时8毫秒------
2020-12-16 13:50:11 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:50:11 CST 2020时使用参数[Ljava.lang.Object;@29fd2f50[{CommentBo(itemId=cake-1001, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@42325cbf，共耗时10毫秒------
2020-12-16 13:50:11 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:50:11 CST 2020时使用参数[Ljava.lang.Object;@5c00c967[{cake-1001}]调用,并得到了结果CountsVo(totalCounts=23, goodCounts=14, normalCounts=7, badCounts=2)，共耗时2毫秒------
2020-12-16 13:50:13 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:50:13 CST 2020时使用参数[Ljava.lang.Object;@508900e2[{{1}}]调用,并得到了结果[ShopCartVo(specId=1, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=原味, priceNormal=20000, priceDiscount=18000)]，共耗时4毫秒------
2020-12-16 13:50:20 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:50:20 CST 2020时使用参数[Ljava.lang.Object;@5fd3ddbd[{20121488980857028608}]调用,并得到了结果[]，共耗时3毫秒------
2020-12-16 13:50:43 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.web.controller.AddressController >> Method: top.chris.shop.web.controller.AddressController.add(AddressController.java:30) ]
INFO:top.chris.shop.pojo.bo.AddressBo@72bca0ac[addressId=<null>,userId=20121488980857028608,city=北京,detail=东城区二五四路,district=东城区,mobile=18000000000,province=北京,receiver=二幅,updatedTime=<null>,isDefault=<null>]
2020-12-16 13:50:43 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.service.impl.AddressServiceImpl >> Method: top.chris.shop.service.impl.AddressServiceImpl.addUserAddress(AddressServiceImpl.java:46) ]
INFO:top.chris.shop.pojo.UserAddress@1ff95a19[
  id=2012169WN0HRW094
  userId=20121488980857028608
  receiver=二幅
  mobile=18000000000
  province=北京
  city=北京
  district=东城区
  detail=东城区二五四路
  extand=<null>
  isDefault=0
  createdTime=Wed Dec 16 13:50:43 CST 2020
  updatedTime=Wed Dec 16 13:50:43 CST 2020
]
2020-12-16 13:50:43 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.addUserAddress在Wed Dec 16 13:50:43 CST 2020时使用参数[Ljava.lang.Object;@76b8e82d[{AddressBo(addressId=null, userId=20121488980857028608, city=北京, detail=东城区二五四路, district=东城区, mobile=18000000000, province=北京, receiver=二幅, updatedTime=Wed Dec 16 13:50:43 CST 2020, isDefault=0)}]调用,并得到了结果null，共耗时9毫秒------
2020-12-16 13:50:43 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:50:43 CST 2020时使用参数[Ljava.lang.Object;@185371db[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=0)]，共耗时4毫秒------
2020-12-16 13:50:52 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.updateDefalutUserAddress在Wed Dec 16 13:50:52 CST 2020时使用参数[Ljava.lang.Object;@744f3213[{20121488980857028608,2012169WN0HRW094}]调用,并得到了结果1，共耗时5毫秒------
2020-12-16 13:50:52 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:50:52 CST 2020时使用参数[Ljava.lang.Object;@1c2d74b1[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时2毫秒------
2020-12-16 13:50:56 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:50:56 CST 2020时使用参数[Ljava.lang.Object;@2ee1ca8f[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@4180549c，共耗时1毫秒------
2020-12-16 13:50:56 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:50:56 CST 2020时使用参数[Ljava.lang.Object;@51f98a18[{[1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@716c871a]，共耗时4毫秒------
2020-12-16 13:50:56 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:50:56 CST 2020时使用参数[Ljava.lang.Object;@1b2c7524[{cake-1001}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@6189513，共耗时3毫秒------
2020-12-16 13:50:56 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:50:56 CST 2020时使用参数[Ljava.lang.Object;@79f03608[{cake-1001}]调用,并得到了结果top.chris.shop.pojo.Items@10de947，共耗时1毫秒------
2020-12-16 13:50:56 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:50:56 CST 2020时使用参数[Ljava.lang.Object;@64756a13[{top.chris.shop.pojo.ItemsSpec@716c871a}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 13:50:56 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:50:56 CST 2020时使用参数[Ljava.lang.Object;@45fdf2d0[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果2012169WR0H1W6W0，共耗时17毫秒------
2020-12-16 13:50:56 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 13:52:28 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 13:52:28 CST 2020时使用参数[Ljava.lang.Object;@e764fd8[{cake-1002}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, sellCounts=363, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-1002/img1.png"><img src="http://122.152.205.72:88/foodie/cake-1002/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-1002/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1002/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=4, name=巧克力, priceDiscount=36000, priceNormal=40000, stock=242, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=5, name=草莓水果, priceDiscount=32000, priceNormal=40000, stock=302, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=6, name=芒果口味, priceDiscount=40000, priceNormal=40000, stock=194, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时9毫秒------
2020-12-16 13:52:28 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 13:52:28 CST 2020时使用参数[Ljava.lang.Object;@707e9819[{CommentBo(itemId=cake-1002, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@4e503f68，共耗时7毫秒------
2020-12-16 13:52:28 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 13:52:28 CST 2020时使用参数[Ljava.lang.Object;@79da276b[{cake-1002}]调用,并得到了结果CountsVo(totalCounts=1, goodCounts=1, normalCounts=0, badCounts=0)，共耗时44毫秒------
2020-12-16 13:52:32 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 13:52:32 CST 2020时使用参数[Ljava.lang.Object;@e21bccd[{{4,5,6}}]调用,并得到了结果[ShopCartVo(specId=4, itemImgUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png, itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, specName=巧克力, priceNormal=40000, priceDiscount=36000), ShopCartVo(specId=5, itemImgUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png, itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, specName=草莓水果, priceNormal=40000, priceDiscount=32000), ShopCartVo(specId=6, itemImgUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png, itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, specName=芒果口味, priceNormal=40000, priceDiscount=40000)]，共耗时50毫秒------
2020-12-16 13:52:40 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 13:52:40 CST 2020时使用参数[Ljava.lang.Object;@217cdb1f[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时2毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@2dbe4e04[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@21fe91fa，共耗时1毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@66f46950[{[4, 5, 6]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@39e5d5e4, top.chris.shop.pojo.ItemsSpec@6cc1e263, top.chris.shop.pojo.ItemsSpec@69755d4f]，共耗时3毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@3bd3bd58[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@586282bb，共耗时2毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@4752d7a5[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.Items@614d9b6a，共耗时1毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@1602ccb7[{top.chris.shop.pojo.ItemsSpec@39e5d5e4}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@22f886d7[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@7528a67d，共耗时2毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@5eb7f1da[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.Items@6e1cbf3f，共耗时1毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@c0df8ae[{top.chris.shop.pojo.ItemsSpec@6cc1e263}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@702c5365[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@32d4f29a，共耗时2毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@4cdb647d[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.Items@5efea1f8，共耗时1毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@5b6a7b1d[{top.chris.shop.pojo.ItemsSpec@69755d4f}]调用,并得到了结果1，共耗时0毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 13:52:48 CST 2020时使用参数[Ljava.lang.Object;@2ae98e5c[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=4,5,6, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果2012169XAASGY6A8，共耗时38毫秒------
2020-12-16 13:52:48 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 14:24:53 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 14:24:54 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 13452 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 14:24:54 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 14:24:55 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 14:24:55 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 14:24:55 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 14:24:55 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 14:24:56 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4fe361c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 14:24:56 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 14:24:56 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2545 ms
2020-12-16 14:24:59 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 14:24:59 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 14:25:00 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 14:25:00 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 14:25:00 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 14:25:00 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 14:25:00 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 28150c6e-20c0-4498-acbc-4fbb94eb6f64

2020-12-16 14:25:00 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e77678c, org.springframework.security.web.context.SecurityContextPersistenceFilter@12e5d3e1, org.springframework.security.web.header.HeaderWriterFilter@72b40f87, org.springframework.security.web.authentication.logout.LogoutFilter@819fb19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15586843, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53f7a906, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@113eed88, org.springframework.security.web.session.SessionManagementFilter@349f0ca4, org.springframework.security.web.access.ExceptionTranslationFilter@5dc7841c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4438b862]
2020-12-16 14:25:00 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 14:25:00 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 14:25:00 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 14:25:00 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 14:25:00 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 14:25:01 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 14:25:01 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.517 seconds (JVM running for 9.004)
2020-12-16 14:25:36 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 14:25:36 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 14:25:36 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 14:25:36 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 14:25:36 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 14:25:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 14:25:36 CST 2020时使用参数[Ljava.lang.Object;@69fcd86f[{CommentBo(itemId=cake-1001, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@419d5c42，共耗时235毫秒------
2020-12-16 14:25:36 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 14:25:36 CST 2020时使用参数[Ljava.lang.Object;@1097a55[{cake-1001}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, sellCounts=1003, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-1001/img1.png"><img src="http://122.152.205.72:88/foodie/cake-1001/img2.png"><img src="http://122.152.205.72:88/foodie/cake-1001/img3.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-1001/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1001/img2.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1001/img3.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=1, name=原味, priceDiscount=18000, priceNormal=20000, stock=2272, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=2, name=草莓味, priceDiscount=20000, priceNormal=20000, stock=1007, discounts=1.00), RenderItemInfoVo.SimpleItemsSpec(id=3, name=香草味, priceDiscount=17600, priceNormal=20000, stock=978, discounts=0.88)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时235毫秒------
2020-12-16 14:25:36 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 14:25:36 CST 2020时使用参数[Ljava.lang.Object;@52abd54c[{cake-1001}]调用,并得到了结果CountsVo(totalCounts=23, goodCounts=14, normalCounts=7, badCounts=2)，共耗时229毫秒------
2020-12-16 14:25:39 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 14:25:38 CST 2020时使用参数[Ljava.lang.Object;@35cc422[{{1}}]调用,并得到了结果[ShopCartVo(specId=1, itemImgUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png, itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, specName=原味, priceNormal=20000, priceDiscount=18000)]，共耗时10毫秒------
2020-12-16 14:25:49 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 14:25:49 CST 2020时使用参数[Ljava.lang.Object;@3380270b[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时11毫秒------
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@25eb47a[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@4ba45f64，共耗时3毫秒------
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@396c6db[{[1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@6e5ef62c]，共耗时17毫秒------
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@291af6e8[{cake-1001}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@1c8f5d0e，共耗时3毫秒------
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@5bc36251[{cake-1001}]调用,并得到了结果top.chris.shop.pojo.Items@25107277，共耗时1毫秒------
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@47b1b9a2[{top.chris.shop.pojo.ItemsSpec@6e5ef62c}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@78baba53[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216A8BH3CA23C，共耗时48毫秒------
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@6f1155fa[{201216A8BH3CA23C}]调用,并得到了结果top.chris.shop.pojo.Orders@1f4d411a，共耗时4毫秒------
2020-12-16 14:25:57 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@4538b679[{201216A8BH3CA23C}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@77b309c0]，共耗时4毫秒------
2020-12-16 14:25:58 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 14:25:57 CST 2020时使用参数[Ljava.lang.Object;@7956df4c[{20121488980857028608,201216A8BH3CA23C}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=QXSHSKlgxDPjOnY6KzSnclOcTN3CthcEyFACPLbT83Jwq%2BPvXYyjpMKR0yqGxM7BSEsj11xv6bwhKvFprS5%2BXfXhq1SNpUoeaYc7w3TKBeF6R8lpVSfBZczVthTzCnU4lSWU6GPls%2B5IiUsVu97KLvzVZGwX417ILRfJzyN59F4DcCK0msyR1QZOujQwEyGNRI0fXyJQCHVT5MtH83bBMcuS%2BmuXh54b%2FrsheApE%2FGaj5bvh1eNJsjHscFfOfJnjMaq8HS4ITfADAZA4PPRcrVKvuTlkjUgZPZvlLuX4LydAFNwRDkxmYJA7Z1SxrrfRboGA8Uvz%2FWO7V9G%2FckcIHw%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+14%3A25%3A57&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216A8BH3CA23C&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭、&quot;,&quot;total_amount&quot;:&quot;190&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1021毫秒------
2020-12-16 14:27:01 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 14:27:01 CST 2020时使用参数[Ljava.lang.Object;@2ac1d8af[{cake-1002}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, sellCounts=363, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-1002/img1.png"><img src="http://122.152.205.72:88/foodie/cake-1002/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-1002/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1002/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=4, name=巧克力, priceDiscount=36000, priceNormal=40000, stock=241, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=5, name=草莓水果, priceDiscount=32000, priceNormal=40000, stock=301, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=6, name=芒果口味, priceDiscount=40000, priceNormal=40000, stock=193, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时11毫秒------
2020-12-16 14:27:01 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 14:27:01 CST 2020时使用参数[Ljava.lang.Object;@3adef36a[{CommentBo(itemId=cake-1002, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@24d05b33，共耗时3毫秒------
2020-12-16 14:27:01 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 14:27:01 CST 2020时使用参数[Ljava.lang.Object;@39f66061[{cake-1002}]调用,并得到了结果CountsVo(totalCounts=1, goodCounts=1, normalCounts=0, badCounts=0)，共耗时6毫秒------
2020-12-16 14:27:06 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 14:27:06 CST 2020时使用参数[Ljava.lang.Object;@3c6a2d80[{cake-1005}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】进口美食凤梨酥, sellCounts=414, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-1005/img1.png"><img src="http://122.152.205.72:88/foodie/cake-1005/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-1005/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1005/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cake-1005-spec-1, name=巧克力, priceDiscount=16020, priceNormal=17800, stock=253, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cake-1005-spec-2, name=草莓水果, priceDiscount=14240, priceNormal=17800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cake-1005-spec-3, name=芒果口味, priceDiscount=17800, priceNormal=17800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时7毫秒------
2020-12-16 14:27:06 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 14:27:06 CST 2020时使用参数[Ljava.lang.Object;@1e48e0c[{CommentBo(itemId=cake-1005, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@d03345d，共耗时2毫秒------
2020-12-16 14:27:06 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 14:27:06 CST 2020时使用参数[Ljava.lang.Object;@53b0d230[{cake-1005}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时7毫秒------
2020-12-16 14:27:10 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 14:27:10 CST 2020时使用参数[Ljava.lang.Object;@623f065d[{{4,5,6,cake-1005-spec-1,cake-1005-spec-2,cake-1005-spec-3}}]调用,并得到了结果[ShopCartVo(specId=4, itemImgUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png, itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, specName=巧克力, priceNormal=40000, priceDiscount=36000), ShopCartVo(specId=5, itemImgUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png, itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, specName=草莓水果, priceNormal=40000, priceDiscount=32000), ShopCartVo(specId=6, itemImgUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png, itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, specName=芒果口味, priceNormal=40000, priceDiscount=40000), ShopCartVo(specId=cake-1005-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png, itemName=【天天吃货】进口美食凤梨酥, specName=巧克力, priceNormal=17800, priceDiscount=16020), ShopCartVo(specId=cake-1005-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png, itemName=【天天吃货】进口美食凤梨酥, specName=草莓水果, priceNormal=17800, priceDiscount=14240), ShopCartVo(specId=cake-1005-spec-3, itemImgUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png, itemName=【天天吃货】进口美食凤梨酥, specName=芒果口味, priceNormal=17800, priceDiscount=17800)]，共耗时4毫秒------
2020-12-16 14:27:15 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 14:27:15 CST 2020时使用参数[Ljava.lang.Object;@73f60981[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时3毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@44b124f9[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@229041a8，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@74fc4d68[{[4, 5, 6, cake-1005-spec-1, cake-1005-spec-2, cake-1005-spec-3]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@54c1cf5e, top.chris.shop.pojo.ItemsSpec@33f5c68d, top.chris.shop.pojo.ItemsSpec@33500d42, top.chris.shop.pojo.ItemsSpec@25d1814d, top.chris.shop.pojo.ItemsSpec@7f301196, top.chris.shop.pojo.ItemsSpec@626c6153]，共耗时4毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@789772c9[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@75460ec，共耗时4毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@7d7f8a69[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.Items@3ebdbe35，共耗时1毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@2b056bc[{top.chris.shop.pojo.ItemsSpec@54c1cf5e}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@7248438b[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@72cdfec8，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@73a6bd7[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.Items@375e24a0，共耗时9毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@80088e5[{top.chris.shop.pojo.ItemsSpec@33f5c68d}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@36ed877b[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@3aa666e3，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@12827ce3[{cake-1002}]调用,并得到了结果top.chris.shop.pojo.Items@480ef797，共耗时1毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@7782e549[{top.chris.shop.pojo.ItemsSpec@33500d42}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@39e04822[{cake-1005}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@78179376，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@285338f4[{cake-1005}]调用,并得到了结果top.chris.shop.pojo.Items@1349d484，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@2d3e3d3[{top.chris.shop.pojo.ItemsSpec@25d1814d}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@3730414[{cake-1005}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@7cf5dca，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@5a6b7e03[{cake-1005}]调用,并得到了结果top.chris.shop.pojo.Items@41a382fe，共耗时1毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@43f975d2[{top.chris.shop.pojo.ItemsSpec@7f301196}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@412a551[{cake-1005}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@1bd7d5e7，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@7f0a6075[{cake-1005}]调用,并得到了结果top.chris.shop.pojo.Items@5ad7ea9e，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@1329a43d[{top.chris.shop.pojo.ItemsSpec@626c6153}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@6e95a5ec[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=4,5,6,cake-1005-spec-1,cake-1005-spec-2,cake-1005-spec-3, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216A8TZ050F14，共耗时62毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@5bf394c[{201216A8TZ050F14}]调用,并得到了结果top.chris.shop.pojo.Orders@3c6a87ef，共耗时2毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@6f550d4e[{201216A8TZ050F14}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@13dc2cb1, top.chris.shop.pojo.OrderItems@7be194da, top.chris.shop.pojo.OrderItems@7dfb062c, top.chris.shop.pojo.OrderItems@3a035ba0, top.chris.shop.pojo.OrderItems@48c841f5, top.chris.shop.pojo.OrderItems@3f784b72]，共耗时4毫秒------
2020-12-16 14:27:17 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 14:27:17 CST 2020时使用参数[Ljava.lang.Object;@1a97f0d7[{20121488980857028608,201216A8TZ050F14}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=eqslHxxL6RdJqhrgquxYK9I%2B0osMxdkinQq6IIJ44y%2BtzAG0POtAMAgrW7Yj058zyRQ6phILRLZZPb5G2%2FqL6Ri%2FGIY4EnOS4xdwLQuTlyO4%2BrPLkewrCxYXKf9PfbN6u5x8hl0IS0hE30XTWVINfiypMDbAtut3TEOkmdpaZhlqJz7C%2F3j3l2Eb8%2FhPc1HRqlvHoEHJKfVHHQV6ZB%2FdNW6BSVPEDagOV9QYOFQxDEzTY4RBpJS7DZ630NYqonw1Tui%2Fd9owePHLqpRyN7jo5j8JOO%2F7xjKh6rK%2BtUSSIZvbdEU5WgC6L6MT4rsChy6RNi7zxQO%2FsLuTkD3puZaO4Q%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+14%3A27%3A17&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216A8TZ050F14&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】网红烘焙蛋糕 好吃的蛋糕、【天天吃货】网红烘焙蛋糕 好吃的蛋糕、【天天吃货】网红烘焙蛋糕 好吃的蛋糕、【天天吃货】进口美食凤梨酥、【天天吃货】进口美食凤梨酥、【天天吃货】进口美食凤梨酥、&quot;,&quot;total_amount&quot;:&quot;1570&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时32毫秒------
2020-12-16 14:27:40 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 14:27:40 CST 2020时使用参数[Ljava.lang.Object;@51caaa7[{CommentBo(itemId=cake-1006, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@2e28f78b，共耗时2毫秒------
2020-12-16 14:27:40 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 14:27:40 CST 2020时使用参数[Ljava.lang.Object;@2c261762[{cake-1006}]调用,并得到了结果CountsVo(totalCounts=1, goodCounts=0, normalCounts=1, badCounts=0)，共耗时2毫秒------
2020-12-16 14:27:40 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 14:27:40 CST 2020时使用参数[Ljava.lang.Object;@20fd05a4[{cake-1006}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, sellCounts=3314, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-1006/img1.png"><img src="http://122.152.205.72:88/foodie/cake-1006/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-1006/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-1006/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cake-1006-spec-1, name=巧克力, priceDiscount=11700, priceNormal=13000, stock=232, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cake-1006-spec-2, name=草莓水果, priceDiscount=10400, priceNormal=13000, stock=256, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cake-1006-spec-3, name=芒果口味, priceDiscount=13000, priceNormal=13000, stock=196, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时5毫秒------
2020-12-16 14:27:45 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 14:27:45 CST 2020时使用参数[Ljava.lang.Object;@703f1bf8[{{cake-1006-spec-1,cake-1006-spec-2,cake-1006-spec-3}}]调用,并得到了结果[ShopCartVo(specId=cake-1006-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png, itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, specName=巧克力, priceNormal=13000, priceDiscount=11700), ShopCartVo(specId=cake-1006-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png, itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, specName=草莓水果, priceNormal=13000, priceDiscount=10400), ShopCartVo(specId=cake-1006-spec-3, itemImgUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png, itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, specName=芒果口味, priceNormal=13000, priceDiscount=13000)]，共耗时4毫秒------
2020-12-16 14:27:50 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 14:27:50 CST 2020时使用参数[Ljava.lang.Object;@41611ac0[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时2毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@1d90a020[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@c66751e，共耗时2毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@277bde87[{[cake-1006-spec-1, cake-1006-spec-2, cake-1006-spec-3]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@3f72fbe8, top.chris.shop.pojo.ItemsSpec@83b79d, top.chris.shop.pojo.ItemsSpec@72788a1e]，共耗时2毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@238bfa12[{cake-1006}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@3ea99ea1，共耗时2毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@742cd04b[{cake-1006}]调用,并得到了结果top.chris.shop.pojo.Items@80bffb6，共耗时1毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@96112e2[{top.chris.shop.pojo.ItemsSpec@3f72fbe8}]调用,并得到了结果1，共耗时3毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@729bcac4[{cake-1006}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@29862a6c，共耗时2毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@6b32b8be[{cake-1006}]调用,并得到了结果top.chris.shop.pojo.Items@475382f6，共耗时1毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@79da99a[{top.chris.shop.pojo.ItemsSpec@83b79d}]调用,并得到了结果1，共耗时0毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@739ab6d2[{cake-1006}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@2a9d9f96，共耗时1毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@a13e228[{cake-1006}]调用,并得到了结果top.chris.shop.pojo.Items@2c99e99e，共耗时0毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@e6fa922[{top.chris.shop.pojo.ItemsSpec@72788a1e}]调用,并得到了结果1，共耗时0毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@7c110df0[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=cake-1006-spec-1,cake-1006-spec-2,cake-1006-spec-3, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216A91CB4MR1P，共耗时30毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@19652043[{201216A91CB4MR1P}]调用,并得到了结果top.chris.shop.pojo.Orders@baa5967，共耗时1毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@27e8702c[{201216A91CB4MR1P}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@40c56d24, top.chris.shop.pojo.OrderItems@2f71e429, top.chris.shop.pojo.OrderItems@6998a620]，共耗时5毫秒------
2020-12-16 14:27:52 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 14:27:52 CST 2020时使用参数[Ljava.lang.Object;@d95c22f[{20121488980857028608,201216A91CB4MR1P}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=PNazjMrrVLQ0vkB0VhRuW02gze9%2FOQFr%2BzNqrKgOLlwoffFI6S17juUVYVUof0RtnKMr7Ocl9IhKAWUPXBoJfH48zDY0ZSy8%2FYG%2FVhw5jT5ce6GE3rThSMZ2ks1v46PEVcKnLggvBqY2cv2bsaCU8Ny%2Fq2E4TAMUunKwieC9W%2FpxFH5fQB7mNrY93AXWhrpKXUW%2FC3p3f%2FiKhSBXz0%2B%2FxXqrkJwmLDkOHW9sh70b9FyJqeowUWOgn3rlcja8taQncCoQnYGNWUnKqzFyXDv2PpYkkDU%2Fk3iHpVRb%2Bm5ekTk0Lht50kTu%2F8zSYURHP0fqWJp6SDeHcJj5YU5YB5Embg%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+14%3A27%3A52&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216A91CB4MR1P&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】机器猫最爱 铜锣烧 最美下午茶、【天天吃货】机器猫最爱 铜锣烧 最美下午茶、【天天吃货】机器猫最爱 铜锣烧 最美下午茶、&quot;,&quot;total_amount&quot;:&quot;361&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时30毫秒------
2020-12-16 14:33:00 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 14:33:01 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 14308 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 14:33:01 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 14:33:02 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 14:33:02 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 14:33:02 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2020-12-16 14:33:02 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 14:33:02 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e92ee562] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 14:33:03 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 14:33:03 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2527 ms
2020-12-16 14:33:06 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 14:33:06 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 14:33:06 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 14:33:06 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 14:33:06 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 14:33:06 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 14:33:06 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 83763e4c-52aa-4331-8a32-ab52d8cef379

2020-12-16 14:33:06 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44fb6ebd, org.springframework.security.web.context.SecurityContextPersistenceFilter@2475fba3, org.springframework.security.web.header.HeaderWriterFilter@5ed25612, org.springframework.security.web.authentication.logout.LogoutFilter@4c2ab536, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@349f0ca4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@baa227e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5da57a64, org.springframework.security.web.session.SessionManagementFilter@600bbf9e, org.springframework.security.web.access.ExceptionTranslationFilter@7185e611, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@184751f3]
2020-12-16 14:33:06 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 14:33:06 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 14:33:06 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 14:33:07 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 14:33:07 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 14:33:07 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 14:33:07 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.79 seconds (JVM running for 8.208)
2020-12-16 14:34:19 下午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 14:34:19 下午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 14:34:19 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 14:34:19 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 14:34:19 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 14:34:19 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 14:34:19 CST 2020时使用参数[Ljava.lang.Object;@15b36fe7[{CommentBo(itemId=cake-37, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@4501dd6c，共耗时219毫秒------
2020-12-16 14:34:19 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 14:34:19 CST 2020时使用参数[Ljava.lang.Object;@3aa64b83[{cake-37}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, sellCounts=3786, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-37/img1.png"><img src="http://122.152.205.72:88/foodie/cake-37/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-37/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-37/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cake-37-spec-1, name=散装, priceDiscount=5310, priceNormal=5900, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cake-37-spec-2, name=袋装, priceDiscount=4720, priceNormal=5900, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cake-37-spec-3, name=罐装, priceDiscount=5900, priceNormal=5900, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时229毫秒------
2020-12-16 14:34:19 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 14:34:19 CST 2020时使用参数[Ljava.lang.Object;@5e7b2e49[{cake-37}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时220毫秒------
2020-12-16 14:34:26 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 14:34:26 CST 2020时使用参数[Ljava.lang.Object;@a914289[{{cake-37-spec-1,cake-37-spec-2,cake-37-spec-3}}]调用,并得到了结果[ShopCartVo(specId=cake-37-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cake-37/img1.png, itemName=好吃蛋糕甜点蒸蛋糕, specName=散装, priceNormal=5900, priceDiscount=5310), ShopCartVo(specId=cake-37-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/cake-37/img1.png, itemName=好吃蛋糕甜点蒸蛋糕, specName=袋装, priceNormal=5900, priceDiscount=4720), ShopCartVo(specId=cake-37-spec-3, itemImgUrl=http://122.152.205.72:88/foodie/cake-37/img1.png, itemName=好吃蛋糕甜点蒸蛋糕, specName=罐装, priceNormal=5900, priceDiscount=5900)]，共耗时12毫秒------
2020-12-16 14:34:28 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 14:34:28 CST 2020时使用参数[Ljava.lang.Object;@1490054b[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时13毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@7f58b3e2[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@3b504dbb，共耗时3毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@4d952f9e[{[cake-37-spec-1, cake-37-spec-2, cake-37-spec-3]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@365f5b4d, top.chris.shop.pojo.ItemsSpec@19e3abc7, top.chris.shop.pojo.ItemsSpec@2c8feb1c]，共耗时19毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@f2597f[{cake-37}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@53f68576，共耗时3毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@52c57304[{cake-37}]调用,并得到了结果top.chris.shop.pojo.Items@406ef182，共耗时2毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@4654803[{top.chris.shop.pojo.ItemsSpec@365f5b4d}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@1dc1a204[{cake-37}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@334ac4ef，共耗时2毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@7f26e1e7[{cake-37}]调用,并得到了结果top.chris.shop.pojo.Items@4f00d830，共耗时4毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@23ac011b[{top.chris.shop.pojo.ItemsSpec@19e3abc7}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@64c907c4[{cake-37}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@4e11fcac，共耗时2毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@2a9ac168[{cake-37}]调用,并得到了结果top.chris.shop.pojo.Items@4c5c4808，共耗时3毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@2960efc4[{top.chris.shop.pojo.ItemsSpec@2c8feb1c}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@50e0415c[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=cake-37-spec-1,cake-37-spec-2,cake-37-spec-3, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216AB8476CH00，共耗时69毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@54ac7c27[{201216AB8476CH00}]调用,并得到了结果top.chris.shop.pojo.Orders@4967e43，共耗时4毫秒------
2020-12-16 14:34:36 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@59cdc0b1[{201216AB8476CH00}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@6e9ec9ad, top.chris.shop.pojo.OrderItems@6990fe8e, top.chris.shop.pojo.OrderItems@39d7805c]，共耗时3毫秒------
2020-12-16 14:34:37 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 14:34:36 CST 2020时使用参数[Ljava.lang.Object;@2267b105[{20121488980857028608,201216AB8476CH00}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=IkZMvPKMjDuNbg55PJpH8Oby5Zh0fkVfKBMhE9KqZdoMTY%2BoERpmdqeagrho2%2BEexnTt8SJi69QI1TKVMBb0U16qSiQGh3VWl9O%2F20gAckwcQL%2FSe1mJG%2FAZ5fv5K51Mguis1qCHBABQMhm3XWjmrvjKMXMI2j5rsP310oFHb7DUptzP4TOSLIx5yENjLrBl%2BcMFSFNDTZZa1cMqA6EC3Dlhs14bieK3yJYzGM%2FDfoAv0DTSxRZ0noeWsBvwJ0uGqHLIKiG8d48iKlldCo67gLhFz0S1VZ1%2BeXDMXvqQreyExlNPYtm8j3fYge6Ju%2Frab%2B6TAAwcJ7uBkqAjfrWUFQ%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+14%3A34%3A36&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216AB8476CH00&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;好吃蛋糕甜点蒸蛋糕  好吃蛋糕甜点蒸蛋糕  好吃蛋糕甜点蒸蛋糕  &quot;,&quot;total_amount&quot;:&quot;169&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1030毫秒------
2020-12-16 14:35:17 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 14:35:17 CST 2020时使用参数[Ljava.lang.Object;@1bda1218[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@4be2cdf6, top.chris.shop.pojo.Carousel@42f76bc2, top.chris.shop.pojo.Carousel@3b054216, top.chris.shop.pojo.Carousel@7084ddbc]，共耗时7毫秒------
2020-12-16 14:35:17 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 14:35:17 CST 2020时使用参数[Ljava.lang.Object;@4a24dfc6[{}]调用,并得到了结果[top.chris.shop.pojo.Category@628b37ec, top.chris.shop.pojo.Category@7479b92e, top.chris.shop.pojo.Category@309e4c9, top.chris.shop.pojo.Category@6f3fc181, top.chris.shop.pojo.Category@54b0afdd, top.chris.shop.pojo.Category@6db9ccac, top.chris.shop.pojo.Category@215a427e, top.chris.shop.pojo.Category@30f8ac1d, top.chris.shop.pojo.Category@61672398, top.chris.shop.pojo.Category@42185fb4]，共耗时7毫秒------
2020-12-16 14:35:17 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 14:35:17 CST 2020时使用参数[Ljava.lang.Object;@5d8690ea[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时6毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@3a955d30[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@4a6f8197, top.chris.shop.pojo.Carousel@718f8dfe, top.chris.shop.pojo.Carousel@1ffeeb23, top.chris.shop.pojo.Carousel@f924931]，共耗时4毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@89d4728[{}]调用,并得到了结果[top.chris.shop.pojo.Category@78eeb78e, top.chris.shop.pojo.Category@66007aa8, top.chris.shop.pojo.Category@355691bc, top.chris.shop.pojo.Category@57903439, top.chris.shop.pojo.Category@5a4fab82, top.chris.shop.pojo.Category@3f7f5f59, top.chris.shop.pojo.Category@3e25f27b, top.chris.shop.pojo.Category@68c2287a, top.chris.shop.pojo.Category@4f768d5b, top.chris.shop.pojo.Category@a36867b]，共耗时9毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@1656ef9b[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时10毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@378e5f3f[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@7b07e9b8, top.chris.shop.pojo.Carousel@3c43f189, top.chris.shop.pojo.Carousel@67829eef, top.chris.shop.pojo.Carousel@22b04287]，共耗时2毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@2852a663[{}]调用,并得到了结果[top.chris.shop.pojo.Category@3b985c6e, top.chris.shop.pojo.Category@3a7e6fd6, top.chris.shop.pojo.Category@1140a77d, top.chris.shop.pojo.Category@2c1c7a88, top.chris.shop.pojo.Category@559e2849, top.chris.shop.pojo.Category@1c57edf3, top.chris.shop.pojo.Category@838da4b, top.chris.shop.pojo.Category@473f29fe, top.chris.shop.pojo.Category@63c78d30, top.chris.shop.pojo.Category@405cdcce]，共耗时3毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@247872d0[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时4毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@7c0ef8b6[{}]调用,并得到了结果[top.chris.shop.pojo.Category@2f2ffa2a, top.chris.shop.pojo.Category@65d667c8, top.chris.shop.pojo.Category@5a7052c, top.chris.shop.pojo.Category@ee79666, top.chris.shop.pojo.Category@5ec9c33a, top.chris.shop.pojo.Category@8f7170c, top.chris.shop.pojo.Category@35c4fd5b, top.chris.shop.pojo.Category@7a21923, top.chris.shop.pojo.Category@17e2cafe, top.chris.shop.pojo.Category@271df079]，共耗时3毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@63de6a67[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@3bdb778d, top.chris.shop.pojo.Carousel@5e39eaae, top.chris.shop.pojo.Carousel@3d0f48c8, top.chris.shop.pojo.Carousel@2d92805c]，共耗时5毫秒------
2020-12-16 14:35:22 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 14:35:22 CST 2020时使用参数[Ljava.lang.Object;@6d7a227[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时8毫秒------
2020-12-16 14:35:23 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 14:35:23 CST 2020时使用参数[Ljava.lang.Object;@7ec54dcc[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@719f59f3, top.chris.shop.pojo.Carousel@62b2d4b4, top.chris.shop.pojo.Carousel@1f2c07de, top.chris.shop.pojo.Carousel@4b5382da]，共耗时5毫秒------
2020-12-16 14:35:23 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 14:35:23 CST 2020时使用参数[Ljava.lang.Object;@207aa12c[{}]调用,并得到了结果[top.chris.shop.pojo.Category@5239d662, top.chris.shop.pojo.Category@d9a13f9, top.chris.shop.pojo.Category@7af5071b, top.chris.shop.pojo.Category@f73baa8, top.chris.shop.pojo.Category@13e5e7e2, top.chris.shop.pojo.Category@4ebd2bbc, top.chris.shop.pojo.Category@1ca220af, top.chris.shop.pojo.Category@e167f69, top.chris.shop.pojo.Category@327053be, top.chris.shop.pojo.Category@15b76e87]，共耗时9毫秒------
2020-12-16 14:35:23 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 14:35:23 CST 2020时使用参数[Ljava.lang.Object;@7a585645[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时5毫秒------
2020-12-16 14:35:23 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 14:35:23 CST 2020时使用参数[Ljava.lang.Object;@16d84cf8[{2}]调用,并得到了结果RenderSixItemsVo(rootCatName=饼干/膨化, slogan=嘎嘣脆，一听到声音就开吃, bgColor=#f59cec, catImage=http://122.152.205.72:88/foodie/category/cookies.png, simpleItemList=[SimpleItem(itemName=【天天吃货】夹心吐司面包 全麦面包 早点早饭, itemId=bingan-1006, itemUrl=http://122.152.205.72:88/foodie/bingan-1006/img1.png), SimpleItem(itemName=【天天吃货】彩虹马卡龙 下午茶 美眉最爱, itemId=bingan-1001, itemUrl=http://122.152.205.72:88/foodie/bingan-1001/img1.png), SimpleItem(itemName=【天天吃货】可爱动物饼干 儿童早餐 孩子最爱, itemId=bingan-1003, itemUrl=http://122.152.205.72:88/foodie/bingan-1003/img1.png), SimpleItem(itemName=【天天吃货】夹心吐司面包 早餐面包 早点早饭, itemId=bingan-1005, itemUrl=http://122.152.205.72:88/foodie/bingan-1005/img1.png), SimpleItem(itemName=【天天吃货】男人最爱 秋葵饼干 嘎嘣脆, itemId=bingan-1002, itemUrl=http://122.152.205.72:88/foodie/bingan-1002/img1.png), SimpleItem(itemName=【天天吃货】可爱美丽甜甜圈 最美下午茶, itemId=bingan-1004, itemUrl=http://122.152.205.72:88/foodie/bingan-1004/img1.png), SimpleItem(itemName=进口虾条奇趣好吃不嫌多, itemId=cookies-68, itemUrl=http://122.152.205.72:88/foodie/cookies-68/img1.png), SimpleItem(itemName=儿时记忆儿时最爱 好吃回味薯条, itemId=cookies-60, itemUrl=http://122.152.205.72:88/foodie/cookies-60/img1.png), SimpleItem(itemName=超级好吃巧克力威化饼干 女女最爱, itemId=cookies-55, itemUrl=http://122.152.205.72:88/foodie/cookies-55/img1.png), SimpleItem(itemName=超级好吃巧克力威化饼干 女女最爱, itemId=cookies-63, itemUrl=http://122.152.205.72:88/foodie/cookies-63/img1.png), SimpleItem(itemName=好吃下午茶曲奇饼干, itemId=cookies-57, itemUrl=http://122.152.205.72:88/foodie/cookies-57/img1.png), SimpleItem(itemName=夹心饼干美味下午茶, itemId=cookies-52, itemUrl=http://122.152.205.72:88/foodie/cookies-52/img1.png), SimpleItem(itemName=【天天吃货】休闲虾条 进口虾条 超美味下午茶, itemId=cookies-65, itemUrl=http://122.152.205.72:88/foodie/cookies-65/img1.png), SimpleItem(itemName=【天天吃货】儿童饼干 早餐必备, itemId=cookies-59, itemUrl=http://122.152.205.72:88/foodie/cookies-59/img1.png), SimpleItem(itemName=甜甜美食饼干 儿童最爱, itemId=cookies-54, itemUrl=http://122.152.205.72:88/foodie/cookies-54/img1.png), SimpleItem(itemName=美食推荐 山药鼠标美味养生, itemId=cookies-62, itemUrl=http://122.152.205.72:88/foodie/cookies-62/img1.png), SimpleItem(itemName=甜甜美食饼干 儿童最爱, itemId=cookies-56, itemUrl=http://122.152.205.72:88/foodie/cookies-56/img1.png), SimpleItem(itemName=嘎嘣脆酥酥麻麻饼干 休闲食品下午茶最爱, itemId=cookies-51, itemUrl=http://122.152.205.72:88/foodie/cookies-51/img1.png), SimpleItem(itemName=【天天吃货】正宗网红超好吃蛋黄薯片, itemId=cookies-64, itemUrl=http://122.152.205.72:88/foodie/cookies-64/img1.png), SimpleItem(itemName=【天天吃货】无糖者最爱无糖饼干 酥酥脆脆, itemId=cookies-58, itemUrl=http://122.152.205.72:88/foodie/cookies-58/img1.png), SimpleItem(itemName=【天天吃货】儿童饼干 成人饼干 趣趣闲闲, itemId=cookies-53, itemUrl=http://122.152.205.72:88/foodie/cookies-53/img1.png)])，共耗时4毫秒------
2020-12-16 14:35:48 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 14:35:48 CST 2020时使用参数[Ljava.lang.Object;@5068c03d[{1}]调用,并得到了结果[CategoryVo(id=11, name=蛋糕, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@4c5b3af3, top.chris.shop.pojo.Category@414674c9, top.chris.shop.pojo.Category@785a3cd7, top.chris.shop.pojo.Category@6e2572c9, top.chris.shop.pojo.Category@7bbc515c, top.chris.shop.pojo.Category@92e82de, top.chris.shop.pojo.Category@203bbba8]), CategoryVo(id=12, name=点心, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@65cd265c, top.chris.shop.pojo.Category@7c62bd08, top.chris.shop.pojo.Category@127f828, top.chris.shop.pojo.Category@7cbce55f, top.chris.shop.pojo.Category@70cfd352, top.chris.shop.pojo.Category@192cbabe, top.chris.shop.pojo.Category@27f4f70b])]，共耗时5毫秒------
2020-12-16 14:35:49 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 14:35:49 CST 2020时使用参数[Ljava.lang.Object;@42d2c32a[{SearchItemsBo(keywords=null, catId=37, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@456bc5bd，共耗时18毫秒------
2020-12-16 14:35:50 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 14:35:50 CST 2020时使用参数[Ljava.lang.Object;@7ac92a03[{CommentBo(itemId=cake-37, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@34596068，共耗时2毫秒------
2020-12-16 14:35:50 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 14:35:50 CST 2020时使用参数[Ljava.lang.Object;@6e170d98[{cake-37}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, sellCounts=3786, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/cake-37/img1.png"><img src="http://122.152.205.72:88/foodie/cake-37/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/cake-37/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/cake-37/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=cake-37-spec-1, name=散装, priceDiscount=5310, priceNormal=5900, stock=259, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=cake-37-spec-2, name=袋装, priceDiscount=4720, priceNormal=5900, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=cake-37-spec-3, name=罐装, priceDiscount=5900, priceNormal=5900, stock=197, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时6毫秒------
2020-12-16 14:35:50 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 14:35:50 CST 2020时使用参数[Ljava.lang.Object;@649cc786[{cake-37}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时1毫秒------
2020-12-16 14:35:56 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 14:35:56 CST 2020时使用参数[Ljava.lang.Object;@7f12e573[{{cake-37-spec-1,cake-37-spec-2,cake-37-spec-3}}]调用,并得到了结果[ShopCartVo(specId=cake-37-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/cake-37/img1.png, itemName=好吃蛋糕甜点蒸蛋糕, specName=散装, priceNormal=5900, priceDiscount=5310), ShopCartVo(specId=cake-37-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/cake-37/img1.png, itemName=好吃蛋糕甜点蒸蛋糕, specName=袋装, priceNormal=5900, priceDiscount=4720), ShopCartVo(specId=cake-37-spec-3, itemImgUrl=http://122.152.205.72:88/foodie/cake-37/img1.png, itemName=好吃蛋糕甜点蒸蛋糕, specName=罐装, priceNormal=5900, priceDiscount=5900)]，共耗时4毫秒------
2020-12-16 14:36:04 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 14:36:04 CST 2020时使用参数[Ljava.lang.Object;@257fb472[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时2毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@7121464d[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@2a2506c6，共耗时2毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@25ee124[{[cake-37-spec-1, cake-37-spec-2, cake-37-spec-3]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@cfd49f, top.chris.shop.pojo.ItemsSpec@2a7b5738, top.chris.shop.pojo.ItemsSpec@6519a4dd]，共耗时2毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@1e9c3345[{cake-37}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@368b5307，共耗时2毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@62e71766[{cake-37}]调用,并得到了结果top.chris.shop.pojo.Items@1d9e0664，共耗时1毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@3b9f587a[{top.chris.shop.pojo.ItemsSpec@cfd49f}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@2ca9e78e[{cake-37}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@4e06c7c，共耗时2毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@6d28517a[{cake-37}]调用,并得到了结果top.chris.shop.pojo.Items@ede5ec6，共耗时2毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@ec3622e[{top.chris.shop.pojo.ItemsSpec@2a7b5738}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@29115ec9[{cake-37}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@722287b3，共耗时2毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@2c93adbc[{cake-37}]调用,并得到了结果top.chris.shop.pojo.Items@f5749f1，共耗时1毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@1b7043a[{top.chris.shop.pojo.ItemsSpec@6519a4dd}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@65ac7e0d[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=cake-37-spec-1,cake-37-spec-2,cake-37-spec-3, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216ABSF1B5FCH，共耗时72毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@73c64236[{201216ABSF1B5FCH}]调用,并得到了结果top.chris.shop.pojo.Orders@c286713，共耗时5毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@733782e2[{201216ABSF1B5FCH}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@49bb83a8, top.chris.shop.pojo.OrderItems@395f710, top.chris.shop.pojo.OrderItems@79802346]，共耗时3毫秒------
2020-12-16 14:36:08 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 14:36:08 CST 2020时使用参数[Ljava.lang.Object;@366f8e06[{20121488980857028608,201216ABSF1B5FCH}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=NeHa3T4vGuixugopR94wt5QBS0VTiAcGeYtbg%2FunIks0myz%2F3rzKZqh%2F3j7zVBYVs%2BELPKMHpzauo8mCnSjpJtc7L0UIQKpdCFieme28TZ%2FvbYo7wZMqNmdXiEVnPwwajk08aKTmUQAn7B6%2F5Dyz2nNZNdQEAkjEqj1mBhXJ1nPwI8NgirwotJJbkzUJ7%2FDe7ofnEeTtk3CCwOxw%2FOmG5oCihQjP0dV90epdd9sY33frbxsRGFOvSRXUBj7gI0EjIOtMPsTWfnMeuoqp4BKmIugEnVvcGEmNmC5SWqjxHVn%2F9%2FXXRHUs1%2B7NBJ0%2B62lkhwAD0mHzho4L9rMjri%2FarQ%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+14%3A36%3A08&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216ABSF1B5FCH&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;好吃蛋糕甜点蒸蛋糕  好吃蛋糕甜点蒸蛋糕  好吃蛋糕甜点蒸蛋糕  &quot;,&quot;total_amount&quot;:&quot;169&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时33毫秒------
2020-12-16 17:50:01 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 17:50:02 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 7612 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 17:50:02 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 17:50:04 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 17:50:04 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 17:50:04 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 32ms. Found 0 repository interfaces.
2020-12-16 17:50:04 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 17:50:05 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aaa2a3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 17:50:05 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 17:50:06 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3932 ms
2020-12-16 17:50:09 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 17:50:09 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 17:50:09 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 17:50:09 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 17:50:09 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 17:50:09 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 17:50:10 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 68b20d83-7a53-4fff-9a62-558a876989f8

2020-12-16 17:50:10 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5cc3e49b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d7f1e59, org.springframework.security.web.header.HeaderWriterFilter@590013c7, org.springframework.security.web.authentication.logout.LogoutFilter@5dc7841c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ba6557e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2262f0d8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4239262e, org.springframework.security.web.session.SessionManagementFilter@734fbae3, org.springframework.security.web.access.ExceptionTranslationFilter@4d25f816, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12365bd8]
2020-12-16 17:50:10 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 17:50:10 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 17:50:10 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 17:50:10 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 17:50:10 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 17:50:10 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 17:50:10 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 9.424 seconds (JVM running for 11.156)
2020-12-16 17:50:34 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 17:50:34 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 11 ms
2020-12-16 17:50:34 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 17:50:34 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 17:50:34 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 17:50:34 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.searchItemsLikeName在Wed Dec 16 17:50:34 CST 2020时使用参数[Ljava.lang.Object;@4d12aed1[{SearchItemsBo(keywords=天, catId=null, sort=k, page=1, pageSize=20)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6add3e2，共耗时779毫秒------
2020-12-16 17:50:59 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 17:50:59 CST 2020时使用参数[Ljava.lang.Object;@429e2aff[{snacks-1004}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时8毫秒------
2020-12-16 17:50:59 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 17:50:59 CST 2020时使用参数[Ljava.lang.Object;@52b194e6[{snacks-1004}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】豆腐干 卤味齐全 香辣麻辣, sellCounts=631, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/snacks-1004/img1.png"><img src="http://122.152.205.72:88/foodie/snacks-1004/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/snacks-1004/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/snacks-1004/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=snacks-1004-spec-1, name=香辣, priceDiscount=32400, priceNormal=36000, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=snacks-1004-spec-2, name=麻辣, priceDiscount=32800, priceNormal=41000, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=snacks-1004-spec-3, name=甜辣, priceDiscount=41000, priceNormal=41000, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时23毫秒------
2020-12-16 17:50:59 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 17:50:59 CST 2020时使用参数[Ljava.lang.Object;@2269049d[{CommentBo(itemId=snacks-1004, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@5482a99b，共耗时23毫秒------
2020-12-16 17:51:10 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 17:51:10 CST 2020时使用参数[Ljava.lang.Object;@4a310ccb[{{snacks-1004-spec-2}}]调用,并得到了结果[ShopCartVo(specId=snacks-1004-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/snacks-1004/img1.png, itemName=【天天吃货】豆腐干 卤味齐全 香辣麻辣, specName=麻辣, priceNormal=41000, priceDiscount=32800)]，共耗时12毫秒------
2020-12-16 17:51:13 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 17:51:13 CST 2020时使用参数[Ljava.lang.Object;@14525792[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时16毫秒------
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@285f0bf4[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@6159212d，共耗时18毫秒------
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@15e6d541[{[snacks-1004-spec-2]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@5bc8ae35]，共耗时18毫秒------
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@78e3c67e[{snacks-1004}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@5b0c48fe，共耗时28毫秒------
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@522ae28e[{snacks-1004}]调用,并得到了结果top.chris.shop.pojo.Items@6b581b8d，共耗时3毫秒------
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@4cf4b1e7[{top.chris.shop.pojo.ItemsSpec@5bc8ae35}]调用,并得到了结果1，共耗时39毫秒------
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@7e1e84b8[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=snacks-1004-spec-2, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216CPTP6C6W00，共耗时196毫秒------
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@6387746a[{201216CPTP6C6W00}]调用,并得到了结果top.chris.shop.pojo.Orders@1012375，共耗时3毫秒------
2020-12-16 17:51:26 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@3af41721[{201216CPTP6C6W00}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@13489a5e]，共耗时9毫秒------
2020-12-16 17:51:27 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 17:51:26 CST 2020时使用参数[Ljava.lang.Object;@6aa6212[{20121488980857028608,201216CPTP6C6W00}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=M7VMXG8zXFtOe9jmPAh5e%2FjEAciJmdHIkpQ0jiuDW2ONDFIY%2FnJBryaPqyi5CsVAZNrDb96vmXBLWP3i2U2BAtpMODSQ%2BW4InfJzaff195ArAYWSEuAnEXx17sNCKfTBEegePSukyBSyLoEPVbybdsn7%2BuUlEvVI4tbA1B%2FaPV%2FMWPra%2FeTnwv1ureySS0VZh5fUzFj%2FSpEPHqasVsdokZA0rz1RnANElNiq%2BLmjaKPX043qSEqLIqmEZ3mVsf0WYR7%2FjvwnupXZSYZGY53Y9WDY%2Fw0HjKyjFNLKcBcdRPlDKO%2FeRa%2BH1v2YB2c0PUoXwb6TM7jO9yntH74A4ZTQNw%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+17%3A51%3A26&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216CPTP6C6W00&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】豆腐干 卤味齐全 香辣麻辣  &quot;,&quot;total_amount&quot;:&quot;338&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时894毫秒------
2020-12-16 17:58:44 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 17:58:44 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 14480 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 17:58:44 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 17:58:45 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 17:58:46 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 17:58:46 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 17:58:46 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 17:58:46 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$384573f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 17:58:47 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 17:58:47 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2750 ms
2020-12-16 17:58:49 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 17:58:50 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 17:58:50 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 17:58:50 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 17:58:50 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 17:58:50 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 17:58:50 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 87edaba1-91a0-4dc0-a91c-261b8704659e

2020-12-16 17:58:50 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ef041bb, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ab9e43e, org.springframework.security.web.header.HeaderWriterFilter@23afc725, org.springframework.security.web.authentication.logout.LogoutFilter@44fb6ebd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b4a3a1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@667797f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45e7bb79, org.springframework.security.web.session.SessionManagementFilter@7d88fa9c, org.springframework.security.web.access.ExceptionTranslationFilter@49cb5030, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5e0f2c82]
2020-12-16 17:58:50 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 17:58:50 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 17:58:51 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 17:58:51 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 17:58:51 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 17:58:51 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 17:58:51 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.591 seconds (JVM running for 9.032)
2020-12-16 17:58:51 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 17:58:51 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 14 ms
2020-12-16 17:58:51 下午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 17:58:51 下午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 17:58:52 下午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 17:58:52 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 17:58:51 CST 2020时使用参数[Ljava.lang.Object;@1cef7bf2[{CommentBo(itemId=snacks-1004, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@422c0d30，共耗时268毫秒------
2020-12-16 17:58:52 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 17:58:51 CST 2020时使用参数[Ljava.lang.Object;@70aa2792[{snacks-1004}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时269毫秒------
2020-12-16 17:58:52 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 17:58:51 CST 2020时使用参数[Ljava.lang.Object;@6700d9cb[{snacks-1004}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】豆腐干 卤味齐全 香辣麻辣, sellCounts=631, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/snacks-1004/img1.png"><img src="http://122.152.205.72:88/foodie/snacks-1004/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/snacks-1004/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/snacks-1004/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=snacks-1004-spec-1, name=香辣, priceDiscount=32400, priceNormal=36000, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=snacks-1004-spec-2, name=麻辣, priceDiscount=32800, priceNormal=41000, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=snacks-1004-spec-3, name=甜辣, priceDiscount=41000, priceNormal=41000, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时291毫秒------
2020-12-16 17:58:55 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 17:58:55 CST 2020时使用参数[Ljava.lang.Object;@3ba8fc1c[{{snacks-1004-spec-2}}]调用,并得到了结果[ShopCartVo(specId=snacks-1004-spec-2, itemImgUrl=http://122.152.205.72:88/foodie/snacks-1004/img1.png, itemName=【天天吃货】豆腐干 卤味齐全 香辣麻辣, specName=麻辣, priceNormal=41000, priceDiscount=32800)]，共耗时10毫秒------
2020-12-16 17:58:58 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 17:58:58 CST 2020时使用参数[Ljava.lang.Object;@383b7529[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时11毫秒------
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@443b6b2f[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@1eba5574，共耗时3毫秒------
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@28e3183[{[snacks-1004-spec-2]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@2a455464]，共耗时19毫秒------
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@2fcd7e7a[{snacks-1004}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@5cbc4029，共耗时3毫秒------
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@4d49cb05[{snacks-1004}]调用,并得到了结果top.chris.shop.pojo.Items@9b35278，共耗时2毫秒------
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@4eb5e2a7[{top.chris.shop.pojo.ItemsSpec@2a455464}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@69e2a8f[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=snacks-1004-spec-2, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216CTBW3ANSCH，共耗时51毫秒------
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@1a065005[{201216CTBW3ANSCH}]调用,并得到了结果top.chris.shop.pojo.Orders@37dca51c，共耗时5毫秒------
2020-12-16 17:59:10 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@2402e8c6[{201216CTBW3ANSCH}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@6689b8f6]，共耗时6毫秒------
2020-12-16 17:59:11 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 17:59:10 CST 2020时使用参数[Ljava.lang.Object;@64ccb6fc[{20121488980857028608,201216CTBW3ANSCH}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=a6CBV1DWfOOzBEVz6SU%2B5hl6gnmK5fqnwmW%2BZd2oMniYjn%2BhQGBnS2JNnPXLiZNArztrk8s9%2FNsmoiTWEfXIUFF%2BcUI7rxrBeDFS20VV4ol73%2FDvzSdoTxYIXT%2FFS9hTF6Gm%2FvpQ8mHaVZVlDlS0LCU2jvNYLF%2Bp0W%2FpLyVe87wAjmqC9q2L%2Ff3teyQngmsKnPdI2dQ%2BO9TB88F3f6VKhuX0gVfbhISJEKYXeOBcSAfJlgwLnpWr9jZRph%2BPSUConVyvyA0j4DY8AcZtHI3mlCtSxwyISWxvVF63S6Sx%2FYpnh9Wf7kPl%2FmZ9VF41vX%2FfJEy8J6u78LNJdgDulGm7jA%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+17%3A59%3A10&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216CTBW3ANSCH&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】豆腐干 卤味齐全 香辣麻辣  &quot;,&quot;total_amount&quot;:&quot;338&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1018毫秒------
2020-12-16 18:01:53 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 18:01:53 CST 2020时使用参数[Ljava.lang.Object;@355691bc[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@57903439, top.chris.shop.pojo.Carousel@5a4fab82, top.chris.shop.pojo.Carousel@3f7f5f59, top.chris.shop.pojo.Carousel@3e25f27b]，共耗时7毫秒------
2020-12-16 18:01:53 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 18:01:53 CST 2020时使用参数[Ljava.lang.Object;@1f85a4a5[{}]调用,并得到了结果[top.chris.shop.pojo.Category@2e9d3120, top.chris.shop.pojo.Category@434c2047, top.chris.shop.pojo.Category@62c72582, top.chris.shop.pojo.Category@505505f3, top.chris.shop.pojo.Category@17062ae8, top.chris.shop.pojo.Category@35ea7e57, top.chris.shop.pojo.Category@6e5ab65d, top.chris.shop.pojo.Category@16d84cf8, top.chris.shop.pojo.Category@30af75a1, top.chris.shop.pojo.Category@5651ad25]，共耗时10毫秒------
2020-12-16 18:01:53 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 18:01:53 CST 2020时使用参数[Ljava.lang.Object;@25647109[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时6毫秒------
2020-12-16 18:02:03 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 18:02:03 CST 2020时使用参数[Ljava.lang.Object;@452adec0[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@f20e0d3, top.chris.shop.pojo.Carousel@3dad1505, top.chris.shop.pojo.Carousel@33e8d6c7, top.chris.shop.pojo.Carousel@2027d2a4]，共耗时4毫秒------
2020-12-16 18:02:03 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 18:02:03 CST 2020时使用参数[Ljava.lang.Object;@7a01dbdd[{}]调用,并得到了结果[top.chris.shop.pojo.Category@6ad5da08, top.chris.shop.pojo.Category@279314ae, top.chris.shop.pojo.Category@47d66daa, top.chris.shop.pojo.Category@337d99be, top.chris.shop.pojo.Category@773c1043, top.chris.shop.pojo.Category@48355c6e, top.chris.shop.pojo.Category@3cfac3ff, top.chris.shop.pojo.Category@63150db7, top.chris.shop.pojo.Category@74bca79e, top.chris.shop.pojo.Category@1608434b]，共耗时8毫秒------
2020-12-16 18:02:03 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 18:02:03 CST 2020时使用参数[Ljava.lang.Object;@50e25d30[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时8毫秒------
2020-12-16 18:02:04 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 18:02:04 CST 2020时使用参数[Ljava.lang.Object;@b9258e5[{5}]调用,并得到了结果[CategoryVo(id=22, name=坚果, type=2, fatherId=5, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@111bc6cc, top.chris.shop.pojo.Category@308b2079, top.chris.shop.pojo.Category@21d56e03, top.chris.shop.pojo.Category@38194fac, top.chris.shop.pojo.Category@77fbd3c5, top.chris.shop.pojo.Category@1e9abdab, top.chris.shop.pojo.Category@14b57d0d]), CategoryVo(id=23, name=锅巴, type=2, fatherId=5, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@66a33418, top.chris.shop.pojo.Category@4f6fa6f2])]，共耗时6毫秒------
2020-12-16 18:02:04 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 18:02:04 CST 2020时使用参数[Ljava.lang.Object;@147efb4d[{4}]调用,并得到了结果[CategoryVo(id=19, name=豆干, type=2, fatherId=4, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@5d8690ea, top.chris.shop.pojo.Category@6b6cf969, top.chris.shop.pojo.Category@eb386ba, top.chris.shop.pojo.Category@6d74a0b2]), CategoryVo(id=20, name=干笋, type=2, fatherId=4, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@41c7c36, top.chris.shop.pojo.Category@8b77a6d, top.chris.shop.pojo.Category@1a23bb97, top.chris.shop.pojo.Category@521ae951]), CategoryVo(id=21, name=鸭脖, type=2, fatherId=4, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@3580c2e8, top.chris.shop.pojo.Category@6d7a227, top.chris.shop.pojo.Category@1af4e69, top.chris.shop.pojo.Category@4fa7f6c, top.chris.shop.pojo.Category@37de6a99, top.chris.shop.pojo.Category@c2320df])]，共耗时6毫秒------
2020-12-16 18:02:04 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 18:02:04 CST 2020时使用参数[Ljava.lang.Object;@332981f2[{3}]调用,并得到了结果[CategoryVo(id=16, name=肉铺, type=2, fatherId=3, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@405ea72e, top.chris.shop.pojo.Category@44cbeb3e, top.chris.shop.pojo.Category@2b5a5bab, top.chris.shop.pojo.Category@54037923, top.chris.shop.pojo.Category@61d1d35a, top.chris.shop.pojo.Category@7a585645, top.chris.shop.pojo.Category@3a6dda6]), CategoryVo(id=17, name=肉松, type=2, fatherId=3, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@4ca37690, top.chris.shop.pojo.Category@2307275d, top.chris.shop.pojo.Category@1b55b706]), CategoryVo(id=18, name=香肠, type=2, fatherId=3, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@2e2b0227, top.chris.shop.pojo.Category@79ebf684, top.chris.shop.pojo.Category@63cc0b2b, top.chris.shop.pojo.Category@55176dd3, top.chris.shop.pojo.Category@23db676c, top.chris.shop.pojo.Category@5a2fa45, top.chris.shop.pojo.Category@6342c89])]，共耗时6毫秒------
2020-12-16 18:02:04 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 18:02:04 CST 2020时使用参数[Ljava.lang.Object;@2453e859[{2}]调用,并得到了结果[CategoryVo(id=13, name=饼干, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@543dfd05, top.chris.shop.pojo.Category@62e909b3, top.chris.shop.pojo.Category@2e7a872b, top.chris.shop.pojo.Category@1550a39d, top.chris.shop.pojo.Category@2ebeb1e7, top.chris.shop.pojo.Category@4b09112, top.chris.shop.pojo.Category@7e890d70, top.chris.shop.pojo.Category@6ed50577, top.chris.shop.pojo.Category@35bfb0c3]), CategoryVo(id=14, name=薯片, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@35078f67, top.chris.shop.pojo.Category@3d3f63a, top.chris.shop.pojo.Category@45eba58a, top.chris.shop.pojo.Category@d1a3c5c, top.chris.shop.pojo.Category@4efe62f]), CategoryVo(id=15, name=虾条, type=2, fatherId=2, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@1891a2ae, top.chris.shop.pojo.Category@4e93c3, top.chris.shop.pojo.Category@5ceab74a, top.chris.shop.pojo.Category@274ffc66, top.chris.shop.pojo.Category@325eaef3])]，共耗时5毫秒------
2020-12-16 18:02:04 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubCats在Wed Dec 16 18:02:04 CST 2020时使用参数[Ljava.lang.Object;@87ecb5d[{1}]调用,并得到了结果[CategoryVo(id=11, name=蛋糕, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@3353d42a, top.chris.shop.pojo.Category@adb8b1a, top.chris.shop.pojo.Category@21705527, top.chris.shop.pojo.Category@5faa5677, top.chris.shop.pojo.Category@72f53b2c, top.chris.shop.pojo.Category@2420ed33, top.chris.shop.pojo.Category@75a5dfd]), CategoryVo(id=12, name=点心, type=2, fatherId=1, logo=null, slogan=null, catImage=null, bgColor=null, subCatList=[top.chris.shop.pojo.Category@aceba8f, top.chris.shop.pojo.Category@5139cca1, top.chris.shop.pojo.Category@7253eac0, top.chris.shop.pojo.Category@27b3f4c2, top.chris.shop.pojo.Category@58d63879, top.chris.shop.pojo.Category@4795bb06, top.chris.shop.pojo.Category@2afd4cde])]，共耗时3毫秒------
2020-12-16 18:02:05 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 18:02:05 CST 2020时使用参数[Ljava.lang.Object;@25d3010a[{SearchItemsBo(keywords=null, catId=104, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6e79f0e9，共耗时11毫秒------
2020-12-16 18:02:06 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 18:02:06 CST 2020时使用参数[Ljava.lang.Object;@5a0c3e5d[{CommentBo(itemId=nut-1006, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@3ee92f7f，共耗时4毫秒------
2020-12-16 18:02:06 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 18:02:06 CST 2020时使用参数[Ljava.lang.Object;@290222d6[{nut-1006}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时2毫秒------
2020-12-16 18:02:06 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 18:02:06 CST 2020时使用参数[Ljava.lang.Object;@38c5e42a[{nut-1006}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】野生腰果 养生补脑最佳零食, sellCounts=560, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/nut-1006/img1.png"><img src="http://122.152.205.72:88/foodie/nut-1006/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/nut-1006/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/nut-1006/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-1, name=甜, priceDiscount=5220, priceNormal=5800, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-2, name=辣, priceDiscount=4640, priceNormal=5800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-3, name=原味, priceDiscount=5800, priceNormal=5800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时12毫秒------
2020-12-16 18:02:08 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 18:02:08 CST 2020时使用参数[Ljava.lang.Object;@7363af9b[{{nut-1006-spec-1}}]调用,并得到了结果[ShopCartVo(specId=nut-1006-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/nut-1006/img1.png, itemName=【天天吃货】野生腰果 养生补脑最佳零食, specName=甜, priceNormal=5800, priceDiscount=5220)]，共耗时6毫秒------
2020-12-16 18:02:11 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 18:02:11 CST 2020时使用参数[Ljava.lang.Object;@3a080912[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时2毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@36452ae4[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@6afd281c，共耗时1毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@1b3f5cbb[{[nut-1006-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@4324732]，共耗时4毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@f1f5514[{nut-1006}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@6e241ac8，共耗时3毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@1ec079ac[{nut-1006}]调用,并得到了结果top.chris.shop.pojo.Items@6b023895，共耗时1毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@e7eea62[{top.chris.shop.pojo.ItemsSpec@4324732}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@41a9f0cc[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=nut-1006-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216CWC8176N2W，共耗时21毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@1d93e21f[{201216CWC8176N2W}]调用,并得到了结果top.chris.shop.pojo.Orders@2a157ea6，共耗时2毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@2ee4557b[{201216CWC8176N2W}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@2ce5c9a2]，共耗时5毫秒------
2020-12-16 18:02:13 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 18:02:13 CST 2020时使用参数[Ljava.lang.Object;@2d8472d6[{20121488980857028608,201216CWC8176N2W}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=iqZtFpKWpz7OV3q9PCwYkiO8m3bm%2FKxLpMHhfxuDsECiIk2Q4nwlksqiZPEsRqU3J2CUoY6D4gp7FtJj3Ayy0vbbR9PnBcGlhzT2ZThsEJe3yz2E1h%2BKYydMO6hwMwbK3jHdfetB1ckN5r4m9oCDu9S0Vqj3AaNJuirxBUAb2onbOe0tx%2F28IMPBei4RSIcZUIdN%2BjN2T6p5Vu0CejwyRBwcDHcFEZPPHUO0gmSXo1EITkdFQtsPSfhJfYQ5O6MmSQbVIPtNIHqUqpNjbSGVtoO1maDz0%2FTFCGteLKyPdwz7p%2FACJTyz72DFzR%2FrN50UXnVEGTebF2MB1cfwBXoBWw%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+18%3A02%3A13&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216CWC8176N2W&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】野生腰果 养生补脑最佳零食  &quot;,&quot;total_amount&quot;:&quot;62&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时32毫秒------
2020-12-16 18:06:03 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 18:06:03 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 25844 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 18:06:03 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 18:06:04 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 18:06:04 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 18:06:05 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 33ms. Found 0 repository interfaces.
2020-12-16 18:06:05 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 18:06:05 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3b08d83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 18:06:05 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 18:06:06 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2913 ms
2020-12-16 18:06:08 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 18:06:09 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 18:06:09 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 18:06:09 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 18:06:09 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 18:06:09 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 18:06:09 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 65fb590a-222c-4ee5-8dc4-7d4bac743182

2020-12-16 18:06:09 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78318ac2, org.springframework.security.web.context.SecurityContextPersistenceFilter@79d63a4f, org.springframework.security.web.header.HeaderWriterFilter@5ed31735, org.springframework.security.web.authentication.logout.LogoutFilter@23afc725, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2084e65a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54463380, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77ce88c4, org.springframework.security.web.session.SessionManagementFilter@e2b3026, org.springframework.security.web.access.ExceptionTranslationFilter@41bb1f09, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e77678c]
2020-12-16 18:06:09 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 18:06:09 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 18:06:09 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 18:06:09 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 18:06:10 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 18:06:10 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 18:06:10 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.47 seconds (JVM running for 8.862)
2020-12-16 18:06:16 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 18:06:16 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 9 ms
2020-12-16 18:06:16 下午 [Thread: http-nio-8080-exec-7][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 18:06:16 下午 [Thread: http-nio-8080-exec-7][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 18:06:16 下午 [Thread: http-nio-8080-exec-7][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 18:06:16 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 18:06:16 CST 2020时使用参数[Ljava.lang.Object;@65e05248[{CommentBo(itemId=nut-1006, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@251b4c80，共耗时224毫秒------
2020-12-16 18:06:16 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 18:06:16 CST 2020时使用参数[Ljava.lang.Object;@4f6bf9c5[{nut-1006}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】野生腰果 养生补脑最佳零食, sellCounts=560, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/nut-1006/img1.png"><img src="http://122.152.205.72:88/foodie/nut-1006/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/nut-1006/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/nut-1006/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-1, name=甜, priceDiscount=5220, priceNormal=5800, stock=259, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-2, name=辣, priceDiscount=4640, priceNormal=5800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-3, name=原味, priceDiscount=5800, priceNormal=5800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时233毫秒------
2020-12-16 18:06:16 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 18:06:16 CST 2020时使用参数[Ljava.lang.Object;@24d4b2ce[{nut-1006}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时226毫秒------
2020-12-16 18:06:19 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 18:06:19 CST 2020时使用参数[Ljava.lang.Object;@8c973b9[{{nut-1006-spec-1}}]调用,并得到了结果[ShopCartVo(specId=nut-1006-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/nut-1006/img1.png, itemName=【天天吃货】野生腰果 养生补脑最佳零食, specName=甜, priceNormal=5800, priceDiscount=5220)]，共耗时13毫秒------
2020-12-16 18:06:22 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 18:06:22 CST 2020时使用参数[Ljava.lang.Object;@16f1d567[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时12毫秒------
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@5c7f182f[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@1d7e6911，共耗时3毫秒------
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@7acfb5fe[{[nut-1006-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@2b8b24f9]，共耗时18毫秒------
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@2a89d590[{nut-1006}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@2deee57a，共耗时3毫秒------
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@2a6aa3f0[{nut-1006}]调用,并得到了结果top.chris.shop.pojo.Items@4eabc678，共耗时2毫秒------
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@1b2f0135[{top.chris.shop.pojo.ItemsSpec@2b8b24f9}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@7e71bd95[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=nut-1006-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216CXTBK43G7C，共耗时54毫秒------
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@79dc4328[{201216CXTBK43G7C}]调用,并得到了结果top.chris.shop.pojo.Orders@685a4c62，共耗时4毫秒------
2020-12-16 18:06:24 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@4b53b83c[{201216CXTBK43G7C}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@3647659e]，共耗时7毫秒------
2020-12-16 18:06:26 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 18:06:24 CST 2020时使用参数[Ljava.lang.Object;@2b83c18c[{20121488980857028608,201216CXTBK43G7C}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=Pq2BJHYAT4ZpD3SocKqo8MVwOtaTJ68CTkMo0IlzhiBrKbbL1Kr8nlQIONecZdY7IdC2pUTWMxLVnACVS%2B1EGNIgKrWXKlDaYcOSf4AzCkDihhJx1D6x8n6HAPWjDhWJWekRwyCKbCJtJbg%2F3%2FLkXHLk2rh2N%2BpwcVVVNodiGZO2auueeZGeJjWw%2B5ceZ7OgKY90yaKuMSZjr57NnZ1Ibsv%2FOTWj%2F3OvoiAGfog2keZ9fQvT0Hewwz58CSffbcpAckKC%2Fyn9EIRY14zhzAtWWMPWCkBY7kxj%2Fc%2BdDssCS6jh%2BfHpWet%2BsQGKzHlR2xsiUvZkRR6k5d5yCD8lKtdYaA%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+18%3A06%3A24&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216CXTBK43G7C&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】野生腰果 养生补脑最佳零食  &quot;,&quot;total_amount&quot;:&quot;62&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1067毫秒------
2020-12-16 18:08:36 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 18:08:37 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 10244 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 18:08:37 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 18:08:38 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 18:08:38 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 18:08:38 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces.
2020-12-16 18:08:38 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 18:08:38 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba0821fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 18:08:39 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 18:08:39 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2540 ms
2020-12-16 18:08:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 18:08:42 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 18:08:42 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 18:08:42 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 18:08:42 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 18:08:42 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 18:08:42 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 3d79c052-1f42-4513-bb35-79d08f4d4acb

2020-12-16 18:08:43 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1736c1e4, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b07cad0, org.springframework.security.web.header.HeaderWriterFilter@c497a55, org.springframework.security.web.authentication.logout.LogoutFilter@7cc1f72c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2fb082ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@e2b3026, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@32dcfeea, org.springframework.security.web.session.SessionManagementFilter@71dd4624, org.springframework.security.web.access.ExceptionTranslationFilter@5ed25612, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52ca0ad4]
2020-12-16 18:08:43 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 18:08:43 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 18:08:43 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 18:08:43 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 18:08:43 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 18:08:43 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 18:08:43 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 6.902 seconds (JVM running for 8.343)
2020-12-16 18:08:48 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 18:08:48 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 13 ms
2020-12-16 18:08:48 下午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 18:08:48 下午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 18:08:48 下午 [Thread: http-nio-8080-exec-3][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 18:08:48 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 18:08:48 CST 2020时使用参数[Ljava.lang.Object;@44cc24e1[{CommentBo(itemId=nut-1001, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@4a485d27，共耗时216毫秒------
2020-12-16 18:08:48 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 18:08:48 CST 2020时使用参数[Ljava.lang.Object;@20a156f[{nut-1001}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】进口美国松子 口味齐全, sellCounts=359, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/nut-1001/img1.png"><img src="http://122.152.205.72:88/foodie/nut-1001/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/nut-1001/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/nut-1001/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=nut-1001-spec-1, name=甜, priceDiscount=3780, priceNormal=4200, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=nut-1001-spec-2, name=辣, priceDiscount=3360, priceNormal=4200, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=nut-1001-spec-3, name=原味, priceDiscount=4200, priceNormal=4200, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时224毫秒------
2020-12-16 18:08:48 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 18:08:48 CST 2020时使用参数[Ljava.lang.Object;@204d4265[{nut-1001}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时217毫秒------
2020-12-16 18:08:50 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 18:08:50 CST 2020时使用参数[Ljava.lang.Object;@584bed72[{{nut-1001-spec-1}}]调用,并得到了结果[ShopCartVo(specId=nut-1001-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/nut-1001/img1.png, itemName=【天天吃货】进口美国松子 口味齐全, specName=甜, priceNormal=4200, priceDiscount=3780)]，共耗时12毫秒------
2020-12-16 18:08:53 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 18:08:53 CST 2020时使用参数[Ljava.lang.Object;@5546f1ac[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时12毫秒------
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@76ac4ab9[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@46ff82e2，共耗时3毫秒------
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@60eb70b7[{[nut-1001-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@2469c984]，共耗时19毫秒------
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@4655a1e8[{nut-1001}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@7d800f5d，共耗时4毫秒------
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@5a6a0a15[{nut-1001}]调用,并得到了结果top.chris.shop.pojo.Items@31dbba51，共耗时3毫秒------
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@3d810abb[{top.chris.shop.pojo.ItemsSpec@2469c984}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@624f6a1d[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=nut-1001-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216CYMT7XGX1P，共耗时54毫秒------
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@3751a0af[{201216CYMT7XGX1P}]调用,并得到了结果top.chris.shop.pojo.Orders@79d4710c，共耗时7毫秒------
2020-12-16 18:08:55 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@2ee6ed25[{201216CYMT7XGX1P}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@48930b8b]，共耗时5毫秒------
2020-12-16 18:08:56 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 18:08:55 CST 2020时使用参数[Ljava.lang.Object;@44ad2f9c[{20121488980857028608,201216CYMT7XGX1P}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=Q2yvGgol%2BbWqEow5sDROCdADAh5k3guX%2FmkDSGcvKL3R7wDUK6vXdQV4oUw1gffgK3eH0xgZx%2FZS7%2BWTlwyCqwNTFjig3ePyimg1NdnJSCAeALrlB4orMnzaJKkVuFdr6pzXpQ3hjDRs0F8WzubNNbZMkfE3FEwYiO5mjAvujBXCXyOTQvfP5RDTXWxNq2yuUVb90Hq7R0rqpUWWVWpvV%2FYg92%2BKWb%2FzTt4NZZmV05vaYLeUfw7IAw13ED8qx8Yj6eOQ0NNnNsXtbrjMGa%2BOJlVO8OJYLoZWyf2oiS9V80nqcBmyoOhAaD%2F1i7WODwbQernAA7QjYz%2FLypC70JSiFQ%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+18%3A08%3A55&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216CYMT7XGX1P&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】进口美国松子 口味齐全  &quot;,&quot;total_amount&quot;:&quot;47&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1066毫秒------
2020-12-16 21:31:21 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 21:31:22 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 4948 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 21:31:22 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 21:31:25 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 21:31:25 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 21:31:25 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 33ms. Found 0 repository interfaces.
2020-12-16 21:31:25 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 21:31:26 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9662d74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 21:31:27 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 21:31:28 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 5972 ms
2020-12-16 21:31:32 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 21:31:32 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 21:31:33 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 21:31:33 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 21:31:33 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 21:31:33 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 21:31:33 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: dc343796-ba0c-404c-bdd8-e9d5a8692b3a

2020-12-16 21:31:33 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4afd65fd, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d3f99d7, org.springframework.security.web.header.HeaderWriterFilter@46d1b59, org.springframework.security.web.authentication.logout.LogoutFilter@5889fc44, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d88fa9c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63f2e0b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@141aba65, org.springframework.security.web.session.SessionManagementFilter@2d74cbbd, org.springframework.security.web.access.ExceptionTranslationFilter@4586a8aa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@b5312df]
2020-12-16 21:31:33 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 21:31:33 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 21:31:34 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 21:31:34 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 21:31:34 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 21:31:34 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 21:31:34 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 13.81 seconds (JVM running for 15.891)
2020-12-16 21:32:03 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 21:32:03 下午 [Thread: http-nio-8080-exec-2][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 12 ms
2020-12-16 21:32:03 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 21:32:03 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 21:32:03 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 21:32:03 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 21:32:03 CST 2020时使用参数[Ljava.lang.Object;@6212a826[{CommentBo(itemId=nut-1006, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@adb1e07，共耗时515毫秒------
2020-12-16 21:32:03 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 21:32:03 CST 2020时使用参数[Ljava.lang.Object;@1c703b2d[{nut-1006}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时515毫秒------
2020-12-16 21:32:03 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 21:32:03 CST 2020时使用参数[Ljava.lang.Object;@70539865[{nut-1006}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】野生腰果 养生补脑最佳零食, sellCounts=560, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/nut-1006/img1.png"><img src="http://122.152.205.72:88/foodie/nut-1006/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/nut-1006/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/nut-1006/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-1, name=甜, priceDiscount=5220, priceNormal=5800, stock=258, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-2, name=辣, priceDiscount=4640, priceNormal=5800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-3, name=原味, priceDiscount=5800, priceNormal=5800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时595毫秒------
2020-12-16 21:32:06 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 21:32:06 CST 2020时使用参数[Ljava.lang.Object;@5dd79ec8[{{nut-1006-spec-1}}]调用,并得到了结果[ShopCartVo(specId=nut-1006-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/nut-1006/img1.png, itemName=【天天吃货】野生腰果 养生补脑最佳零食, specName=甜, priceNormal=5800, priceDiscount=5220)]，共耗时29毫秒------
2020-12-16 21:32:09 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 21:32:09 CST 2020时使用参数[Ljava.lang.Object;@1a974b7c[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时14毫秒------
2020-12-16 21:32:11 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 21:32:11 CST 2020时使用参数[Ljava.lang.Object;@26be7de8[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@456160b2，共耗时4毫秒------
2020-12-16 21:32:11 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 21:32:11 CST 2020时使用参数[Ljava.lang.Object;@44198d21[{[nut-1006-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@1e99d117]，共耗时19毫秒------
2020-12-16 21:32:11 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 21:32:11 CST 2020时使用参数[Ljava.lang.Object;@45eb3ecc[{nut-1006}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@4d13d3d5，共耗时3毫秒------
2020-12-16 21:32:11 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 21:32:11 CST 2020时使用参数[Ljava.lang.Object;@2fe8edc9[{nut-1006}]调用,并得到了结果top.chris.shop.pojo.Items@3369aba6，共耗时2毫秒------
2020-12-16 21:32:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 21:32:12 CST 2020时使用参数[Ljava.lang.Object;@276d1473[{top.chris.shop.pojo.ItemsSpec@1e99d117}]调用,并得到了结果1，共耗时42毫秒------
2020-12-16 21:32:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 21:32:11 CST 2020时使用参数[Ljava.lang.Object;@5808a343[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=nut-1006-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216GAADDMBRS8，共耗时143毫秒------
2020-12-16 21:32:12 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 21:32:12 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 21:32:12 CST 2020时使用参数[Ljava.lang.Object;@bbf676b[{201216GAADDMBRS8}]调用,并得到了结果top.chris.shop.pojo.Orders@45ace514，共耗时4毫秒------
2020-12-16 21:32:12 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 21:32:12 CST 2020时使用参数[Ljava.lang.Object;@466fff29[{201216GAADDMBRS8}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@68ef8192]，共耗时6毫秒------
2020-12-16 21:32:13 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 21:32:12 CST 2020时使用参数[Ljava.lang.Object;@2cc75ce5[{20121488980857028608,201216GAADDMBRS8}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=FMLkEi8DMKjjK67g9LiFzcIcInwMvGHCLZ3p2wKsvmCFnRijnOMhGa5anQxSaa4V0G1hil4N48cLupFQF2lpOTtUVQZtkXLqofo1IVY9hb7gqjwizA6JJMdsAHdMdhIrefMfu1AtaZFFEAQbUtnsfLObXfOIcP4WcIsUYVnvl7vTzQgjxP%2B1LsCizLu36JySYuugq1rnuoW59DY7ngAQLHS3DAqryKz8H8sdm%2B3kxlMMNspUg5VzDjkQbY%2FF4Sjv4QgnaWRT8Qfx4XpAbBqZG%2BZptqhz43%2FdPc22M1210Vn2mkl%2BzSKSVF9wR4X7N8eRUleIB1jGSk7oq7dNk72M0Q%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+21%3A32%3A12&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216GAADDMBRS8&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】野生腰果 养生补脑最佳零食  &quot;,&quot;total_amount&quot;:&quot;62&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1177毫秒------
2020-12-16 21:33:10 下午 [Thread: http-nio-8080-exec-8][ Class:sdk.biz.err >> Method: com.alipay.api.internal.util.AlipayLogger.logBizSummary(AlipayLogger.java:366) ]
INFO:Summary^_^10000^_^null^_^ProtocalMustParams:charset=utf-8&method=alipay.trade.query&sign=Va+UkfYL4YbonQvtycKHRRLcEjUPamfS9y+IuehgFy9Ral4KZctwj4Lq6UOYeTKd6JgqvQAtRJ6U/9mK5D0E6OHOaLM9O+8CQZj3Ef7z87qeoxtGzUjFILnU6bxkZNQW9AAo4RD/9Wp1dc6WpYu1kMx7jPessYBC5x5uRHAxI39U0bTqxnS7ze23cPgLx9l/kf5S2kWV7ieAj/lX765kcjXhJz3JZyTM1PvSCvdUZDun7gPfpBZe2TRxsDIDlKzr1tkI8wW/xpqfYw/kCYmsYrBODZrgqGtpcQpEjmFdIHanHZnj3DgLi8CK1lsNlw1UjfLBPO9yPLING9zNEl8bWA==&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16 21:32:58^_^ProtocalOptParams:alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json^_^ApplicationParams:biz_content={"out_trade_no":"201216GAADDMBRS8"}^_^25ms,11774ms,93ms
2020-12-16 21:45:26 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 21:45:27 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 25660 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 21:45:27 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 21:45:30 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 21:45:30 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 21:45:30 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 53ms. Found 0 repository interfaces.
2020-12-16 21:45:30 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 21:45:31 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$db0c1ff5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 21:45:32 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 21:45:32 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 5326 ms
2020-12-16 21:45:36 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 21:45:36 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 21:45:37 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 21:45:37 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 21:45:37 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 21:45:37 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 21:45:37 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 6f120a25-9f04-4422-b45f-74feff48e2c9

2020-12-16 21:45:37 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4300e240, org.springframework.security.web.context.SecurityContextPersistenceFilter@46d1b59, org.springframework.security.web.header.HeaderWriterFilter@22fb9a2c, org.springframework.security.web.authentication.logout.LogoutFilter@fabef2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30fbc23, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44384b4a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f409872, org.springframework.security.web.session.SessionManagementFilter@54463380, org.springframework.security.web.access.ExceptionTranslationFilter@1b3bec6c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@794c5f5e]
2020-12-16 21:45:37 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 21:45:37 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 21:45:38 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 21:45:38 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 21:45:38 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 21:45:38 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 21:45:38 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 12.316 seconds (JVM running for 15.113)
2020-12-16 21:45:52 下午 [Thread: http-nio-8080-exec-4][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 21:45:52 下午 [Thread: http-nio-8080-exec-4][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 24 ms
2020-12-16 21:45:53 下午 [Thread: http-nio-8080-exec-4][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 21:45:53 下午 [Thread: http-nio-8080-exec-4][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 21:45:53 下午 [Thread: http-nio-8080-exec-4][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 21:45:53 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 21:45:53 CST 2020时使用参数[Ljava.lang.Object;@77fd2312[{CommentBo(itemId=nut-1005, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@54a9b56c，共耗时305毫秒------
2020-12-16 21:45:53 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 21:45:53 CST 2020时使用参数[Ljava.lang.Object;@7a092648[{nut-1005}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】野生开心果 养生补脑最佳零食, sellCounts=953, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/nut-1005/img1.png"><img src="http://122.152.205.72:88/foodie/nut-1005/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/nut-1005/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/nut-1005/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=nut-1005-spec-1, name=甜, priceDiscount=8640, priceNormal=9600, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=nut-1005-spec-2, name=辣, priceDiscount=7680, priceNormal=9600, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=nut-1005-spec-3, name=原味, priceDiscount=9600, priceNormal=9600, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时324毫秒------
2020-12-16 21:45:53 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 21:45:53 CST 2020时使用参数[Ljava.lang.Object;@31b022cd[{nut-1005}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时329毫秒------
2020-12-16 21:46:05 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 21:46:05 CST 2020时使用参数[Ljava.lang.Object;@1dab8b87[{{nut-1005-spec-1}}]调用,并得到了结果[ShopCartVo(specId=nut-1005-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/nut-1005/img1.png, itemName=【天天吃货】野生开心果 养生补脑最佳零食, specName=甜, priceNormal=9600, priceDiscount=8640)]，共耗时52毫秒------
2020-12-16 21:46:07 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 21:46:07 CST 2020时使用参数[Ljava.lang.Object;@15bf448f[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时14毫秒------
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@57617d11[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@54dd4967，共耗时2毫秒------
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@28a930f[{[nut-1005-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@7bd4d881]，共耗时19毫秒------
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@37566be8[{nut-1005}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@611294e6，共耗时4毫秒------
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@7a154339[{nut-1005}]调用,并得到了结果top.chris.shop.pojo.Items@7e986eb8，共耗时2毫秒------
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@da95a0e[{top.chris.shop.pojo.ItemsSpec@7bd4d881}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@359c9b22[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=nut-1005-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216GG0NMT69YW，共耗时55毫秒------
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@181bb9fe[{201216GG0NMT69YW}]调用,并得到了结果top.chris.shop.pojo.Orders@7d1a7480，共耗时6毫秒------
2020-12-16 21:46:09 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@2072c0f4[{201216GG0NMT69YW}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@768000ad]，共耗时3毫秒------
2020-12-16 21:46:10 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 21:46:09 CST 2020时使用参数[Ljava.lang.Object;@2de9591f[{20121488980857028608,201216GG0NMT69YW}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=b7U9Zw5FoQvRO%2FynWW4q15ukUZtes2rIYvnkuR4FpuJQ5c2%2B4RrDFSPakXAz7POIdkZ5Q%2FrtHfl02nUUJVbbGS6XFHqIb%2FfvizeXQYQY6m1k8HNROLPIHgPB9hISg6y6uhuX7dV2iR5piOQUzavgtZSKFe8VHXxlmMimFkci4rZDpUaNvuJ%2BOKAvXXiSSE3KTfwxj75HQvBu2iVmiNgDRMLRXrYyBuzqrjNcHEmfaPosBeycbcKm7SY71YNnAfrxOSsWHMg1jKUFm0SgEESst1lqFrhlexOUrPenP13F5VAiswc1RrhPjXxNjOQJQpHnJOdKGy6R3WaLqu481B%2B48Q%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+21%3A46%3A09&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216GG0NMT69YW&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】野生开心果 养生补脑最佳零食  &quot;,&quot;total_amount&quot;:&quot;96&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1052毫秒------
2020-12-16 21:48:12 下午 [Thread: http-nio-8080-exec-9][ Class:sdk.biz.err >> Method: com.alipay.api.internal.util.AlipayLogger.logBizSummary(AlipayLogger.java:366) ]
INFO:Summary^_^10000^_^null^_^ProtocalMustParams:charset=utf-8&method=alipay.trade.query&sign=avSAenDRaHjlj3KdizyY38GPRzuvF95qhCqsk55c8Bk0ARluyGQpHGrL/oA5rVZs0GrHaENQEQxBQG+74r0Be9Rn37S3YE5tBRFr7PQAbjtQ3OGoclALgVWBNizftDz4lIsQSSLRXT8n/fi+nIECi62mr36vJbSazmSKLCwBYxmzrsFztdMBn5eOJjFbpHsHcxrr2LBGz8N3soj85H9tPYO39EwMhbvN47iZ1Vxn9POTiDI0UMzk6+CNstux7jh7RMOS+MrS0vOyBBC6ncgLvyHaD1M6AQjFMY3DdACX+ZU/oTJ/7XHaHukq3xtEhSkzv5TP3ITKnUe1BuZQ/DupHQ==&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16 21:48:12^_^ProtocalOptParams:alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json^_^ApplicationParams:biz_content={"out_trade_no":"201216GG0NMT69YW"}^_^25ms,595ms,17ms
2020-12-16 23:09:51 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 23:09:51 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 16580 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 23:09:51 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 23:09:53 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 23:09:53 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 23:09:53 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2020-12-16 23:09:54 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 23:09:54 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$be17685d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 23:09:55 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 23:09:55 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3616 ms
2020-12-16 23:09:59 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 23:10:00 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 23:10:00 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 23:10:00 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 23:10:00 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 23:10:00 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 23:10:00 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 68c78444-9d83-424c-9609-4eeca97ed93f

2020-12-16 23:10:01 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32dcfeea, org.springframework.security.web.context.SecurityContextPersistenceFilter@507049f2, org.springframework.security.web.header.HeaderWriterFilter@7493d937, org.springframework.security.web.authentication.logout.LogoutFilter@7b7068d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a4c98d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38bc5ac0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@738a815c, org.springframework.security.web.session.SessionManagementFilter@2347b7af, org.springframework.security.web.access.ExceptionTranslationFilter@451816fd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4536a715]
2020-12-16 23:10:01 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 23:10:01 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 23:10:01 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 23:10:01 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 23:10:01 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 23:10:01 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 23:10:01 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 10.386 seconds (JVM running for 12.169)
2020-12-16 23:11:48 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 23:11:49 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 10220 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 23:11:49 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 23:11:50 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 23:11:50 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 23:11:50 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 23:11:50 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 23:11:51 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$438ca1da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 23:11:51 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 23:11:52 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2932 ms
2020-12-16 23:11:54 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 23:11:54 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 23:11:54 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 23:11:54 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 23:11:54 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 23:11:54 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 23:11:55 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 059fb6aa-d0a5-43ec-a140-a00193e7476b

2020-12-16 23:11:55 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6136e1fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@2864f887, org.springframework.security.web.header.HeaderWriterFilter@9e33a6a, org.springframework.security.web.authentication.logout.LogoutFilter@21527b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ed31735, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fbb1144, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1736c1e4, org.springframework.security.web.session.SessionManagementFilter@19bf47fc, org.springframework.security.web.access.ExceptionTranslationFilter@3b8507df, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47f2c722]
2020-12-16 23:11:55 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 23:11:55 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 23:11:55 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 23:11:55 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 23:11:55 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 23:11:55 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 23:11:55 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.322 seconds (JVM running for 8.867)
2020-12-16 23:12:07 下午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 23:12:07 下午 [Thread: http-nio-8080-exec-3][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 10 ms
2020-12-16 23:12:07 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 23:12:07 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 23:12:07 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 23:12:07 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 23:12:07 CST 2020时使用参数[Ljava.lang.Object;@153ffea5[{CommentBo(itemId=nut-1006, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@33d31266，共耗时379毫秒------
2020-12-16 23:12:07 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 23:12:07 CST 2020时使用参数[Ljava.lang.Object;@623f1532[{nut-1006}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】野生腰果 养生补脑最佳零食, sellCounts=560, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/nut-1006/img1.png"><img src="http://122.152.205.72:88/foodie/nut-1006/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/nut-1006/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/nut-1006/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-1, name=甜, priceDiscount=5220, priceNormal=5800, stock=257, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-2, name=辣, priceDiscount=4640, priceNormal=5800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=nut-1006-spec-3, name=原味, priceDiscount=5800, priceNormal=5800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时398毫秒------
2020-12-16 23:12:07 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 23:12:07 CST 2020时使用参数[Ljava.lang.Object;@6671e2fd[{nut-1006}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时387毫秒------
2020-12-16 23:12:11 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 23:12:11 CST 2020时使用参数[Ljava.lang.Object;@3821ab59[{{nut-1006-spec-1}}]调用,并得到了结果[ShopCartVo(specId=nut-1006-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/nut-1006/img1.png, itemName=【天天吃货】野生腰果 养生补脑最佳零食, specName=甜, priceNormal=5800, priceDiscount=5220)]，共耗时29毫秒------
2020-12-16 23:12:14 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 23:12:14 CST 2020时使用参数[Ljava.lang.Object;@306ea85e[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时13毫秒------
2020-12-16 23:12:23 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 23:12:23 CST 2020时使用参数[Ljava.lang.Object;@11e0986a[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@5bc1958c，共耗时4毫秒------
2020-12-16 23:12:23 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 23:12:23 CST 2020时使用参数[Ljava.lang.Object;@6bafba12[{[nut-1006-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@5821488b]，共耗时31毫秒------
2020-12-16 23:12:23 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 23:12:23 CST 2020时使用参数[Ljava.lang.Object;@793a5b37[{nut-1006}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@6fd31128，共耗时3毫秒------
2020-12-16 23:12:23 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 23:12:23 CST 2020时使用参数[Ljava.lang.Object;@122b84bf[{nut-1006}]调用,并得到了结果top.chris.shop.pojo.Items@39e3962e，共耗时2毫秒------
2020-12-16 23:12:23 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 23:12:23 CST 2020时使用参数[Ljava.lang.Object;@2552dff2[{top.chris.shop.pojo.ItemsSpec@5821488b}]调用,并得到了结果1，共耗时9毫秒------
2020-12-16 23:12:23 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 23:12:23 CST 2020时使用参数[Ljava.lang.Object;@4ef6ca29[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=nut-1006-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216HGPW4RG6RP，共耗时115毫秒------
2020-12-16 23:12:23 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 23:12:23 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 23:12:23 CST 2020时使用参数[Ljava.lang.Object;@3155e152[{<null>}]调用,并得到了结果null，共耗时2毫秒------
2020-12-16 23:12:24 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 23:12:23 CST 2020时使用参数[Ljava.lang.Object;@7ac2f70f[{<null>}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@5ba604f6, top.chris.shop.pojo.OrderItems@43aeb2a1, top.chris.shop.pojo.OrderItems@63299454, top.chris.shop.pojo.OrderItems@ebe6db1, top.chris.shop.pojo.OrderItems@65544924, top.chris.shop.pojo.OrderItems@53d9d495, top.chris.shop.pojo.OrderItems@7c7d618e, top.chris.shop.pojo.OrderItems@1d35855, top.chris.shop.pojo.OrderItems@46892c22, top.chris.shop.pojo.OrderItems@5b69251a, top.chris.shop.pojo.OrderItems@4c8f5ee8, top.chris.shop.pojo.OrderItems@5705b6dc, top.chris.shop.pojo.OrderItems@58e27822, top.chris.shop.pojo.OrderItems@4a31d7d1, top.chris.shop.pojo.OrderItems@7c7fb861, top.chris.shop.pojo.OrderItems@6365264, top.chris.shop.pojo.OrderItems@4dde09e8, top.chris.shop.pojo.OrderItems@995d0dd, top.chris.shop.pojo.OrderItems@8a8cd3e, top.chris.shop.pojo.OrderItems@3c391b3d, top.chris.shop.pojo.OrderItems@115c41b, top.chris.shop.pojo.OrderItems@2621ffdc, top.chris.shop.pojo.OrderItems@68ae171b, top.chris.shop.pojo.OrderItems@1cba19c0, top.chris.shop.pojo.OrderItems@33a03350, top.chris.shop.pojo.OrderItems@1ad6f5e7, top.chris.shop.pojo.OrderItems@2583f69, top.chris.shop.pojo.OrderItems@4ee052fb, top.chris.shop.pojo.OrderItems@7ce8c2c4, top.chris.shop.pojo.OrderItems@51bc6973, top.chris.shop.pojo.OrderItems@12dca75a, top.chris.shop.pojo.OrderItems@5e675870, top.chris.shop.pojo.OrderItems@64235f9a, top.chris.shop.pojo.OrderItems@56e6559c, top.chris.shop.pojo.OrderItems@21f7ce6d, top.chris.shop.pojo.OrderItems@45b7a6fb, top.chris.shop.pojo.OrderItems@3b16fe58, top.chris.shop.pojo.OrderItems@5f380613, top.chris.shop.pojo.OrderItems@40a32f3f, top.chris.shop.pojo.OrderItems@38dbd9ae, top.chris.shop.pojo.OrderItems@34b314d3, top.chris.shop.pojo.OrderItems@2b2484c8, top.chris.shop.pojo.OrderItems@72a79c44, top.chris.shop.pojo.OrderItems@14d73d17, top.chris.shop.pojo.OrderItems@386eb6d2, top.chris.shop.pojo.OrderItems@37e377d3, top.chris.shop.pojo.OrderItems@796898d7, top.chris.shop.pojo.OrderItems@547a2d68, top.chris.shop.pojo.OrderItems@19efd913, top.chris.shop.pojo.OrderItems@351e6812, top.chris.shop.pojo.OrderItems@88df046, top.chris.shop.pojo.OrderItems@d199d52, top.chris.shop.pojo.OrderItems@6a59faa3, top.chris.shop.pojo.OrderItems@2c415102, top.chris.shop.pojo.OrderItems@4ba99b0c, top.chris.shop.pojo.OrderItems@a9b7c26, top.chris.shop.pojo.OrderItems@2fb21334, top.chris.shop.pojo.OrderItems@95d8e81, top.chris.shop.pojo.OrderItems@eab155d, top.chris.shop.pojo.OrderItems@5f0022e2, top.chris.shop.pojo.OrderItems@6014a185, top.chris.shop.pojo.OrderItems@5581280, top.chris.shop.pojo.OrderItems@530ffe8b, top.chris.shop.pojo.OrderItems@dc6c13a, top.chris.shop.pojo.OrderItems@489b518e, top.chris.shop.pojo.OrderItems@d12860f, top.chris.shop.pojo.OrderItems@2145da80, top.chris.shop.pojo.OrderItems@1ab11083, top.chris.shop.pojo.OrderItems@834357a, top.chris.shop.pojo.OrderItems@118fe88d, top.chris.shop.pojo.OrderItems@1e91b1e6, top.chris.shop.pojo.OrderItems@cb68fbf, top.chris.shop.pojo.OrderItems@2580f4b6, top.chris.shop.pojo.OrderItems@4ba5ab0b, top.chris.shop.pojo.OrderItems@58283d18, top.chris.shop.pojo.OrderItems@605b9ad5, top.chris.shop.pojo.OrderItems@42dcf72c, top.chris.shop.pojo.OrderItems@2447e18f, top.chris.shop.pojo.OrderItems@3d1ec8e2, top.chris.shop.pojo.OrderItems@12f70a6, top.chris.shop.pojo.OrderItems@246f9238, top.chris.shop.pojo.OrderItems@3fbf54a3, top.chris.shop.pojo.OrderItems@742dd26e, top.chris.shop.pojo.OrderItems@e7d260d, top.chris.shop.pojo.OrderItems@565b8ba8, top.chris.shop.pojo.OrderItems@1384c78c, top.chris.shop.pojo.OrderItems@9a0d930, top.chris.shop.pojo.OrderItems@6e0acb47, top.chris.shop.pojo.OrderItems@64060be5, top.chris.shop.pojo.OrderItems@518b184e, top.chris.shop.pojo.OrderItems@5e6d2216, top.chris.shop.pojo.OrderItems@66059a6f, top.chris.shop.pojo.OrderItems@3208fc69, top.chris.shop.pojo.OrderItems@3b48cb0e, top.chris.shop.pojo.OrderItems@c8233e3, top.chris.shop.pojo.OrderItems@469e06fe, top.chris.shop.pojo.OrderItems@338041f0, top.chris.shop.pojo.OrderItems@4e6dec35, top.chris.shop.pojo.OrderItems@536dc330, top.chris.shop.pojo.OrderItems@65f28655, top.chris.shop.pojo.OrderItems@544cd4da, top.chris.shop.pojo.OrderItems@75e18622, top.chris.shop.pojo.OrderItems@4828bfed, top.chris.shop.pojo.OrderItems@39994893, top.chris.shop.pojo.OrderItems@bc1b17e, top.chris.shop.pojo.OrderItems@7268f6b2, top.chris.shop.pojo.OrderItems@7f32f8c5, top.chris.shop.pojo.OrderItems@c9cea60, top.chris.shop.pojo.OrderItems@ad0f0cc, top.chris.shop.pojo.OrderItems@3f385a42, top.chris.shop.pojo.OrderItems@57a469b0, top.chris.shop.pojo.OrderItems@3c0056ce, top.chris.shop.pojo.OrderItems@315b8712, top.chris.shop.pojo.OrderItems@4ccc3131, top.chris.shop.pojo.OrderItems@38d128f1, top.chris.shop.pojo.OrderItems@6d9bf03, top.chris.shop.pojo.OrderItems@6bd7dbdd, top.chris.shop.pojo.OrderItems@463f3a2f, top.chris.shop.pojo.OrderItems@771804b9, top.chris.shop.pojo.OrderItems@3c729cfe]，共耗时27毫秒------
2020-12-16 23:14:17 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 23:14:18 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 27100 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 23:14:18 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 23:14:19 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 23:14:19 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 23:14:19 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces.
2020-12-16 23:14:19 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 23:14:20 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c31d000] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 23:14:20 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 23:14:21 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2941 ms
2020-12-16 23:14:23 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 23:14:23 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 23:14:24 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 23:14:24 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 23:14:24 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 23:14:24 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 23:14:24 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 4396c606-ecab-4ec1-bcfd-c88500ba7991

2020-12-16 23:14:24 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e58f697, org.springframework.security.web.context.SecurityContextPersistenceFilter@223967ea, org.springframework.security.web.header.HeaderWriterFilter@36b53f08, org.springframework.security.web.authentication.logout.LogoutFilter@c497a55, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@559d19c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2bdb5e0f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44384b4a, org.springframework.security.web.session.SessionManagementFilter@8ac12e6, org.springframework.security.web.access.ExceptionTranslationFilter@639cb788, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@85ab964]
2020-12-16 23:14:24 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 23:14:24 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 23:14:24 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 23:14:24 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 23:14:24 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 23:14:24 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 23:14:24 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.332 seconds (JVM running for 9.029)
2020-12-16 23:14:24 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 23:14:24 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 10 ms
2020-12-16 23:14:36 下午 [Thread: http-nio-8080-exec-7][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 23:14:36 下午 [Thread: http-nio-8080-exec-7][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 23:14:36 下午 [Thread: http-nio-8080-exec-7][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 23:14:36 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 23:14:36 CST 2020时使用参数[Ljava.lang.Object;@5b5a2184[{201216HGPW4RG6RP}]调用,并得到了结果top.chris.shop.pojo.Orders@4587c8a6，共耗时70毫秒------
2020-12-16 23:14:36 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 23:14:36 CST 2020时使用参数[Ljava.lang.Object;@1e038fd0[{201216HGPW4RG6RP}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@711e66d1]，共耗时46毫秒------
2020-12-16 23:14:37 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 23:14:36 CST 2020时使用参数[Ljava.lang.Object;@9dcd00e[{20121488980857028608,201216HGPW4RG6RP}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=DEKk209cHFb0JuwqFHTxoIDs7mFxP8xZOEex6vQ63aJAV4jDSaKCHEYiwtdF88GWBUEBqHXVFMFasuW%2BWbb%2BSeukuMsHIa5aJ5CAVIGPUz2dA7GbUOI3z2SyPHSUG%2BTkJrBRusgWd%2Fk6JdVoMX0kkCUcB5r27dGagVG5OceHmY6gsSNwHBGnqqIAjPR%2F3n6VjGQQlkZ2%2FxDEAKIB67O8EVWs4jtuSd03Iy7NshP27kVmILdDWb1lO5Sej5XgcSkot%2F1gdBuM6%2FAeNTnzwgzohxLnoeG8j0y8nfYig4%2Ffnt6TvoN%2FXSSI5Q%2Fyxe%2BOD4OuD5KG4UhhOlAU9uuTU1Yh4w%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+23%3A14%3A36&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216HGPW4RG6RP&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】野生腰果 养生补脑最佳零食  &quot;,&quot;total_amount&quot;:&quot;62&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时999毫秒------
2020-12-16 23:15:37 下午 [Thread: http-nio-8080-exec-7][ Class:sdk.biz.err >> Method: com.alipay.api.internal.util.AlipayLogger.logBizSummary(AlipayLogger.java:366) ]
INFO:Summary^_^10000^_^null^_^ProtocalMustParams:charset=utf-8&method=alipay.trade.query&sign=fhFHmsL7AeqQqVbk4A2cb+9K0J+eHRu8EQcOZJctsviNYwXV5Aq+qPvpEko470st8qH22ZBR5InsyOng3VYAJCJEnHZ9M80H3PiW2z35SuCLLIEOPOEGiWaLZV1dec0rJo+4HNfwS6SM5e/UzoSk8WN0+XVjvseRab0FHsv0FQrPstBQhBaOxWhPlkGHRGWQf9IPQDAh/RxR9uyBR1ADz6J+nnufNNu4+tMbhY2+Le3NtcJ9U9T5Kd/1nMiKpnzccvNzCsPWmJJq9uXcH+clGyjLb9zjyRTNa2yTcTh766XEtwbpCivM5tB7Fn/smTS/X7tSCrM9Ba0rzHOEU7psbw==&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16 23:15:25^_^ProtocalOptParams:alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json^_^ApplicationParams:biz_content={"out_trade_no":"201216HGPW4RG6RP"}^_^19ms,12351ms,59ms
2020-12-16 23:15:37 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.updateOrderStatusByOrderId在Wed Dec 16 23:15:37 CST 2020时使用参数[Ljava.lang.Object;@20428e3d[{OrderStatusBo(orderId=201216HGPW4RG6RP, orderStatus=20, payTime=Wed Dec 16 23:15:37 CST 2020, deliverTime=null, successTime=null, closeTime=null, commentTime=null)}]调用,并得到了结果1，共耗时24毫秒------
2020-12-16 23:15:37 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:37) ]
ERROR:------方法top.chris.shop.service.impl.PayServiceImpl.callBackAndUpdateOrderStatus在Wed Dec 16 23:15:25 CST 2020时使用参数[Ljava.lang.Object;@5510a160[{SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@324f7115],org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@6482207}]调用,并得到了结果1，共耗时12522毫秒------
2020-12-16 23:23:17 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 23:23:17 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 27764 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 23:23:17 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 23:23:19 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 23:23:19 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 23:23:19 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces.
2020-12-16 23:23:19 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 23:23:19 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dfe19409] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 23:23:20 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 23:23:20 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 2632 ms
2020-12-16 23:23:22 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 23:23:22 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 23:23:23 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 23:23:23 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 23:23:23 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 23:23:23 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 23:23:23 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: b7ee1ec4-f871-4146-80c2-35b0ca844e9e

2020-12-16 23:23:23 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17b6ad97, org.springframework.security.web.context.SecurityContextPersistenceFilter@72b40f87, org.springframework.security.web.header.HeaderWriterFilter@3b8507df, org.springframework.security.web.authentication.logout.LogoutFilter@8b670c0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41bb1f09, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2026fbff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44fb6ebd, org.springframework.security.web.session.SessionManagementFilter@a3b858f, org.springframework.security.web.access.ExceptionTranslationFilter@59e082f8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@667797f]
2020-12-16 23:23:23 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 23:23:23 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 23:23:23 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 23:23:23 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 23:23:23 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 23:23:24 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 23:23:24 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 7.009 seconds (JVM running for 8.696)
2020-12-16 23:23:40 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 23:23:40 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 10 ms
2020-12-16 23:23:41 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 23:23:41 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 23:23:41 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 23:23:41 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.searchItemsLikeName在Wed Dec 16 23:23:41 CST 2020时使用参数[Ljava.lang.Object;@5fd024b2[{SearchItemsBo(keywords=天, catId=null, sort=k, page=1, pageSize=20)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@7ffb351f，共耗时343毫秒------
2020-12-16 23:23:43 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 23:23:43 CST 2020时使用参数[Ljava.lang.Object;@11f83eb[{meat-1006}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时7毫秒------
2020-12-16 23:23:43 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 23:23:43 CST 2020时使用参数[Ljava.lang.Object;@358b4169[{CommentBo(itemId=meat-1006, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@12be5b48，共耗时7毫秒------
2020-12-16 23:23:43 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 23:23:43 CST 2020时使用参数[Ljava.lang.Object;@409c6bba[{meat-1006}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】烤肠 猪肉牛肉鸡肉 肉类最佳零食, sellCounts=634, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/meat-1006/img1.png"><img src="http://122.152.205.72:88/foodie/meat-1006/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/meat-1006/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/meat-1006/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=meat-1006-spec-1, name=鸡肉, priceDiscount=14310, priceNormal=15900, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=meat-1006-spec-2, name=牛肉, priceDiscount=12720, priceNormal=15900, stock=304, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=meat-1006-spec-3, name=猪肉, priceDiscount=15900, priceNormal=15900, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时19毫秒------
2020-12-16 23:23:46 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 23:23:46 CST 2020时使用参数[Ljava.lang.Object;@7452bcdf[{{meat-1006-spec-1}}]调用,并得到了结果[ShopCartVo(specId=meat-1006-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/meat-1006/img1.png, itemName=【天天吃货】烤肠 猪肉牛肉鸡肉 肉类最佳零食, specName=鸡肉, priceNormal=15900, priceDiscount=14310)]，共耗时15毫秒------
2020-12-16 23:23:48 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 23:23:48 CST 2020时使用参数[Ljava.lang.Object;@af9e772[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=二幅, mobile=18000000000, province=北京, district=东城区, detail=东城区二五四路, city=北京, isDefault=1)]，共耗时12毫秒------
2020-12-16 23:24:24 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.web.controller.AddressController >> Method: top.chris.shop.web.controller.AddressController.update(AddressController.java:46) ]
INFO:top.chris.shop.pojo.bo.AddressBo@1a9aeaa9[addressId=2012169WN0HRW094,userId=20121488980857028608,city=成都,detail=成都五号路口809房,district=金牛区,mobile=18000000000,province=四川,receiver=张国民,updatedTime=<null>,isDefault=<null>]
2020-12-16 23:24:24 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.service.impl.AddressServiceImpl >> Method: top.chris.shop.service.impl.AddressServiceImpl.updateUserAddress(AddressServiceImpl.java:78) ]
INFO:top.chris.shop.pojo.UserAddress@171a7e9a[
  id=2012169WN0HRW094
  userId=20121488980857028608
  receiver=张国民
  mobile=18000000000
  province=四川
  city=成都
  district=金牛区
  detail=成都五号路口809房
  extand=<null>
  isDefault=0
  createdTime=Wed Dec 16 13:50:43 CST 2020
  updatedTime=Wed Dec 16 23:24:24 CST 2020
]
2020-12-16 23:24:24 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.updateUserAddress在Wed Dec 16 23:24:24 CST 2020时使用参数[Ljava.lang.Object;@727950fb[{AddressBo(addressId=2012169WN0HRW094, userId=20121488980857028608, city=成都, detail=成都五号路口809房, district=金牛区, mobile=18000000000, province=四川, receiver=张国民, updatedTime=null, isDefault=null)}]调用,并得到了结果1，共耗时13毫秒------
2020-12-16 23:24:24 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 23:24:24 CST 2020时使用参数[Ljava.lang.Object;@209a28de[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=张国民, mobile=18000000000, province=四川, district=金牛区, detail=成都五号路口809房, city=成都, isDefault=0)]，共耗时7毫秒------
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@2f27f772[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@6607072，共耗时2毫秒------
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@679e6f9a[{[meat-1006-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@9219b6e]，共耗时16毫秒------
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@48bcce0d[{meat-1006}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@5488745b，共耗时4毫秒------
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@4e72b28d[{meat-1006}]调用,并得到了结果top.chris.shop.pojo.Items@5d760820，共耗时3毫秒------
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@56697942[{top.chris.shop.pojo.ItemsSpec@9219b6e}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@16f0bac4[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=meat-1006-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216HNS7Z6CYCH，共耗时50毫秒------
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@479141b9[{201216HNS7Z6CYCH}]调用,并得到了结果top.chris.shop.pojo.Orders@6b365463，共耗时5毫秒------
2020-12-16 23:24:33 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@52547497[{201216HNS7Z6CYCH}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@1f857bed]，共耗时6毫秒------
2020-12-16 23:24:34 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 23:24:33 CST 2020时使用参数[Ljava.lang.Object;@269ae7ab[{20121488980857028608,201216HNS7Z6CYCH}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=RDdBU7s6nRR7IS2OfE1o6tGg2ETTr0OcLnO%2FVdKmaLldBpHyFYy3PcsaPS5xk8JsdO9GtWdqKZ%2FlzgsPWjDXUylgezoPwBUb5UOsNsvt0s56vi0QmgmFdyOYmNkNp40TT6a4mszQUMAJRo7Te7STD%2BMyp4uAfz10LP3O8PnQDMcoWzu2tFy%2B3GOlCIXTwCV9GDc7ZlLoRPPruStLD6%2BhDPiSzrnoW1PbqjpzFhdQupxn9JOH6IB0kOEqWerQ4NISEtiz5JKVgTB%2BnUJolYEgqUa6JinNy7iwJBU4c6fa0JyDxv1TKYll6PJ7olRDe90wSwekfe1PXQ8d4DPdSsMwHg%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+23%3A24%3A33&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216HNS7Z6CYCH&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】烤肠 猪肉牛肉鸡肉 肉类最佳零食  &quot;,&quot;total_amount&quot;:&quot;153&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1032毫秒------
2020-12-16 23:25:16 下午 [Thread: http-nio-8080-exec-8][ Class:sdk.biz.err >> Method: com.alipay.api.internal.util.AlipayLogger.logBizSummary(AlipayLogger.java:366) ]
INFO:Summary^_^10000^_^null^_^ProtocalMustParams:charset=utf-8&method=alipay.trade.query&sign=PgldM0E2v96hNr2c3cGmzluIo4NE+wRftGxmmF29aD8XmsZZhrG/i2IoyeNR0ZpcXr83/I6Eyo4ay4wGcfNBQmQyoUBj8ErOaEY/HbcRom10Hnf349nNtMASZ24KPNmupOBtsL+ATq3POg2DHFUxNd/gE0TzOYyBHZZAbNzpEp0kYLvVujFQw7Twl/At72vM4uTMplkPDHRFP2xg1x+lmAGnfh/RPgD9hmROBdBTJkLxr8PthwhNyxlOo/IQ8JCC3C5z3u5Lln0+rizDN0T7eDqoasr/jEYXS/dVb/Xt69t4axBzEskSnTtBiGmlvqQBC2T0X5357Js2iHFSCJfMQw==&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16 23:25:15^_^ProtocalOptParams:alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json^_^ApplicationParams:biz_content={"out_trade_no":"201216HNS7Z6CYCH"}^_^22ms,490ms,18ms
2020-12-16 23:25:16 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.updateOrderStatusByOrderId在Wed Dec 16 23:25:16 CST 2020时使用参数[Ljava.lang.Object;@6c1a2c2[{OrderStatusBo(orderId=201216HNS7Z6CYCH, orderStatus=20, payTime=Wed Dec 16 23:25:16 CST 2020, deliverTime=null, successTime=null, closeTime=null, commentTime=null)}]调用,并得到了结果1，共耗时3毫秒------
2020-12-16 23:25:16 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.callBackAndUpdateOrderStatus在Wed Dec 16 23:25:15 CST 2020时使用参数[Ljava.lang.Object;@2267fa47[{SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@308a9f94],org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3b56ecf5}]调用,并得到了结果1，共耗时537毫秒------
2020-12-16 23:26:58 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 23:26:58 CST 2020时使用参数[Ljava.lang.Object;@6065d005[{tea-1002}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】精品龙井茶 居家必备 喝茶最佳, sellCounts=985, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/tea-1002/img1.png"><img src="http://122.152.205.72:88/foodie/tea-1002/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/tea-1002/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/tea-1002/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-1, name=散装, priceDiscount=18720, priceNormal=20800, stock=258, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-2, name=盒装, priceDiscount=16640, priceNormal=20800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-3, name=试吃装, priceDiscount=20800, priceNormal=20800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时8毫秒------
2020-12-16 23:26:58 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 23:26:58 CST 2020时使用参数[Ljava.lang.Object;@235eddf3[{CommentBo(itemId=tea-1002, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@3393e4f，共耗时5毫秒------
2020-12-16 23:26:58 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 23:26:58 CST 2020时使用参数[Ljava.lang.Object;@12df7bea[{tea-1002}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时8毫秒------
2020-12-16 23:27:00 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 23:27:00 CST 2020时使用参数[Ljava.lang.Object;@5f8251e2[{{tea-1002-spec-1}}]调用,并得到了结果[ShopCartVo(specId=tea-1002-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/tea-1002/img1.png, itemName=【天天吃货】精品龙井茶 居家必备 喝茶最佳, specName=散装, priceNormal=20800, priceDiscount=18720)]，共耗时3毫秒------
2020-12-16 23:27:02 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 23:27:02 CST 2020时使用参数[Ljava.lang.Object;@35a4a977[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=张国民, mobile=18000000000, province=四川, district=金牛区, detail=成都五号路口809房, city=成都, isDefault=0)]，共耗时4毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@363aeb6f[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@1272d5a9，共耗时2毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@30c6186c[{[tea-1002-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@51c6fc88]，共耗时1毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@71e6883[{tea-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@79b1574，共耗时2毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@595e2a98[{tea-1002}]调用,并得到了结果top.chris.shop.pojo.Items@2df00b40，共耗时2毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@6aa550f1[{top.chris.shop.pojo.ItemsSpec@51c6fc88}]调用,并得到了结果1，共耗时2毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@1b7ea725[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=tea-1002-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216HPN9BX604H，共耗时16毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@11a9265a[{201216HPN9BX604H}]调用,并得到了结果top.chris.shop.pojo.Orders@36e76ce0，共耗时2毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@203c57d9[{201216HPN9BX604H}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@78ff2e72]，共耗时3毫秒------
2020-12-16 23:27:14 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 23:27:14 CST 2020时使用参数[Ljava.lang.Object;@75f2dde1[{20121488980857028608,201216HPN9BX604H}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=XWd06%2B%2FtrXNCBrQQvdzlSQbBle13M76qPMmloO5hm12ezxihkmzyy7RuzSiNFRRq0zvcS4LVQZzuMATVcPNT77GJ2BvUG4NPROx8ae05DLo%2FBDALSqXWpTDxkQ%2BTAEnwtrKobqBTYAmiLtT7Rrs14Cd6PEDAz0EIGMSkDbhZvtpPjmLIJh0B%2BPQ2T7wwjfD9raYwWBIwlka%2Bs0cqZmRFlrT%2Fbtg3QlGk4%2BTE6IaVvBWbBzth1N3pAHvbHGB4CleI0FbOBvihe0eTJ5wB%2BX2RHJAXlX1fxJl6oO21LE5zlQTwXiXkh15g3VcBhuWFq0cgVtmB5Uv2LLS7oWiyjMEv6A%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+23%3A27%3A14&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216HPN9BX604H&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】精品龙井茶 居家必备 喝茶最佳  &quot;,&quot;total_amount&quot;:&quot;197&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时30毫秒------
2020-12-16 23:27:17 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:27:17 CST 2020时使用参数[Ljava.lang.Object;@4c4a8445[{201216HPN9BX604H}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:27:20 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:27:20 CST 2020时使用参数[Ljava.lang.Object;@d5f8d97[{201216HPN9BX604H}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:27:23 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:27:23 CST 2020时使用参数[Ljava.lang.Object;@1ea20b7a[{201216HPN9BX604H}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:27:26 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:27:26 CST 2020时使用参数[Ljava.lang.Object;@5104a46b[{201216HPN9BX604H}]调用,并得到了结果10，共耗时6毫秒------
2020-12-16 23:27:29 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:27:29 CST 2020时使用参数[Ljava.lang.Object;@59c1a9a3[{201216HPN9BX604H}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:50:34 下午 [Thread: background-preinit][ Class:org.hibernate.validator.internal.util.Version >> Method: org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) ]
INFO:HV000001: Hibernate Validator 6.0.16.Final
2020-12-16 23:50:34 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) ]
INFO:Starting ShopMainApplication on DESKTOP-255B2FK with PID 14620 (D:\ForSpringBootProject\shop\shop-api-web\target\classes started by Chris in D:\ForSpringBootProject\shop)
2020-12-16 23:50:34 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) ]
INFO:No active profile set, falling back to default profiles: default
2020-12-16 23:50:36 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) ]
INFO:Multiple Spring Data modules found, entering strict repository configuration mode!
2020-12-16 23:50:36 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) ]
INFO:Bootstrapping Spring Data repositories in DEFAULT mode.
2020-12-16 23:50:36 下午 [Thread: main][ Class:org.springframework.data.repository.config.RepositoryConfigurationDelegate >> Method: org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) ]
INFO:Finished Spring Data repository scanning in 37ms. Found 0 repository interfaces.
2020-12-16 23:50:37 下午 [Thread: main][ Class:org.mybatis.spring.mapper.ClassPathMapperScanner >> Method: org.mybatis.logging.Logger.warn(Logger.java:44) ]
WARN:No MyBatis mapper was found in '[top.chris.shop]' package. Please check your configuration.
2020-12-16 23:50:37 下午 [Thread: main][ Class:org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker >> Method: org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) ]
INFO:Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ce659bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-16 23:50:37 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) ]
INFO:Tomcat initialized with port(s): 8080 (http)
2020-12-16 23:50:38 下午 [Thread: main][ Class:org.springframework.web.context.ContextLoader >> Method: org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) ]
INFO:Root WebApplicationContext: initialization completed in 3400 ms
2020-12-16 23:50:41 下午 [Thread: main][ Class:springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping >> Method: springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods(PropertySourcedRequestMappingHandlerMapping.java:69) ]
INFO:Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2020-12-16 23:50:41 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'applicationTaskExecutor'
2020-12-16 23:50:41 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020-12-16 23:50:41 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020-12-16 23:50:41 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeStaticCache(MapperCacheDisabler.java:60) ]
INFO:Clear tk.mybatis.mapper.version.VersionUtil CACHE cache.
2020-12-16 23:50:41 下午 [Thread: main][ Class:tk.mybatis.mapper.autoconfigure.MapperCacheDisabler >> Method: tk.mybatis.mapper.autoconfigure.MapperCacheDisabler.removeEntityHelperCache(MapperCacheDisabler.java:83) ]
INFO:Clear EntityHelper entityTableMap cache.
2020-12-16 23:50:42 下午 [Thread: main][ Class:org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration >> Method: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration.getOrDeducePassword(UserDetailsServiceAutoConfiguration.java:87) ]
INFO:

Using generated security password: 778c41fb-6b37-41e3-aaef-28a6027faf05

2020-12-16 23:50:42 下午 [Thread: main][ Class:org.springframework.security.web.DefaultSecurityFilterChain >> Method: org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) ]
INFO:Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76596288, org.springframework.security.web.context.SecurityContextPersistenceFilter@63f2e0b, org.springframework.security.web.header.HeaderWriterFilter@44384b4a, org.springframework.security.web.authentication.logout.LogoutFilter@32dcfeea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f8c3646, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52ca0ad4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d815fb7, org.springframework.security.web.session.SessionManagementFilter@1805383, org.springframework.security.web.access.ExceptionTranslationFilter@5d3f99d7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2aa6bbad]
2020-12-16 23:50:42 下午 [Thread: main][ Class:org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler >> Method: org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) ]
INFO:Initializing ExecutorService 'taskScheduler'
2020-12-16 23:50:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:160) ]
INFO:Context refreshed
2020-12-16 23:50:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper >> Method: springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.start(DocumentationPluginsBootstrapper.java:163) ]
INFO:Found 1 custom documentation plugin(s)
2020-12-16 23:50:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.scanners.ApiListingReferenceScanner >> Method: springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:41) ]
INFO:Scanning for api listing references
2020-12-16 23:50:42 下午 [Thread: main][ Class:springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader >> Method: springfox.documentation.spring.web.readers.parameter.ParameterDataTypeReader.apply(ParameterDataTypeReader.java:92) ]
WARN:Trying to infer dataType java.lang.String[]
2020-12-16 23:50:42 下午 [Thread: main][ Class:org.springframework.boot.web.embedded.tomcat.TomcatWebServer >> Method: org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) ]
INFO:Tomcat started on port(s): 8080 (http) with context path ''
2020-12-16 23:50:42 下午 [Thread: main][ Class:top.chris.shop.ShopMainApplication >> Method: org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) ]
INFO:Started ShopMainApplication in 8.497 seconds (JVM running for 10.057)
2020-12-16 23:51:02 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) ]
INFO:Initializing Servlet 'dispatcherServlet'
2020-12-16 23:51:02 下午 [Thread: http-nio-8080-exec-1][ Class:org.springframework.web.servlet.DispatcherServlet >> Method: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) ]
INFO:Completed initialization in 10 ms
2020-12-16 23:51:02 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) ]
INFO:DateSourceHikariCP - Starting...
2020-12-16 23:51:02 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.util.DriverDataSource >> Method: com.zaxxer.hikari.util.DriverDataSource.<init>(DriverDataSource.java:68) ]
WARN:Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
2020-12-16 23:51:02 下午 [Thread: http-nio-8080-exec-1][ Class:com.zaxxer.hikari.HikariDataSource >> Method: com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) ]
INFO:DateSourceHikariCP - Start completed.
2020-12-16 23:51:02 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.searchItemsLikeName在Wed Dec 16 23:51:02 CST 2020时使用参数[Ljava.lang.Object;@376544cb[{SearchItemsBo(keywords=天, catId=null, sort=k, page=1, pageSize=20)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@2386faf9，共耗时535毫秒------
2020-12-16 23:51:03 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 23:51:03 CST 2020时使用参数[Ljava.lang.Object;@4ee3ab0b[{tea-1002}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时10毫秒------
2020-12-16 23:51:03 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 23:51:03 CST 2020时使用参数[Ljava.lang.Object;@4470a820[{CommentBo(itemId=tea-1002, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@27b0d8d，共耗时7毫秒------
2020-12-16 23:51:03 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 23:51:03 CST 2020时使用参数[Ljava.lang.Object;@484aeab5[{tea-1002}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】精品龙井茶 居家必备 喝茶最佳, sellCounts=985, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/tea-1002/img1.png"><img src="http://122.152.205.72:88/foodie/tea-1002/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/tea-1002/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/tea-1002/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-1, name=散装, priceDiscount=18720, priceNormal=20800, stock=257, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-2, name=盒装, priceDiscount=16640, priceNormal=20800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=tea-1002-spec-3, name=试吃装, priceDiscount=20800, priceNormal=20800, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时20毫秒------
2020-12-16 23:51:06 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 23:51:06 CST 2020时使用参数[Ljava.lang.Object;@6b7ea4e1[{{tea-1002-spec-1}}]调用,并得到了结果[ShopCartVo(specId=tea-1002-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/tea-1002/img1.png, itemName=【天天吃货】精品龙井茶 居家必备 喝茶最佳, specName=散装, priceNormal=20800, priceDiscount=18720)]，共耗时9毫秒------
2020-12-16 23:51:09 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 23:51:09 CST 2020时使用参数[Ljava.lang.Object;@17be6908[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=张国民, mobile=18000000000, province=四川, district=金牛区, detail=成都五号路口809房, city=成都, isDefault=0)]，共耗时10毫秒------
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@674c3ab[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@2fb1d1f7，共耗时3毫秒------
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@1e766879[{[tea-1002-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@4b8ee472]，共耗时31毫秒------
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@17b956ad[{tea-1002}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@3aa1d183，共耗时3毫秒------
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@682c64ee[{tea-1002}]调用,并得到了结果top.chris.shop.pojo.Items@5cb58da1，共耗时2毫秒------
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@9369ed8[{top.chris.shop.pojo.ItemsSpec@4b8ee472}]调用,并得到了结果1，共耗时19毫秒------
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@53ee2428[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=tea-1002-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216K0NKG6ZN54，共耗时112毫秒------
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@3e1ed999[{201216K0NKG6ZN54}]调用,并得到了结果top.chris.shop.pojo.Orders@453d6b0b，共耗时9毫秒------
2020-12-16 23:51:17 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@15c89b83[{201216K0NKG6ZN54}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@2d27e30f]，共耗时8毫秒------
2020-12-16 23:51:19 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:34) ]
WARN:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 23:51:17 CST 2020时使用参数[Ljava.lang.Object;@55ee4e9c[{20121488980857028608,201216K0NKG6ZN54}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=hc%2BpH49n8pluto9j1iQr2bdPZkiYzwlFYlsXQpivqrS12T8CD%2Fu1zDtOuLc%2BS2ph0Zyh2vKMm4LM63tZ7U284QqVmsT7IrH1pStboSgapURjSMfl8JYtH9jYcbYw7baxfIRTfZEWlf9zTx1s9lbtb2p9SEBCq7hDljxVn9caaqDGxDO088cYctQ7yLF1gHnD1Mc1mmhfUMxh0U3CTUnuMxWnUFdIj%2FOBUrZ%2FwP8nxT6p21h54PSVqHD740yzhyAXB5NUeoe2GiT5S%2FQegNJKi%2FCQ%2FbEXBpIs5tekw%2BBjUmNJO8hm4CD1qinB8EnFj1rVEkDTZOJMhAVLGGddGt3vzw%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+23%3A51%3A18&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216K0NKG6ZN54&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】精品龙井茶 居家必备 喝茶最佳  &quot;,&quot;total_amount&quot;:&quot;197&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时1150毫秒------
2020-12-16 23:51:20 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:20 CST 2020时使用参数[Ljava.lang.Object;@5e4b794[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:51:23 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:23 CST 2020时使用参数[Ljava.lang.Object;@203fd8d1[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:51:26 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:26 CST 2020时使用参数[Ljava.lang.Object;@59f4e7f9[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:51:29 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:29 CST 2020时使用参数[Ljava.lang.Object;@3c467331[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:51:32 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:32 CST 2020时使用参数[Ljava.lang.Object;@2497ef5c[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:51:35 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:35 CST 2020时使用参数[Ljava.lang.Object;@1395bf9a[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:51:38 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:38 CST 2020时使用参数[Ljava.lang.Object;@3d73a389[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:51:41 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:41 CST 2020时使用参数[Ljava.lang.Object;@1cd54178[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时4毫秒------
2020-12-16 23:51:44 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:44 CST 2020时使用参数[Ljava.lang.Object;@37272276[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:51:47 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:47 CST 2020时使用参数[Ljava.lang.Object;@7eb27809[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:51:50 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:50 CST 2020时使用参数[Ljava.lang.Object;@716d64cb[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:51:53 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:53 CST 2020时使用参数[Ljava.lang.Object;@31e78a9c[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:51:56 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:56 CST 2020时使用参数[Ljava.lang.Object;@1d25711c[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:51:59 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:51:59 CST 2020时使用参数[Ljava.lang.Object;@20470c7[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:02 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:02 CST 2020时使用参数[Ljava.lang.Object;@4bb657a8[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:05 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:05 CST 2020时使用参数[Ljava.lang.Object;@58ee84fd[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:52:08 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:08 CST 2020时使用参数[Ljava.lang.Object;@4fd1d345[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:11 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:11 CST 2020时使用参数[Ljava.lang.Object;@3a9d1622[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:14 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:14 CST 2020时使用参数[Ljava.lang.Object;@3a4f026a[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:17 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:17 CST 2020时使用参数[Ljava.lang.Object;@20da3007[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:21 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:21 CST 2020时使用参数[Ljava.lang.Object;@398a07bd[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:24 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:24 CST 2020时使用参数[Ljava.lang.Object;@6b30262[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:52:27 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:27 CST 2020时使用参数[Ljava.lang.Object;@11643bb6[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时4毫秒------
2020-12-16 23:52:30 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:30 CST 2020时使用参数[Ljava.lang.Object;@7052dee1[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:33 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:33 CST 2020时使用参数[Ljava.lang.Object;@324f2f8d[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:52:36 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:36 CST 2020时使用参数[Ljava.lang.Object;@4ed97533[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:39 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:39 CST 2020时使用参数[Ljava.lang.Object;@74b8184d[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:52:41 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:41 CST 2020时使用参数[Ljava.lang.Object;@1426bfae[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:44 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:44 CST 2020时使用参数[Ljava.lang.Object;@337a9b84[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:47 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:47 CST 2020时使用参数[Ljava.lang.Object;@2984989e[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:50 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:50 CST 2020时使用参数[Ljava.lang.Object;@287cd38d[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:53 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:53 CST 2020时使用参数[Ljava.lang.Object;@3f8d76a[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:52:57 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:52:57 CST 2020时使用参数[Ljava.lang.Object;@11853901[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时10毫秒------
2020-12-16 23:53:00 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:00 CST 2020时使用参数[Ljava.lang.Object;@71652cce[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:03 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:03 CST 2020时使用参数[Ljava.lang.Object;@737cf751[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:53:06 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:06 CST 2020时使用参数[Ljava.lang.Object;@10022116[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:09 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:09 CST 2020时使用参数[Ljava.lang.Object;@6bf2ea7f[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:53:12 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:12 CST 2020时使用参数[Ljava.lang.Object;@744998c6[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:15 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:15 CST 2020时使用参数[Ljava.lang.Object;@54de0963[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:18 CST 2020时使用参数[Ljava.lang.Object;@68e69412[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:21 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:21 CST 2020时使用参数[Ljava.lang.Object;@63a1d072[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:24 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:24 CST 2020时使用参数[Ljava.lang.Object;@49d7a1f7[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:27 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:27 CST 2020时使用参数[Ljava.lang.Object;@7c2f97d[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:30 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:30 CST 2020时使用参数[Ljava.lang.Object;@2c41e6d1[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:33 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:33 CST 2020时使用参数[Ljava.lang.Object;@40c1c029[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:53:36 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:36 CST 2020时使用参数[Ljava.lang.Object;@51e22669[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:53:39 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:39 CST 2020时使用参数[Ljava.lang.Object;@1361e3e6[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:42 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:42 CST 2020时使用参数[Ljava.lang.Object;@39599323[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:45 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:45 CST 2020时使用参数[Ljava.lang.Object;@312678d6[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:48 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:48 CST 2020时使用参数[Ljava.lang.Object;@7efad2d6[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:51 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:51 CST 2020时使用参数[Ljava.lang.Object;@41916038[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:54 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:54 CST 2020时使用参数[Ljava.lang.Object;@53c97caa[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:53:57 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:53:57 CST 2020时使用参数[Ljava.lang.Object;@383c6b1c[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:00 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:00 CST 2020时使用参数[Ljava.lang.Object;@2ad247b9[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:03 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:03 CST 2020时使用参数[Ljava.lang.Object;@71367208[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:06 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:06 CST 2020时使用参数[Ljava.lang.Object;@762c4a70[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:09 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:09 CST 2020时使用参数[Ljava.lang.Object;@7d29a359[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:12 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:12 CST 2020时使用参数[Ljava.lang.Object;@141bb081[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:15 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:15 CST 2020时使用参数[Ljava.lang.Object;@688aafb8[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:17 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:17 CST 2020时使用参数[Ljava.lang.Object;@40c20340[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:21 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:21 CST 2020时使用参数[Ljava.lang.Object;@44c98034[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:24 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:24 CST 2020时使用参数[Ljava.lang.Object;@4457eac7[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:27 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:27 CST 2020时使用参数[Ljava.lang.Object;@d37ef46[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:30 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:30 CST 2020时使用参数[Ljava.lang.Object;@3ca8395[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:33 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:33 CST 2020时使用参数[Ljava.lang.Object;@1815a488[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:36 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:36 CST 2020时使用参数[Ljava.lang.Object;@741e5992[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:39 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:39 CST 2020时使用参数[Ljava.lang.Object;@21d0d048[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:42 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:42 CST 2020时使用参数[Ljava.lang.Object;@1c975cd2[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:54:45 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:45 CST 2020时使用参数[Ljava.lang.Object;@ee8bfc5[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:48 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:48 CST 2020时使用参数[Ljava.lang.Object;@61e5f04d[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:51 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:51 CST 2020时使用参数[Ljava.lang.Object;@23004620[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:54 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:54 CST 2020时使用参数[Ljava.lang.Object;@45fb630f[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:54:57 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:54:57 CST 2020时使用参数[Ljava.lang.Object;@55852b59[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:00 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:00 CST 2020时使用参数[Ljava.lang.Object;@185d7786[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:03 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:03 CST 2020时使用参数[Ljava.lang.Object;@4d21b6c2[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:06 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:06 CST 2020时使用参数[Ljava.lang.Object;@177405d6[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:09 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:09 CST 2020时使用参数[Ljava.lang.Object;@e266a96[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:12 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:12 CST 2020时使用参数[Ljava.lang.Object;@5b8376d6[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:15 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:15 CST 2020时使用参数[Ljava.lang.Object;@41e7935a[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:55:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:18 CST 2020时使用参数[Ljava.lang.Object;@1e87b424[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:55:21 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:21 CST 2020时使用参数[Ljava.lang.Object;@108d2b30[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:24 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:24 CST 2020时使用参数[Ljava.lang.Object;@7a01c997[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:55:27 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:27 CST 2020时使用参数[Ljava.lang.Object;@3c652032[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:30 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:30 CST 2020时使用参数[Ljava.lang.Object;@495d6339[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:33 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:33 CST 2020时使用参数[Ljava.lang.Object;@2d5e19bd[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:36 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:36 CST 2020时使用参数[Ljava.lang.Object;@66c4907e[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:39 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:39 CST 2020时使用参数[Ljava.lang.Object;@7768e28b[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:42 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:42 CST 2020时使用参数[Ljava.lang.Object;@171c9cbe[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:45 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:45 CST 2020时使用参数[Ljava.lang.Object;@93abba6[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:48 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:48 CST 2020时使用参数[Ljava.lang.Object;@367ee8fb[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:51 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:51 CST 2020时使用参数[Ljava.lang.Object;@623a1495[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:54 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:54 CST 2020时使用参数[Ljava.lang.Object;@586dd23d[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:55:57 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:55:57 CST 2020时使用参数[Ljava.lang.Object;@48d6d953[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:00 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:00 CST 2020时使用参数[Ljava.lang.Object;@3130953b[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:56:03 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:03 CST 2020时使用参数[Ljava.lang.Object;@20a351ff[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:06 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:06 CST 2020时使用参数[Ljava.lang.Object;@7d9714f7[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:09 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:09 CST 2020时使用参数[Ljava.lang.Object;@4c984382[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:56:12 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:12 CST 2020时使用参数[Ljava.lang.Object;@7e243db4[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:15 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:15 CST 2020时使用参数[Ljava.lang.Object;@6ffecf62[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:18 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:18 CST 2020时使用参数[Ljava.lang.Object;@3b82bdc7[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:21 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:21 CST 2020时使用参数[Ljava.lang.Object;@a8a0864[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:24 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:24 CST 2020时使用参数[Ljava.lang.Object;@15473f70[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:27 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:27 CST 2020时使用参数[Ljava.lang.Object;@5c2babf2[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:30 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:30 CST 2020时使用参数[Ljava.lang.Object;@52c06689[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:33 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:33 CST 2020时使用参数[Ljava.lang.Object;@1a8dce07[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:56:36 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:36 CST 2020时使用参数[Ljava.lang.Object;@4f4eb6db[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:39 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:39 CST 2020时使用参数[Ljava.lang.Object;@4e3dd54f[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:43 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 23:56:43 CST 2020时使用参数[Ljava.lang.Object;@1b1c796c[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@24d112e6, top.chris.shop.pojo.Carousel@2784e535, top.chris.shop.pojo.Carousel@56857fd4, top.chris.shop.pojo.Carousel@2eaabb71]，共耗时7毫秒------
2020-12-16 23:56:43 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 23:56:43 CST 2020时使用参数[Ljava.lang.Object;@62f5be19[{}]调用,并得到了结果[top.chris.shop.pojo.Category@3388043a, top.chris.shop.pojo.Category@212160eb, top.chris.shop.pojo.Category@33d39dae, top.chris.shop.pojo.Category@7c99f8bb, top.chris.shop.pojo.Category@fc39ac6, top.chris.shop.pojo.Category@254f85ed, top.chris.shop.pojo.Category@a5e4207, top.chris.shop.pojo.Category@39312fd7, top.chris.shop.pojo.Category@2a37879d, top.chris.shop.pojo.Category@738e1fdb]，共耗时5毫秒------
2020-12-16 23:56:43 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 23:56:43 CST 2020时使用参数[Ljava.lang.Object;@36c2251[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时5毫秒------
2020-12-16 23:56:43 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 23:56:43 CST 2020时使用参数[Ljava.lang.Object;@6e916907[{201216K0NKG6ZN54}]调用,并得到了结果top.chris.shop.pojo.Orders@23d76242，共耗时5毫秒------
2020-12-16 23:56:43 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 23:56:43 CST 2020时使用参数[Ljava.lang.Object;@2822f050[{201216K0NKG6ZN54}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@4d9e6d02]，共耗时3毫秒------
2020-12-16 23:56:43 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 23:56:43 CST 2020时使用参数[Ljava.lang.Object;@55c3c381[{20121488980857028608,201216K0NKG6ZN54}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=fcA%2FZzTB6wu0JJ92Vg5zySDRvvP9Xgx9qYowPoWeuY7rDYfCsp2Y3wzcxJObmpTRs6yffgAH3Fwm6yCc%2FoSK5JVbx5Ef3G9FL7kqn9lyBKCuJOmGHC1uC%2FRsjfdQOedPskv38MmrV1D1p2lyQlDbgZvpNXBhFMdsNpPRzZ0cj9R6gQqqJmX%2Fo75txNJF6ANfcnkryc6P4DjuPcHuVoavTyyh4ANBpo7VZT6zvHrtBB0Nh9PHske9pEtqic0P44ZVdvONPKuNi59CnlhAgn4%2B0AyGGoJIR2OFOQP41DzZLG3OJc5wifDCbhXgRfZ1qvEOgkZNHnxzFka3aY5XpxsMaA%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+23%3A56%3A43&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216K0NKG6ZN54&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】精品龙井茶 居家必备 喝茶最佳  &quot;,&quot;total_amount&quot;:&quot;197&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时32毫秒------
2020-12-16 23:56:43 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 23:56:43 CST 2020时使用参数[Ljava.lang.Object;@3efc906f[{SearchItemsBo(keywords=null, catId=104, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6cfe32c4，共耗时5毫秒------
2020-12-16 23:56:46 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:46 CST 2020时使用参数[Ljava.lang.Object;@4c907157[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:49 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:49 CST 2020时使用参数[Ljava.lang.Object;@61c7af45[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:56:52 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:56:52 CST 2020时使用参数[Ljava.lang.Object;@5f90339f[{201216K0NKG6ZN54}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:58:15 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCarousel在Wed Dec 16 23:58:15 CST 2020时使用参数[Ljava.lang.Object;@1909116f[{}]调用,并得到了结果[top.chris.shop.pojo.Carousel@7ea990c6, top.chris.shop.pojo.Carousel@330bc3f2, top.chris.shop.pojo.Carousel@5cab6920, top.chris.shop.pojo.Carousel@d7889b3]，共耗时2毫秒------
2020-12-16 23:58:15 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersCats在Wed Dec 16 23:58:15 CST 2020时使用参数[Ljava.lang.Object;@6e9f7f40[{}]调用,并得到了结果[top.chris.shop.pojo.Category@2e1c0a50, top.chris.shop.pojo.Category@298599ad, top.chris.shop.pojo.Category@98642a6, top.chris.shop.pojo.Category@1cf649a9, top.chris.shop.pojo.Category@52f69eed, top.chris.shop.pojo.Category@573b3def, top.chris.shop.pojo.Category@6c13d6dc, top.chris.shop.pojo.Category@428671f6, top.chris.shop.pojo.Category@24e19ebd, top.chris.shop.pojo.Category@2abb1b8b]，共耗时5毫秒------
2020-12-16 23:58:15 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.catItems在Wed Dec 16 23:58:15 CST 2020时使用参数[Ljava.lang.Object;@71b21bb[{SearchItemsBo(keywords=null, catId=104, sort=k, page=1, pageSize=10)}]调用,并得到了结果top.chris.shop.util.PagedGridResult@6d85a0ad，共耗时2毫秒------
2020-12-16 23:58:15 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.IndexServiceImpl.rendersSubItemsCats在Wed Dec 16 23:58:15 CST 2020时使用参数[Ljava.lang.Object;@5457f9a6[{1}]调用,并得到了结果RenderSixItemsVo(rootCatName=甜点/蛋糕, slogan=每一道甜品都能打开你的味蕾, bgColor=#fe7a65, catImage=http://122.152.205.72:88/foodie/category/cake.png, simpleItemList=[SimpleItem(itemName=【天天吃货】美味沙琪玛 超棒下午茶, itemId=cake-1004, itemUrl=http://122.152.205.72:88/foodie/cake-1004/img1.png), SimpleItem(itemName=【天天吃货】机器猫最爱 铜锣烧 最美下午茶, itemId=cake-1006, itemUrl=http://122.152.205.72:88/foodie/cake-1006/img2.png), SimpleItem(itemName=【天天吃货】真香预警 超级好吃 手撕面包 儿童早餐早饭, itemId=cake-1001, itemUrl=http://122.152.205.72:88/foodie/cake-1001/img1.png), SimpleItem(itemName=【天天吃货】超好吃华夫饼 美食诱惑 下午茶, itemId=cake-1003, itemUrl=http://122.152.205.72:88/foodie/cake-1003/img1.png), SimpleItem(itemName=【天天吃货】进口美食凤梨酥, itemId=cake-1005, itemUrl=http://122.152.205.72:88/foodie/cake-1005/img1.png), SimpleItem(itemName=【天天吃货】网红烘焙蛋糕 好吃的蛋糕, itemId=cake-1002, itemUrl=http://122.152.205.72:88/foodie/cake-1002/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-39, itemUrl=http://122.152.205.72:88/foodie/cake-39/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-44, itemUrl=http://122.152.205.72:88/foodie/cake-44/img1.png), SimpleItem(itemName=好吃蛋饼 来自日本进口, itemId=cake-48, itemUrl=http://122.152.205.72:88/foodie/cake-48/img1.png), SimpleItem(itemName=好吃蛋糕甜点软面包, itemId=cake-38, itemUrl=http://122.152.205.72:88/foodie/cake-38/img1.png), SimpleItem(itemName=好吃蛋糕甜点脱水蛋糕, itemId=cake-42, itemUrl=http://122.152.205.72:88/foodie/cake-42/img1.png), SimpleItem(itemName=好吃鸡蛋卷 来自日本进口, itemId=cake-47, itemUrl=http://122.152.205.72:88/foodie/cake-47/img1.png), SimpleItem(itemName=好吃蛋糕甜点蒸蛋糕, itemId=cake-37, itemUrl=http://122.152.205.72:88/foodie/cake-37/img1.png)])，共耗时3毫秒------
2020-12-16 23:58:19 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemPageInfo在Wed Dec 16 23:58:19 CST 2020时使用参数[Ljava.lang.Object;@29d5e20e[{nut-1004}]调用,并得到了结果RenderItemInfoVo(item=RenderItemInfoVo.SimpleItem(itemName=【天天吃货】进口核桃 养生补脑最佳零食, sellCounts=751, content=<p>超级好吃、非常好吃</p><img src="http://122.152.205.72:88/foodie/nut-1004/img1.png"><img src="http://122.152.205.72:88/foodie/nut-1004/img2.png">), itemImgList=[RenderItemInfoVo.SimpleItemsImg(isMain=1, url=http://122.152.205.72:88/foodie/nut-1004/img1.png), RenderItemInfoVo.SimpleItemsImg(isMain=0, url=http://122.152.205.72:88/foodie/nut-1004/img2.png)], itemSpecList=[RenderItemInfoVo.SimpleItemsSpec(id=nut-1004-spec-1, name=甜, priceDiscount=6210, priceNormal=6900, stock=260, discounts=0.90), RenderItemInfoVo.SimpleItemsSpec(id=nut-1004-spec-2, name=辣, priceDiscount=5440, priceNormal=6800, stock=305, discounts=0.80), RenderItemInfoVo.SimpleItemsSpec(id=nut-1004-spec-3, name=原味, priceDiscount=6900, priceNormal=6900, stock=198, discounts=1.00)], itemParams=RenderItemInfoVo.SimpleItemsParam(producPlace=中国, brand=天天吃货, factoryName=北京天天吃货有限公司, factoryAddress=北京中关村, packagingMethod=袋装, footPeriod=180天, weight=50g, storageMethod=常温5~25°, eatMethod=拆开即食))，共耗时6毫秒------
2020-12-16 23:58:19 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentByItemIdAndLevel在Wed Dec 16 23:58:19 CST 2020时使用参数[Ljava.lang.Object;@2ee2e739[{CommentBo(itemId=nut-1004, level=),1,10}]调用,并得到了结果top.chris.shop.util.PagedGridResult@440d2f87，共耗时2毫秒------
2020-12-16 23:58:19 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderCommentLevelyItemId在Wed Dec 16 23:58:19 CST 2020时使用参数[Ljava.lang.Object;@23a02c1[{nut-1004}]调用,并得到了结果CountsVo(totalCounts=0, goodCounts=0, normalCounts=0, badCounts=0)，共耗时2毫秒------
2020-12-16 23:59:19 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.renderShopCart在Wed Dec 16 23:59:19 CST 2020时使用参数[Ljava.lang.Object;@208a58c4[{{nut-1004-spec-1}}]调用,并得到了结果[ShopCartVo(specId=nut-1004-spec-1, itemImgUrl=http://122.152.205.72:88/foodie/nut-1004/img1.png, itemName=【天天吃货】进口核桃 养生补脑最佳零食, specName=甜, priceNormal=6900, priceDiscount=6210)]，共耗时3毫秒------
2020-12-16 23:59:21 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.renderUserAddress在Wed Dec 16 23:59:21 CST 2020时使用参数[Ljava.lang.Object;@4a24accd[{20121488980857028608}]调用,并得到了结果[AddressVo(id=2012169WN0HRW094, receiver=张国民, mobile=18000000000, province=四川, district=金牛区, detail=成都五号路口809房, city=成都, isDefault=0)]，共耗时3毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.AddressServiceImpl.queryUserAddressByAddressId在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@407129e9[{2012169WN0HRW094}]调用,并得到了结果top.chris.shop.pojo.UserAddress@1b3be043，共耗时2毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemSpecByitemSpecIds在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@c00defa[{[nut-1004-spec-1]}]调用,并得到了结果[top.chris.shop.pojo.ItemsSpec@45f790f2]，共耗时2毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemImgByItemId在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@748b38be[{nut-1004}]调用,并得到了结果top.chris.shop.pojo.ItemsImg@7ef6cfdb，共耗时2毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.queryItemByItemId在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@5469840e[{nut-1004}]调用,并得到了结果top.chris.shop.pojo.Items@790a18f5，共耗时2毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.ItemsServiceImpl.decreaseItemSpecStock在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@53995a5d[{top.chris.shop.pojo.ItemsSpec@45f790f2}]调用,并得到了结果1，共耗时1毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.CreateOrders在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@1320d3c6[{OrdersCreatBo(userId=20121488980857028608, itemSpecIds=nut-1004-spec-1, addressId=2012169WN0HRW094, leftMsg=, payMethod=2)}]调用,并得到了结果201216K3BZZPPZR4，共耗时17毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.util.CookieUtils >> Method: top.chris.shop.util.CookieUtils.doSetCookie(CookieUtils.java:202) ]
INFO:========== domainName: localhost ==========
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderByOrderId在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@3bfbc367[{201216K3BZZPPZR4}]调用,并得到了结果top.chris.shop.pojo.Orders@57570d27，共耗时3毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderItemsByOrderId在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@1a839624[{201216K3BZZPPZR4}]调用,并得到了结果[top.chris.shop.pojo.OrderItems@90a1e8b]，共耗时4毫秒------
2020-12-16 23:59:29 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.PayServiceImpl.toPay在Wed Dec 16 23:59:29 CST 2020时使用参数[Ljava.lang.Object;@2521c2ea[{20121488980857028608,201216K3BZZPPZR4}]调用,并得到了结果<form name="punchout_form" method="post" action="https://openapi.alipaydev.com/gateway.do?charset=utf-8&method=alipay.trade.page.pay&sign=Yc8rjU1Ek367ieBhIfhMIiF3%2B1FLpbfpXVicUFDwRjXtDbIG%2Fy9swhtX%2FiReMPoGh75aN3lnS90olc%2BoeDn3oHViFwS76NRx9%2Bz8XBXdEeW2dg4ZGK0xGMFkBU1g6UG9SyypRQJq96Njyaj5fAp%2Bdv8%2BBrhO3jMYAUDIMaPeylLOI4UD4blCcFKd%2B5aIXdw39dKCD7wmh3KGw1JxV2mwkMQ2qcDm%2BrTFCGBsVD9d6ZDvP2qn6IiKaOlvO%2BK679enPhvyU5dqsDI6CJR07R%2FxLTQzUrouj4bMlE7Jvet5ljj8GHW%2BEENkeMzmIeYDDzXXjd4XsqOqtEuQDn29RxRCpw%3D%3D&return_url=http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fcallback%3Fmethod%3Dcallback&version=1.0&app_id=2021000116670674&sign_type=RSA2&timestamp=2020-12-16+23%3A59%3A29&alipay_sdk=alipay-sdk-java-3.7.110.ALL&format=json">
<input type="hidden" name="biz_content" value="{&quot;out_trade_no&quot;:&quot;201216K3BZZPPZR4&quot;,&quot;product_code&quot;:&quot;FAST_INSTANT_TRADE_PAY&quot;,&quot;subject&quot;:&quot;【天天吃货】进口核桃 养生补脑最佳零食  &quot;,&quot;total_amount&quot;:&quot;72&quot;}">
<input type="submit" value="立即支付" style="display:none" >
</form>
<script>document.forms[0].submit();</script>，共耗时35毫秒------
2020-12-16 23:59:32 下午 [Thread: http-nio-8080-exec-10][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:32 CST 2020时使用参数[Ljava.lang.Object;@327c974b[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:59:35 下午 [Thread: http-nio-8080-exec-1][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:35 CST 2020时使用参数[Ljava.lang.Object;@553434bc[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:59:38 下午 [Thread: http-nio-8080-exec-2][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:38 CST 2020时使用参数[Ljava.lang.Object;@7a894d2b[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:59:41 下午 [Thread: http-nio-8080-exec-3][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:41 CST 2020时使用参数[Ljava.lang.Object;@3259aea1[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:59:44 下午 [Thread: http-nio-8080-exec-4][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:44 CST 2020时使用参数[Ljava.lang.Object;@35268fe1[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时2毫秒------
2020-12-16 23:59:47 下午 [Thread: http-nio-8080-exec-5][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:47 CST 2020时使用参数[Ljava.lang.Object;@37ca7844[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:59:50 下午 [Thread: http-nio-8080-exec-6][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:50 CST 2020时使用参数[Ljava.lang.Object;@4ee02fd1[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:59:53 下午 [Thread: http-nio-8080-exec-7][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:53 CST 2020时使用参数[Ljava.lang.Object;@19805e6e[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时1毫秒------
2020-12-16 23:59:56 下午 [Thread: http-nio-8080-exec-8][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:56 CST 2020时使用参数[Ljava.lang.Object;@79013862[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时3毫秒------
2020-12-16 23:59:59 下午 [Thread: http-nio-8080-exec-9][ Class:top.chris.shop.aspect.LogTimeAspect >> Method: top.chris.shop.aspect.LogTimeAspect.arroundServiceLog(LogTimeAspect.java:31) ]
INFO:------方法top.chris.shop.service.impl.OrdersServiceImpl.queryOrderStatusByOrderId在Wed Dec 16 23:59:59 CST 2020时使用参数[Ljava.lang.Object;@632317b9[{201216K3BZZPPZR4}]调用,并得到了结果10，共耗时1毫秒------
